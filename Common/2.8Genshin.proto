syntax = "proto3";


message AISnapshotEntityData {
  float tick_time = 5;
  uint32 tactic = 2;
  repeated AISnapshotEntitySkillCycle finished_skill_cycles = 9;
  float moved_distance = 4;
  uint32 ai_target_id = 13;
  uint32 threat_target_id = 3;
  uint32 threat_list_size = 1;
  uint32 entity_id = 15;
  map<uint32, uint32> hitting_avatars = 7;
  float distance_to_player = 11;
  uint32 attack_target_id = 10;
  float real_time = 14;
}

message AISnapshotEntitySkillCycle {
  bool failed = 12;
  bool trydoskill = 8;
  bool success = 9;
  bool selected = 1;
  uint32 skill_id = 2;
}


message AISnapshotInfo {
  repeated AISnapshotEntityData ai_snapshots = 13;
}


message AbilityActionBlink {
  Vector rot = 11;
  Vector pos = 10;
}


message AbilityActionCreateGadget {
  uint32 room_id = 3;
  Vector rot = 8;
  Vector pos = 11;
}


message AbilityActionCreateTile {
  Vector rot = 3;
  Vector pos = 8;
}


message AbilityActionDestroyTile {
  Vector rot = 3;
  Vector pos = 1;
}


message AbilityActionFireAfterImage {
  Vector dir = 12;
}


message AbilityActionGenerateElemBall {
  uint32 room_id = 2;
  Vector pos = 7;
  Vector rot = 13;
}

message AbilityActionServerMonsterLog {
  repeated int32 param_list = 2;
}


message AbilityActionSetCrashDamage {
  Vector hit_pos = 2;
  float damage = 15;
}

message AbilityActionSetRandomOverrideMapValue {
  float random_value = 1;
}


message AbilityActionSummon {
  Vector pos = 10;
  Vector rot = 1;
}

message AbilityActionTriggerAbility {
  uint32 other_id = 14;
}


message AbilityAppliedAbility {
  AbilityString ability_name = 1;
  AbilityString ability_override = 2;
  repeated AbilityScalarValueEntry override_map = 3;
  uint32 instanced_ability_id = 4;
}


message AbilityAppliedModifier {
  int32 modifier_local_id = 1;
  uint32 parent_ability_entity_id = 2;
  AbilityString parent_ability_name = 3;
  AbilityString parent_ability_override = 4;
  uint32 instanced_ability_id = 5;
  uint32 instanced_modifier_id = 6;
  float exist_duration = 7;
  AbilityAttachedModifier attached_instanced_modifier = 8;
  uint32 apply_entity_id = 9;
  bool is_attached_parent_ability = 10;
  ModifierDurability modifier_durability = 11;
  uint32 sbuff_uid = 12;
  bool is_serverbuff_modifier = 13;
}

message AbilityApplyLevelModifier {
  uint32 apply_entity_id = 6;
}

message AbilityArgument {
  oneof arg {
    uint32 int_arg = 5;
    float float_arg = 15;
    string str_arg = 11;
  }
}

message AbilityAttachedModifier {
  bool is_invalid = 1;
  uint32 owner_entity_id = 2;
  uint32 instanced_modifier_id = 3;
  bool is_serverbuff_modifier = 4;
  int32 attach_name_hash = 5;
}


message AbilityBornType {
  Vector rot = 2;
  Vector move_dir = 14;
  Vector pos = 5;
}


// CmdId: 1131
// EnetChannelId: 0
// EnetIsReliable: true
message AbilityChangeNotify {
  uint32 entity_id = 1;
  AbilityControlBlock ability_control_block = 15;
}


message AbilityControlBlock {
  repeated AbilityEmbryo ability_embryo_list = 1;
}

message AbilityEmbryo {
  uint32 ability_id = 1;
  fixed32 ability_name_hash = 2;
  fixed32 ability_override_name_hash = 3;
}

message AbilityFloatValue {
  float value = 1;
}

message AbilityGadgetInfo {
  uint32 camp_id = 1;
  uint32 camp_target_type = 2;
  uint32 target_entity_id = 3;
}

message AbilityIdentifier {
  uint32 modifier_owner_id = 2;
  uint32 instanced_modifier_id = 9;
  uint32 instanced_ability_id = 10;
  bool is_serverbuff_modifier = 6;
  uint32 ability_caster_id = 15;
  int32 local_id = 3;
}


// CmdId: 1107
// EnetChannelId: 0
// EnetIsReliable: true
message AbilityInvocationFailNotify {
  string reason = 7;
  uint32 entity_id = 13;
  AbilityInvokeEntry invoke = 3;
}


// CmdId: 1172
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AbilityInvocationFixedNotify {
  AbilityInvokeEntry invoke_6_th = 14;
  AbilityInvokeEntry invoke_5_th = 8;
  AbilityInvokeEntry invoke_4_th = 1;
  AbilityInvokeEntry invoke_2_nd = 5;
  AbilityInvokeEntry invoke_1_st = 10;
  AbilityInvokeEntry invoke_3_rd = 12;
}


// CmdId: 1198
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AbilityInvocationsNotify {
  repeated AbilityInvokeEntry invokes = 2;
}

enum AbilityInvokeArgument {
  ABILITY_INVOKE_ARGUMENT_NONE = 0;
  ABILITY_INVOKE_ARGUMENT_META_MODIFIER_CHANGE = 1;
  ABILITY_INVOKE_ARGUMENT_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2;
  ABILITY_INVOKE_ARGUMENT_META_SPECIAL_FLOAT_ARGUMENT = 3;
  ABILITY_INVOKE_ARGUMENT_META_OVERRIDE_PARAM = 4;
  ABILITY_INVOKE_ARGUMENT_META_CLEAR_OVERRIDE_PARAM = 5;
  ABILITY_INVOKE_ARGUMENT_META_REINIT_OVERRIDEMAP = 6;
  ABILITY_INVOKE_ARGUMENT_META_GLOBAL_FLOAT_VALUE = 7;
  ABILITY_INVOKE_ARGUMENT_META_CLEAR_GLOBAL_FLOAT_VALUE = 8;
  ABILITY_INVOKE_ARGUMENT_META_ABILITY_ELEMENT_STRENGTH = 9;
  ABILITY_INVOKE_ARGUMENT_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10;
  ABILITY_INVOKE_ARGUMENT_META_SET_KILLED_STATE = 11;
  ABILITY_INVOKE_ARGUMENT_META_SET_ABILITY_TRIGGER = 12;
  ABILITY_INVOKE_ARGUMENT_META_ADD_NEW_ABILITY = 13;
  ABILITY_INVOKE_ARGUMENT_META_REMOVE_ABILITY = 14;
  ABILITY_INVOKE_ARGUMENT_META_SET_MODIFIER_APPLY_ENTITY = 15;
  ABILITY_INVOKE_ARGUMENT_META_MODIFIER_DURABILITY_CHANGE = 16;
  ABILITY_INVOKE_ARGUMENT_META_ELEMENT_REACTION_VISUAL = 17;
  ABILITY_INVOKE_ARGUMENT_META_SET_POSE_PARAMETER = 18;
  ABILITY_INVOKE_ARGUMENT_META_UPDATE_BASE_REACTION_DAMAGE = 19;
  ABILITY_INVOKE_ARGUMENT_META_TRIGGER_ELEMENT_REACTION = 20;
  ABILITY_INVOKE_ARGUMENT_META_LOSE_HP = 21;
  ABILITY_INVOKE_ARGUMENT_Unk2700_JDDDLJELBLJ = 22;
  ABILITY_INVOKE_ARGUMENT_ACTION_TRIGGER_ABILITY = 50;
  ABILITY_INVOKE_ARGUMENT_ACTION_SET_CRASH_DAMAGE = 51;
  ABILITY_INVOKE_ARGUMENT_ACTION_EFFECT = 52;
  ABILITY_INVOKE_ARGUMENT_ACTION_SUMMON = 53;
  ABILITY_INVOKE_ARGUMENT_ACTION_BLINK = 54;
  ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_GADGET = 55;
  ABILITY_INVOKE_ARGUMENT_ACTION_APPLY_LEVEL_MODIFIER = 56;
  ABILITY_INVOKE_ARGUMENT_ACTION_GENERATE_ELEM_BALL = 57;
  ABILITY_INVOKE_ARGUMENT_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE = 58;
  ABILITY_INVOKE_ARGUMENT_ACTION_SERVER_MONSTER_LOG = 59;
  ABILITY_INVOKE_ARGUMENT_ACTION_CREATE_TILE = 60;
  ABILITY_INVOKE_ARGUMENT_ACTION_DESTROY_TILE = 61;
  ABILITY_INVOKE_ARGUMENT_ACTION_FIRE_AFTER_IMAGE = 62;
  ABILITY_INVOKE_ARGUMENT_Unk2700_FNANDDPDLOL = 63;
  ABILITY_INVOKE_ARGUMENT_MIXIN_AVATAR_STEER_BY_CAMERA = 100;
  ABILITY_INVOKE_ARGUMENT_MIXIN_MONSTER_DEFEND = 101;
  ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_ZONE = 102;
  ABILITY_INVOKE_ARGUMENT_MIXIN_COST_STAMINA = 103;
  ABILITY_INVOKE_ARGUMENT_MIXIN_ELITE_SHIELD = 104;
  ABILITY_INVOKE_ARGUMENT_MIXIN_ELEMENT_SHIELD = 105;
  ABILITY_INVOKE_ARGUMENT_MIXIN_GLOBAL_SHIELD = 106;
  ABILITY_INVOKE_ARGUMENT_MIXIN_SHIELD_BAR = 107;
  ABILITY_INVOKE_ARGUMENT_MIXIN_WIND_SEED_SPAWNER = 108;
  ABILITY_INVOKE_ARGUMENT_MIXIN_DO_ACTION_BY_ELEMENT_REACTION = 109;
  ABILITY_INVOKE_ARGUMENT_MIXIN_FIELD_ENTITY_COUNT_CHANGE = 110;
  ABILITY_INVOKE_ARGUMENT_MIXIN_SCENE_PROP_SYNC = 111;
  ABILITY_INVOKE_ARGUMENT_MIXIN_WIDGET_MP_SUPPORT = 112;
  ABILITY_INVOKE_ARGUMENT_Unk2700_NJHBFADEOON = 113;
  ABILITY_INVOKE_ARGUMENT_Unk2700_EGCIFFFLLBG = 114;
  ABILITY_INVOKE_ARGUMENT_Unk2700_OFDGFACOLDI = 115;
  ABILITY_INVOKE_ARGUMENT_Unk2700_KDPKJGJNGFB = 116;
}


message AbilityInvokeEntry {
  AbilityInvokeArgument argument_type = 1;
  AbilityInvokeEntryHead head = 2;
  uint32 forward_peer = 4;
  uint32 event_id = 12;
  ForwardType forward_type = 3;
  bytes ability_data = 15;
  double total_tick_time = 14;
  uint32 entity_id = 9;
}

message AbilityInvokeEntryHead {
  int32 modifier_config_local_id = 7;
  bool is_serverbuff_modifier = 2;
  uint32 instanced_ability_id = 1;
  uint32 instanced_modifier_id = 12;
  int32 local_id = 10;
  uint32 server_buff_uid = 14;
  uint32 target_id = 3;
}


message AbilityMetaAddAbility {
  AbilityAppliedAbility ability = 12;
}


message AbilityMetaAddOrGetAbilityAndTrigger {
  AbilityString ability_name = 13;
  float trigger_argument = 3;
  AbilityString ability_override = 8;
}

message AbilityMetaElementReactionVisual {
  int32 hit_index = 2;
  uint32 element_source_type = 12;
  uint32 element_reactor_type = 6;
  uint32 element_reaction_type = 5;
}

message AbilityMetaLoseHp {
  uint32 lose_hp_config_idx = 10;
}



message AbilityMetaModifierChange {
  AbilityAttachedModifier attached_instanced_modifier = 7;
  uint32 server_buff_uid = 4;
  bool is_attached_parent_ability = 10;
  ModifierAction action = 13;
  int32 modifier_local_id = 2;
  AbilityString parent_ability_name = 1;
  bool is_mute_remote = 6;
  uint32 apply_entity_id = 5;
  repeated ModifierProperty properties = 3;
  AbilityString parent_ability_override = 11;
  bool Unk2700_PMJMNCFJPDC = 9;
}

message AbilityMetaModifierDurabilityChange {
  float reduce_durability = 6;
  float remain_durability = 15;
}


message AbilityMetaReInitOverrideMap {
  repeated AbilityScalarValueEntry override_map = 7;
}

message AbilityMetaSetAbilityTrigger {
  uint32 trigger_ability_entity_id = 11;
}

message AbilityMetaSetKilledState {
  bool killed = 2;
}

message AbilityMetaSetModifierApplyEntityId {
  uint32 apply_entity_id = 10;
}


message AbilityMetaSetPoseParameter {
  AnimatorParameterValueInfoPair value = 6;
}

message AbilityMetaSpecialFloatArgument {
  float argument_value = 14;
  bool is_on = 10;
}

message AbilityMetaTriggerElementReaction {
  int32 hit_index = 9;
  uint32 element_source_type = 7;
  uint32 element_reactor_type = 12;
  uint32 trigger_entity_id = 2;
  uint32 element_reaction_type = 1;
}


message AbilityMetaUpdateBaseReactionDamage {
  uint32 source_caster_id = 15;
  AbilityString global_value_key = 4;
  uint32 reaction_type = 8;
}


message AbilityMixinAvatarSteerByCamera {
  Vector target_dir = 7;
  Vector target_pos = 6;
}

message AbilityMixinCostStamina {
  bool is_swim = 3;
}

message AbilityMixinDoActionByElementReaction {
  uint32 target_entity_id = 1;
}

message AbilityMixinElementShield {
  float sub_shield = 10;
  float shield = 8;
  uint32 absorb_type = 1;
  uint32 Unk2700_PBKBDDLNBEA = 4;
  bool is_shield_broken = 9;
  float max_shield = 12;
}

message AbilityMixinEliteShield {
  float sub_shield = 2;
}

message AbilityMixinEmpty {
  bool is_swim = 1;
}

message AbilityMixinFieldEntityCountChange {
  uint32 field_entity_count = 14;
}

message AbilityMixinGlobalShield {
  bool is_create_effect = 4;
  float sub_shield = 7;
  float height_offset = 5;
  uint32 avatar_id = 11;
  float max_shield = 10;
  string shield_effect_name = 2;
}


message AbilityMixinRecoverInfo {
  uint32 local_id = 3;
  repeated uint32 data_list = 4;
  bool is_serverbuff_modifier = 5;
  repeated MassivePropSyncInfo massive_prop_list = 6;
  oneof source {
    uint32 instanced_ability_id = 1;
    uint32 instanced_modifier_id = 2;
  }
}


message AbilityMixinScenePropSync {
  repeated int64 delete_id_list = 5;
  bool is_clear_all = 12;
  repeated MassivePropSyncInfo massive_prop_list = 15;
}

message AbilityMixinShieldBar {
  uint32 Unk2700_PBKBDDLNBEA = 14;
  float max_shield = 15;
  float shield = 12;
  uint32 element_type = 13;
}

message AbilityMixinWidgetMpSupport {
  uint32 target_entity_id = 9;
}


message AbilityMixinWindSeedSpawner {
  oneof cmd {
    AddSignal add_signal = 2;
    RefreshSeed refresh_seed = 15;
    CatchSeed catch_seed = 11;
  }
  message AddSignal {}
  message RefreshSeed {
    repeated Vector pos_list = 6;
  }
  message CatchSeed {
    uint32 entity_id = 8;
  }
}

message AbilityMixinWindZone {
  repeated uint32 entity_ids = 13;
  repeated uint32 zone_id_list = 10;
}

enum AbilityScalarType {
  ABILITY_SCALAR_TYPE_UNKNOW = 0;
  ABILITY_SCALAR_TYPE_FLOAT = 1;
  ABILITY_SCALAR_TYPE_INT = 2;
  ABILITY_SCALAR_TYPE_BOOL = 3;
  ABILITY_SCALAR_TYPE_TRIGGER = 4;
  ABILITY_SCALAR_TYPE_STRING = 5;
  ABILITY_SCALAR_TYPE_UINT = 6;
}


message AbilityScalarValueEntry {
  AbilityString key = 1;
  AbilityScalarType value_type = 2;
  oneof value {
    float float_value = 3;
    string string_value = 4;
    int32 int_value = 5;
    uint32 uint_value = 6;
  }
}

message AbilityString {
  oneof type {
    string str = 1;
    uint32 hash = 2;
  }
}



message AbilitySyncStateInfo {
  bool is_inited = 1;
  repeated AbilityScalarValueEntry dynamic_value_map = 2;
  repeated AbilityAppliedAbility applied_abilities = 3;
  repeated AbilityAppliedModifier applied_modifiers = 4;
  repeated AbilityMixinRecoverInfo mixin_recover_infos = 5;
  repeated AbilityScalarValueEntry sgv_dynamic_value_map = 6;
}

// CmdId: 2890
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AcceptCityReputationRequestReq {
  uint32 city_id = 14;
  uint32 request_id = 5;
}

// CmdId: 2873
// EnetChannelId: 0
// EnetIsReliable: true
message AcceptCityReputationRequestRsp {
  uint32 request_id = 5;
  uint32 city_id = 13;
  int32 retcode = 2;
}

message Achievement {
  uint32 finish_timestamp = 11;
  Status status = 13;
  uint32 cur_progress = 12;
  uint32 id = 14;
  uint32 total_progress = 8;
  enum Status {
    STATUS_INVALID = 0;
    STATUS_UNFINISHED = 1;
    STATUS_FINISHED = 2;
    STATUS_REWARD_TAKEN = 3;
  }
}


// CmdId: 2676
// EnetChannelId: 0
// EnetIsReliable: true
message AchievementAllDataNotify {
  repeated Achievement achievement_list = 4;
  repeated uint32 reward_taken_goal_id_list = 2;
}


// CmdId: 2668
// EnetChannelId: 0
// EnetIsReliable: true
message AchievementUpdateNotify {
  repeated Achievement achievement_list = 14;
}

// CmdId: 2008
// EnetChannelId: 0
// EnetIsReliable: true
message ActivityCoinInfoNotify {
  uint32 schedule_id = 8;
  uint32 activity_id = 10;
  map<uint32, uint32> activity_coin_map = 2;
}


// CmdId: 2140
// EnetChannelId: 0
// EnetIsReliable: true
message ActivityCondStateChangeNotify {
  repeated uint32 activated_sale_id_list = 9;
  uint32 activity_id = 4;
  uint32 schedule_id = 5;
  repeated uint32 expire_cond_list = 11;
  repeated Uint32Pair disable_transfer_point_interaction_list = 12;
  repeated uint32 meet_cond_list = 1;
}


// CmdId: 8982
// EnetChannelId: 0
// EnetIsReliable: true
message ActivityDisableTransferPointInteractionNotify {
  bool is_disable = 10;
  Uint32Pair scene_point_pair = 5;
}















message ActivityInfo {
  bool is_play_open_anim = 13;
  uint32 schedule_id = 15;
  uint32 cur_score = 1906;
  bool is_starting = 9;
  repeated uint32 taken_reward_list = 329;
  bool Unk2700_NONJFHAIFLA = 102;
  uint32 selected_avatar_reward_id = 1290;
  uint32 first_day_start_time = 592;
  uint32 score_limit = 1958;
  bool is_finished = 6;
  bool is_hidden = 919;
  uint32 begin_time = 8;
  uint32 end_time = 5;
  map<uint32, uint32> activity_coin_map = 682;
  uint32 activity_type = 4;
  bool Unk2700_EDKLLHBEEGE = 1449;
  repeated Unk2800_PHPHMILPOLC Unk2800_KOMIPKKKOBE = 864;
  repeated uint32 meet_cond_list = 10;
  map<uint32, uint32> Unk2700_IFPBCNLCKLG = 1399;
  repeated uint32 expire_cond_list = 3;
  repeated ActivityWatcherInfo watcher_info_list = 2;
  uint32 activity_id = 12;
  oneof detail {
    SeaLampActivityDetailInfo sam_lamp_info = 7;
    CrucibleActivityDetailInfo crucible_info = 14;
    SalesmanActivityDetailInfo salesman_info = 11;
    TrialAvatarActivityDetailInfo trial_avatar_info = 1;
    DeliveryActivityDetailInfo delivery_info = 1092;
    AsterActivityDetailInfo aster_info = 557;
    FlightActivityDetailInfo flight_info = 1365;
    DragonSpineActivityDetailInfo dragon_spine_info = 1727;
    EffigyActivityDetailInfo effigy_info = 391;
    TreasureMapActivityDetailInfo treasure_map_info = 1114;
    BlessingActivityDetailInfo blessing_info = 1869;
    SeaLampActivityInfo sea_lamp_info = 494;
    ExpeditionActivityDetailInfo expedition_info = 202;
    ArenaChallengeActivityDetailInfo arena_challenge_info = 859;
    FleurFairActivityDetailInfo fleur_fair_info = 857;
    WaterSpiritActivityDetailInfo water_spirit_info = 1675;
    ChannelerSlabActivityDetailInfo channeler_slab_info = 1015;
    MistTrialActivityDetailInfo mist_trial_activity_info = 156;
    HideAndSeekActivityDetailInfo hide_and_seek_info = 427;
    FindHilichurlDetailInfo find_hilichurl_info = 1411;
    SummerTimeDetailInfo summer_time_info = 1372;
    BuoyantCombatDetailInfo buoyant_combat_info = 1842;
    EchoShellDetailInfo echo_shell_info = 1113;
    BounceConjuringActivityDetailInfo bounce_conjuring_info = 767;
    BlitzRushActivityDetailInfo blitz_rush_info = 794;
    ChessActivityDetailInfo chess_info = 927;
    SumoActivityDetailInfo sumo_info = 1261;
    MoonfinTrialActivityDetailInfo moonfin_trial_info = 1588;
    LunaRiteDetailInfo luna_rite_info = 814;
    PlantFlowerActivityDetailInfo plant_flower_info = 54;
    MusicGameActivityDetailInfo music_game_info = 460;
    RoguelikeDungeonActivityDetailInfo roguelike_dungeon_info = 219;
    DigActivityDetailInfo dig_info = 403;
    HachiActivityDetailInfo hachi_info = 491;
    WinterCampActivityDetailInfo winter_camp_info = 1083;
    PotionActivityDetailInfo potion_info = 1273;
    TanukiTravelActivityDetailInfo tanuki_travel_activity_info = 1796;
    LanternRiteActivityDetailInfo lantern_rite_activity_info = 1876;
    MichiaeMatsuriActivityDetailInfo michiae_matsuri_info = 194;
    BartenderActivityDetailInfo bartender_info = 1725;
    UgcActivityDetailInfo ugc_info = 703;
    CrystalLinkActivityDetailInfo crystal_link_info = 1226;
    IrodoriActivityDetailInfo irodori_info = 750;
    PhotoActivityDetailInfo photo_info = 328;
    SpiceActivityDetailInfo spice_info = 1891;
    GachaActivityDetailInfo gacha_info = 825;
    LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 1308;
    RogueDiaryActivityDetailInfo rogue_diary_info = 812;
    SummerTimeV2DetailInfo summer_time_v_2_info = 622;
    IslandPartyActivityDetailInfo island_party_info = 1885;
    GearActivityDetailInfo gear_info = 722;
  }
}


// CmdId: 2060
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ActivityInfoNotify {
  ActivityInfo activity_info = 9;
}

// CmdId: 2157
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ActivityPlayOpenAnimNotify {
  uint32 activity_id = 8;
}

// CmdId: 2071
// EnetChannelId: 0
// EnetIsReliable: true
message ActivitySaleChangeNotify {
  uint32 sale_id = 5;
  bool is_close = 1;
}

message ActivityScheduleInfo {
  uint32 schedule_id = 13;
  bool is_open = 2;
  uint32 activity_id = 14;
  uint32 end_time = 1;
  uint32 begin_time = 10;
}


// CmdId: 2073
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ActivityScheduleInfoNotify {
  repeated ActivityScheduleInfo activity_schedule_list = 12;
  uint32 remain_fly_sea_lamp_num = 6;
}

// CmdId: 2028
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ActivitySelectAvatarCardReq {
  uint32 activity_id = 15;
  uint32 reward_id = 10;
}

// CmdId: 2189
// EnetChannelId: 0
// EnetIsReliable: true
message ActivitySelectAvatarCardRsp {
  uint32 activity_id = 4;
  int32 retcode = 3;
  uint32 reward_id = 9;
}

message ActivityShopSheetInfo {
  uint32 end_time = 1;
  uint32 begin_time = 12;
  uint32 sheet_id = 2;
}

// CmdId: 8372
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ActivityTakeAllScoreRewardReq {
  uint32 activity_id = 9;
}

// CmdId: 8043
// EnetChannelId: 0
// EnetIsReliable: true
message ActivityTakeAllScoreRewardRsp {
  repeated uint32 reward_config_list = 14;
  int32 retcode = 15;
  uint32 activity_id = 7;
}

// CmdId: 8971
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ActivityTakeScoreRewardReq {
  uint32 reward_config_id = 12;
  uint32 activity_id = 9;
}

// CmdId: 8583
// EnetChannelId: 0
// EnetIsReliable: true
message ActivityTakeScoreRewardRsp {
  uint32 activity_id = 13;
  int32 retcode = 9;
  uint32 reward_config_id = 15;
}

// CmdId: 2159
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ActivityTakeWatcherRewardBatchReq {
  repeated uint32 watcher_id_list = 11;
  uint32 activity_id = 3;
}


// CmdId: 2109
// EnetChannelId: 0
// EnetIsReliable: true
message ActivityTakeWatcherRewardBatchRsp {
  repeated uint32 watcher_id_list = 6;
  int32 retcode = 15;
  uint32 activity_id = 7;
  repeated ItemParam item_list = 1;
}

// CmdId: 2038
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ActivityTakeWatcherRewardReq {
  uint32 activity_id = 4;
  uint32 watcher_id = 14;
}

// CmdId: 2034
// EnetChannelId: 0
// EnetIsReliable: true
message ActivityTakeWatcherRewardRsp {
  uint32 activity_id = 14;
  uint32 watcher_id = 7;
  int32 retcode = 9;
}


// CmdId: 2156
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ActivityUpdateWatcherNotify {
  ActivityWatcherInfo watcher_info = 2;
  uint32 activity_id = 1;
}

message ActivityWatcherInfo {
  bool is_taken_reward = 8;
  uint32 cur_progress = 2;
  uint32 total_progress = 4;
  uint32 watcher_id = 5;
}

// CmdId: 4088
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AddBlacklistReq {
  uint32 target_uid = 2;
}


// CmdId: 4026
// EnetChannelId: 0
// EnetIsReliable: true
message AddBlacklistRsp {
  FriendBrief target_friend_brief = 13;
  int32 retcode = 7;
}


// CmdId: 4022
// EnetChannelId: 0
// EnetIsReliable: true
message AddFriendNotify {
  uint32 target_uid = 11;
  FriendBrief target_friend_brief = 10;
}


// CmdId: 1655
// EnetChannelId: 0
// EnetIsReliable: true
message AddNoGachaAvatarCardNotify {
  repeated AddNoGachaAvatarCardTransferItem transfer_item_list = 4;
  uint32 initial_promote_level = 2;
  uint32 avatar_id = 8;
  bool is_transfer_to_item = 6;
  uint32 reason = 9;
  uint32 initial_level = 10;
  uint32 item_id = 14;
}

message AddNoGachaAvatarCardTransferItem {
  uint32 count = 9;
  uint32 item_id = 6;
  bool is_new = 15;
}

// CmdId: 421
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AddQuestContentProgressReq {
  uint32 content_type = 6;
  uint32 param = 12;
  uint32 add_progress = 15;
}

// CmdId: 403
// EnetChannelId: 0
// EnetIsReliable: true
message AddQuestContentProgressRsp {
  int32 retcode = 13;
  uint32 content_type = 4;
}


// CmdId: 119
// EnetChannelId: 0
// EnetIsReliable: true
message AddRandTaskInfoNotify {
  uint32 rand_task_id = 5;
  Vector pos = 13;
}

// CmdId: 223
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AddSeenMonsterNotify {
  repeated uint32 monster_id_list = 12;
}

message AdjustTrackingInfo {
  string event_token = 9;
  string adid = 4;
  string idfa = 2;
  string app_token = 14;
  string gps_adid = 3;
  string fire_adid = 13;
}

// CmdId: 164
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AdjustWorldLevelReq {
  uint32 expect_world_level = 8;
  uint32 cur_world_level = 9;
}

// CmdId: 138
// EnetChannelId: 0
// EnetIsReliable: true
message AdjustWorldLevelRsp {
  int32 retcode = 13;
  uint32 cd_over_time = 15;
  uint32 after_world_level = 14;
}

message AiSkillCdInfo {
  map<uint32, uint32> skill_cd_map = 11;
  map<uint32, uint32> skill_group_cd_map = 6;
}

message AiSyncInfo {
  uint32 entity_id = 9;
  bool is_self_killing = 8;
  bool has_path_to_target = 4;
}

message AiThreatInfo {
  map<uint32, uint32> ai_threat_map = 11;
}


// CmdId: 1976
// EnetChannelId: 0
// EnetIsReliable: true
message AllCoopInfoNotify {
  repeated MainCoop main_coop_list = 14;
}


// CmdId: 3283
// EnetChannelId: 0
// EnetIsReliable: true
message AllMarkPointNotify {
  repeated MapMarkPoint mark_list = 7;
}

// CmdId: 271
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AllSeenMonsterNotify {
  repeated uint32 monster_id_list = 4;
}



// CmdId: 4271
// EnetChannelId: 0
// EnetIsReliable: true
message AllWidgetDataNotify {
  Unk2700_CCEOEOHLAPK Unk2700_COIELIGEACL = 12;
  repeated AnchorPointData anchor_point_list = 3;
  repeated ClientCollectorData client_collector_data_list = 4;
  repeated WidgetCoolDownData normal_cool_down_data_list = 9;
  uint32 next_anchor_point_usable_time = 10;
  repeated OneofGatherPointDetectorData oneof_gather_point_detector_data_list = 15;
  LunchBoxData lunch_box_data = 1;
  repeated WidgetCoolDownData cool_down_group_data_list = 13;
  repeated WidgetSlotData slot_list = 6;
}


message AnchorPointData {
  uint32 scene_id = 5;
  uint32 anchor_point_id = 9;
  uint32 end_time = 8;
  Vector pos = 15;
  Vector rot = 2;
}


// CmdId: 4276
// EnetChannelId: 0
// EnetIsReliable: true
message AnchorPointDataNotify {
  repeated AnchorPointData anchor_point_list = 10;
  uint32 next_usable_time = 14;
}

// CmdId: 4257
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AnchorPointOpReq {
  uint32 anchor_point_id = 9;
  uint32 anchor_point_op_type = 12;
  enum AnchorPointOpType {
    ANCHOR_POINT_OP_TYPE_NONE = 0;
    ANCHOR_POINT_OP_TYPE_TELEPORT = 1;
    ANCHOR_POINT_OP_TYPE_REMOVE = 2;
  }
}

// CmdId: 4252
// EnetChannelId: 0
// EnetIsReliable: true
message AnchorPointOpRsp {
  int32 retcode = 5;
  uint32 anchor_point_id = 12;
  uint32 anchor_point_op_type = 4;
}


// CmdId: 374
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AnimatorForceSetAirMoveNotify {
  uint32 entity_id = 14;
  bool in_air_move = 13;
  ForwardType forward_type = 9;
}

message AnimatorParameterValueInfo {
  uint32 para_type = 1;
  oneof para_val {
    int32 int_val = 2;
    float float_val = 3;
    bool bool_val = 4;
  }
}


message AnimatorParameterValueInfoPair {
  int32 name_id = 1;
  AnimatorParameterValueInfo animator_para = 2;
}

message AnnounceData {
  string count_down_text = 9;
  string center_system_text = 8;
  uint32 count_down_frequency = 1;
  uint32 config_id = 7;
  uint32 begin_time = 4;
  uint32 center_system_frequency = 11;
  string dungeon_confirm_text = 2;
  bool is_center_system_last_5_every_minutes = 14;
  uint32 end_time = 10;
}

// CmdId: 180
// EnetChannelId: 0
// EnetIsReliable: true
message AntiAddictNotify {
  int32 msg_type = 6;
  string msg = 3;
  string level = 5;
}


message ArenaChallengeActivityDetailInfo {
  bool Unk2800_GNKHCICOIMC = 14;
  map<uint32, uint32> level_open_time_map = 3;
  uint32 world_level = 15;
  repeated ArenaChallengeMonsterLevel level_list = 9;
}

message ArenaChallengeChildChallengeInfo {
  uint32 challenge_id = 12;
  uint32 challenge_type = 5;
  uint32 challenge_index = 4;
  bool is_success = 7;
  bool is_settled = 11;
}


// CmdId: 2030
// EnetChannelId: 0
// EnetIsReliable: true
message ArenaChallengeFinishNotify {
  uint32 arena_challenge_level = 13;
  uint32 arena_challenge_id = 3;
  repeated ArenaChallengeChildChallengeInfo child_challenge_list = 2;
  bool is_success = 12;
}

message ArenaChallengeMonsterLevel {
  uint32 arena_challenge_level = 7;
  uint32 arena_challenge_id = 15;
}


// CmdId: 4065
// EnetChannelId: 0
// EnetIsReliable: true
message AskAddFriendNotify {
  FriendBrief target_friend_brief = 15;
  uint32 target_uid = 9;
}

// CmdId: 4007
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AskAddFriendReq {
  uint32 target_uid = 7;
}

// CmdId: 4021
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AskAddFriendRsp {
  uint32 param = 8;
  int32 retcode = 7;
  uint32 target_uid = 4;
}



message AsterActivityDetailInfo {
  AsterLittleDetailInfo aster_little = 7;
  uint32 aster_credit = 14;
  AsterLargeDetailInfo aster_large = 9;
  bool is_special_reward_taken = 1;
  bool is_content_closed = 13;
  uint32 content_close_time = 8;
  uint32 aster_token = 5;
  AsterMidDetailInfo aster_mid = 6;
  AsterProgressDetailInfo aster_progress = 2;
}

message AsterLargeDetailInfo {
  bool is_open = 3;
  uint32 begin_time = 13;
}


// CmdId: 2146
// EnetChannelId: 0
// EnetIsReliable: true
message AsterLargeInfoNotify {
  AsterLargeDetailInfo info = 10;
}


message AsterLittleDetailInfo {
  bool is_open = 4;
  AsterLittleStageState stage_state = 7;
  uint32 stage_id = 1;
  uint32 begin_time = 6;
  uint32 stage_begin_time = 5;
}


// CmdId: 2068
// EnetChannelId: 0
// EnetIsReliable: true
message AsterLittleInfoNotify {
  AsterLittleDetailInfo info = 1;
}

enum AsterLittleStageState {
  ASTER_LITTLE_STAGE_STATE_NONE = 0;
  ASTER_LITTLE_STAGE_STATE_UNSTARTED = 1;
  ASTER_LITTLE_STAGE_STATE_STARTED = 2;
  ASTER_LITTLE_STAGE_STATE_FINISHED = 3;
}


message AsterMidCampInfo {
  Vector pos = 3;
  uint32 camp_id = 8;
}


// CmdId: 2133
// EnetChannelId: 0
// EnetIsReliable: true
message AsterMidCampInfoNotify {
  repeated AsterMidCampInfo camp_list = 5;
}


message AsterMidDetailInfo {
  uint32 begin_time = 10;
  repeated AsterMidCampInfo camp_list = 7;
  bool is_open = 4;
  uint32 collect_count = 11;
}


// CmdId: 2031
// EnetChannelId: 0
// EnetIsReliable: true
message AsterMidInfoNotify {
  AsterMidDetailInfo info = 4;
}

// CmdId: 2036
// EnetChannelId: 0
// EnetIsReliable: true
message AsterMiscInfoNotify {
  uint32 aster_token = 2;
  uint32 aster_credit = 15;
}

message AsterProgressDetailInfo {
  uint32 last_auto_add_time = 3;
  uint32 count = 1;
}


// CmdId: 2016
// EnetChannelId: 0
// EnetIsReliable: true
message AsterProgressInfoNotify {
  AsterProgressDetailInfo info = 1;
}

message AttackHitEffectResult {
  float hit_halt_time_scale = 8;
  uint32 original_hit_eff_level = 12;
  float air_strength = 15;
  uint32 hit_eff_level = 2;
  float hit_halt_time = 13;
  float retreat_strength = 7;
}



message AttackResult {
  bool is_resist_text = 1858;
  uint32 Unk2700_GBANCFEPPIM = 1011;
  uint32 amplify_reaction_type = 2005;
  uint32 endure_break = 7;
  uint32 element_type = 5;
  float element_durability_attenuation = 425;
  uint32 defense_id = 15;
  uint32 attack_timestamp_ms = 1188;
  uint32 bullet_fly_time_ms = 91;
  bool is_crit = 13;
  float element_amplify_rate = 900;
  uint32 attack_count = 1564;
  uint32 critical_rand = 1664;
  uint32 hit_pos_type = 2;
  string anim_event_id = 4;
  AttackHitEffectResult hit_eff_result = 8;
  float damage_shield = 1202;
  float endure_delta = 430;
  Vector resolved_dir = 1;
  float damage = 6;
  uint32 addhurt_reaction_type = 1887;
  uint32 hashed_anim_event_id = 278;
  bool use_gadget_damage_action = 1418;
  int32 hit_retreat_angle_compat = 9;
  AbilityIdentifier ability_identifier = 14;
  uint32 attacker_id = 11;
  bool mute_element_hurt = 1530;
  uint32 target_type = 1366;
  HitCollision hit_collision = 10;
  uint32 gadget_damage_action_idx = 1110;
}


message AuthorityChange {
  EntityAuthorityInfo entity_authority_info = 5;
  uint32 authority_peer_id = 3;
  uint32 entity_id = 13;
}


// CmdId: 1769
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarAddNotify {
  AvatarInfo avatar = 13;
  bool is_in_team = 12;
}

// CmdId: 388
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarBuffAddNotify {
  uint64 avatar_guid = 10;
  uint32 buff_id = 6;
}

// CmdId: 326
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarBuffDelNotify {
  uint64 avatar_guid = 10;
  uint32 buff_id = 12;
}

// CmdId: 688
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarCardChangeReq {
  uint32 item_id = 6;
  uint64 avatar_guid = 14;
  uint32 count = 7;
}

// CmdId: 626
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarCardChangeRsp {
  int32 retcode = 1;
}

// CmdId: 1711
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarChangeAnimHashReq {
  uint32 anim_hash = 6;
  uint64 avatar_guid = 3;
}

// CmdId: 1647
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarChangeAnimHashRsp {
  uint32 anim_hash = 13;
  int32 retcode = 5;
  uint64 avatar_guid = 10;
}


// CmdId: 1644
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarChangeCostumeNotify {
  SceneEntityInfo entity_info = 7;
}

// CmdId: 1778
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarChangeCostumeReq {
  uint32 costume_id = 4;
  uint64 avatar_guid = 2;
}

// CmdId: 1645
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarChangeCostumeRsp {
  uint64 avatar_guid = 12;
  int32 retcode = 7;
  uint32 costume_id = 13;
}

// CmdId: 1785
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarChangeElementTypeReq {
  uint32 scene_id = 7;
  uint32 area_id = 3;
}

// CmdId: 1651
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarChangeElementTypeRsp {
  int32 retcode = 13;
}


// CmdId: 1633
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarDataNotify {
  repeated uint32 owned_flycloak_list = 1;
  uint32 cur_avatar_team_id = 2;
  repeated AvatarInfo avatar_list = 6;
  repeated uint32 owned_costume_list = 11;
  repeated uint64 temp_avatar_guid_list = 12;
  map<uint32, AvatarTeam> avatar_team_map = 7;
  uint64 choose_avatar_guid = 8;
}

// CmdId: 1773
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarDelNotify {
  repeated uint64 avatar_guid_list = 13;
}


// CmdId: 1610
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarDieAnimationEndReq {
  Vector reborn_pos = 3;
  uint64 die_guid = 7;
  uint32 skill_id = 8;
}

// CmdId: 1694
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarDieAnimationEndRsp {
  uint32 skill_id = 13;
  int32 retcode = 14;
  uint64 die_guid = 15;
}

// CmdId: 334
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarEnterElementViewNotify {
  bool is_triggerd = 3;
  uint32 avatar_entity_id = 12;
}


message AvatarEnterSceneInfo {
  repeated ServerBuff server_buff_list = 14;
  uint32 avatar_entity_id = 7;
  AbilitySyncStateInfo weapon_ability_info = 12;
  uint32 weapon_entity_id = 10;
  AbilitySyncStateInfo avatar_ability_info = 2;
  uint64 avatar_guid = 13;
  uint64 weapon_guid = 9;
  repeated uint32 buff_id_list = 5;
}

message AvatarEquipAffixInfo {
  uint32 equip_affix_id = 1;
  uint32 left_cd_time = 2;
}


// CmdId: 1662
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarEquipAffixStartNotify {
  uint64 avatar_guid = 4;
  AvatarEquipAffixInfo equip_affix_info = 12;
}


// CmdId: 647
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarEquipChangeNotify {
  uint64 avatar_guid = 10;
  uint64 equip_guid = 13;
  SceneReliquaryInfo reliquary = 1;
  SceneWeaponInfo weapon = 15;
  uint32 item_id = 14;
  uint32 equip_type = 8;
}

message AvatarExcelInfo {
  uint64 prefab_path_hash = 1;
  uint64 prefab_path_remote_hash = 2;
  uint64 controller_path_hash = 3;
  uint64 controller_path_remote_hash = 4;
  uint64 combat_config_hash = 5;
}

// CmdId: 1722
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarExpeditionAllDataReq {}


// CmdId: 1648
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarExpeditionAllDataRsp {
  repeated uint32 open_expedition_list = 3;
  int32 retcode = 15;
  uint32 expedition_count_limit = 12;
  map<uint64, AvatarExpeditionInfo> expedition_info_map = 4;
}

// CmdId: 1752
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarExpeditionCallBackReq {
  repeated uint64 avatar_guid = 13;
}


// CmdId: 1726
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarExpeditionCallBackRsp {
  map<uint64, AvatarExpeditionInfo> expedition_info_map = 9;
  int32 retcode = 5;
}


// CmdId: 1771
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarExpeditionDataNotify {
  map<uint64, AvatarExpeditionInfo> expedition_info_map = 6;
}

// CmdId: 1623
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarExpeditionGetRewardReq {
  uint64 avatar_guid = 14;
}


// CmdId: 1784
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarExpeditionGetRewardRsp {
  repeated ItemParam Unk2700_HBKHOBPGCLH = 9;
  repeated ItemParam item_list = 8;
  map<uint64, AvatarExpeditionInfo> expedition_info_map = 12;
  int32 retcode = 2;
}


message AvatarExpeditionInfo {
  AvatarExpeditionState state = 1;
  uint32 exp_id = 2;
  uint32 hour_time = 3;
  uint32 start_time = 4;
  float shorten_ratio = 5;
}

// CmdId: 1715
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarExpeditionStartReq {
  uint32 exp_id = 9;
  uint64 avatar_guid = 10;
  uint32 hour_time = 2;
}


// CmdId: 1719
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarExpeditionStartRsp {
  map<uint64, AvatarExpeditionInfo> expedition_info_map = 2;
  int32 retcode = 5;
}

enum AvatarExpeditionState {
  AVATAR_EXPEDITION_STATE_NONE = 0;
  AVATAR_EXPEDITION_STATE_DOING = 1;
  AVATAR_EXPEDITION_STATE_FINISH_WAIT_REWARD = 2;
  AVATAR_EXPEDITION_STATE_CALLBACK_WAIT_REWARD = 3;
  AVATAR_EXPEDITION_STATE_LOCKED = 4;
}


// CmdId: 1782
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarFetterDataNotify {
  map<uint64, AvatarFetterInfo> fetter_info_map = 15;
}


message AvatarFetterInfo {
  uint32 exp_number = 1;
  uint32 exp_level = 2;
  repeated uint32 open_id_list = 3;
  repeated uint32 finish_id_list = 4;
  repeated uint32 rewarded_fetter_level_list = 5;
  repeated FetterData fetter_list = 6;
}

// CmdId: 1653
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarFetterLevelRewardReq {
  uint64 avatar_guid = 1;
  uint32 fetter_level = 6;
}

// CmdId: 1606
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarFetterLevelRewardRsp {
  uint64 avatar_guid = 4;
  uint32 reward_id = 1;
  int32 retcode = 13;
  uint32 fetter_level = 14;
}

// CmdId: 1207
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarFightPropNotify {
  map<uint32, float> fight_prop_map = 8;
  uint64 avatar_guid = 4;
}

// CmdId: 1221
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarFightPropUpdateNotify {
  map<uint32, float> fight_prop_map = 15;
  uint64 avatar_guid = 13;
}

// CmdId: 1643
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarFlycloakChangeNotify {
  uint32 flycloak_id = 8;
  uint64 avatar_guid = 2;
}


// CmdId: 3458
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarFollowRouteNotify {
  string client_params = 13;
  uint32 entity_id = 4;
  Route route = 2;
  uint32 start_scene_time_ms = 8;
}

// CmdId: 1677
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarGainCostumeNotify {
  uint32 costume_id = 15;
}

// CmdId: 1656
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarGainFlycloakNotify {
  uint32 flycloak_id = 3;
}



message AvatarInfo {
  uint32 avatar_id = 1;
  uint64 guid = 2;
  map<uint32, PropValue> prop_map = 3;
  uint32 life_state = 4;
  repeated uint64 equip_guid_list = 5;
  repeated uint32 talent_id_list = 6;
  map<uint32, float> fight_prop_map = 7;
  TrialAvatarInfo trial_avatar_info = 9;
  map<uint32, AvatarSkillInfo> skill_map = 10;
  uint32 skill_depot_id = 11;
  AvatarFetterInfo fetter_info = 12;
  uint32 core_proud_skill_level = 13;
  repeated uint32 inherent_proud_skill_list = 14;
  map<uint32, uint32> skill_level_map = 15;
  AvatarExpeditionState expedition_state = 16;
  map<uint32, uint32> proud_skill_extra_level_map = 17;
  bool is_focus = 18;
  uint32 avatar_type = 19;
  repeated uint32 team_resonance_list = 20;
  uint32 wearing_flycloak_id = 21;
  repeated AvatarEquipAffixInfo equip_affix_list = 22;
  uint32 born_time = 23;
  repeated uint32 pending_promote_reward_list = 24;
  uint32 costume_id = 25;
  AvatarExcelInfo excel_info = 26;
  uint32 anim_hash = 27;
}


// CmdId: 1290
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarLifeStateChangeNotify {
  uint32 life_state = 13;
  string attack_tag = 10;
  PlayerDieType die_type = 2;
  repeated ServerBuff server_buff_list = 12;
  uint32 move_reliable_seq = 5;
  uint32 source_entity_id = 3;
  uint64 avatar_guid = 11;
}

// CmdId: 1696
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarPromoteGetRewardReq {
  uint64 avatar_guid = 7;
  uint32 promote_level = 12;
}

// CmdId: 1683
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarPromoteGetRewardRsp {
  int32 retcode = 10;
  uint32 reward_id = 15;
  uint64 avatar_guid = 11;
  uint32 promote_level = 12;
}

// CmdId: 1664
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarPromoteReq {
  uint64 guid = 5;
}

// CmdId: 1639
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarPromoteRsp {
  uint64 guid = 11;
  int32 retcode = 8;
}


// CmdId: 1273
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarPropChangeReasonNotify {
  float old_value = 11;
  PropChangeReason reason = 5;
  uint32 prop_type = 1;
  uint64 avatar_guid = 8;
  float cur_value = 15;
}

// CmdId: 1231
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarPropNotify {
  map<uint32, int64> prop_map = 14;
  uint64 avatar_guid = 15;
}

message AvatarSatiationData {
  float finish_time = 14;
  uint64 avatar_guid = 13;
  float penalty_finish_time = 12;
}


// CmdId: 1693
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarSatiationDataNotify {
  repeated AvatarSatiationData satiation_data_list = 6;
}

// CmdId: 1097
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarSkillChangeNotify {
  uint32 cur_level = 11;
  uint64 avatar_guid = 2;
  uint32 entity_id = 7;
  uint32 skill_depot_id = 13;
  uint32 old_level = 1;
  uint32 avatar_skill_id = 6;
}

// CmdId: 1035
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarSkillDepotChangeNotify {
  uint32 skill_depot_id = 15;
  map<uint32, uint32> proud_skill_extra_level_map = 14;
  repeated uint32 talent_id_list = 9;
  repeated uint32 proud_skill_list = 4;
  uint32 core_proud_skill_level = 2;
  uint32 entity_id = 7;
  uint64 avatar_guid = 12;
  map<uint32, uint32> skill_level_map = 3;
}

message AvatarSkillInfo {
  uint32 pass_cd_time = 1;
  repeated uint32 full_cd_time_list = 2;
  uint32 max_charge_count = 3;
}


// CmdId: 1090
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarSkillInfoNotify {
  map<uint32, AvatarSkillInfo> skill_map = 11;
  uint64 guid = 4;
}

// CmdId: 1003
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarSkillMaxChargeCountNotify {
  uint32 skill_id = 6;
  uint32 max_charge_count = 11;
  uint64 avatar_guid = 7;
}

// CmdId: 1075
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarSkillUpgradeReq {
  uint64 avatar_guid = 7;
  uint32 old_level = 3;
  uint32 avatar_skill_id = 4;
}

// CmdId: 1048
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarSkillUpgradeRsp {
  uint64 avatar_guid = 11;
  uint32 cur_level = 14;
  uint32 avatar_skill_id = 9;
  uint32 old_level = 3;
  int32 retcode = 4;
}

message AvatarTeam {
  repeated uint64 avatar_guid_list = 7;
  string team_name = 14;
}

message AvatarTeamResonanceInfo {
  repeated uint32 add_team_resonance_id_list = 5;
  uint32 entity_id = 11;
  uint64 avatar_guid = 3;
  repeated uint32 del_team_resonance_id_list = 14;
}


// CmdId: 1706
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarTeamUpdateNotify {
  map<uint32, AvatarTeam> avatar_team_map = 2;
  repeated uint64 temp_avatar_guid_list = 13;
}

// CmdId: 1012
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarUnlockTalentNotify {
  uint32 entity_id = 14;
  uint64 avatar_guid = 13;
  uint32 talent_id = 10;
  uint32 skill_depot_id = 1;
}

// CmdId: 1770
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarUpgradeReq {
  uint64 avatar_guid = 6;
  uint32 count = 2;
  uint32 item_id = 5;
}

// CmdId: 1701
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarUpgradeRsp {
  uint32 cur_level = 6;
  uint32 old_level = 13;
  map<uint32, float> old_fight_prop_map = 10;
  int32 retcode = 1;
  map<uint32, float> cur_fight_prop_map = 4;
  uint64 avatar_guid = 15;
}

// CmdId: 1737
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message AvatarWearFlycloakReq {
  uint64 avatar_guid = 11;
  uint32 flycloak_id = 13;
}

// CmdId: 1698
// EnetChannelId: 0
// EnetIsReliable: true
message AvatarWearFlycloakRsp {
  uint32 flycloak_id = 13;
  uint64 avatar_guid = 7;
  int32 retcode = 6;
}

// CmdId: 286
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BackMyWorldReq {}

// CmdId: 201
// EnetChannelId: 0
// EnetIsReliable: true
message BackMyWorldRsp {
  int32 retcode = 11;
}


message BalloonGalleryInfo {
  repeated Unk2700_ONCHFHBBCBN record_list = 15;
}

message BalloonPlayerInfo {
  uint32 uid = 15;
  uint32 cur_score = 2;
  uint32 combo_disable_time = 14;
  uint32 combo = 11;
}


message BalloonSettleInfo {
  uint32 uid = 3;
  uint32 shoot_count = 12;
  uint32 max_combo = 9;
  uint32 final_score = 7;
  OnlinePlayerInfo player_info = 2;
}

// CmdId: 493
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BargainOfferPriceReq {
  uint32 bargain_id = 4;
  uint32 price = 6;
}


// CmdId: 427
// EnetChannelId: 0
// EnetIsReliable: true
message BargainOfferPriceRsp {
  int32 retcode = 5;
  uint32 result_param = 13;
  BargainResultType bargain_result = 14;
  int32 cur_mood = 6;
}

enum BargainResultType {
  BARGAIN_RESULT_TYPE_COMPLETE_SUCC = 0;
  BARGAIN_RESULT_TYPE_SINGLE_FAIL = 1;
  BARGAIN_RESULT_TYPE_COMPLETE_FAIL = 2;
}

message BargainSnapshot {
  uint32 expected_price = 3;
  int32 cur_mood = 14;
  uint32 price_low_limit = 2;
  uint32 bargain_id = 5;
}


// CmdId: 404
// EnetChannelId: 0
// EnetIsReliable: true
message BargainStartNotify {
  uint32 bargain_id = 4;
  BargainSnapshot snapshot = 2;
}

// CmdId: 494
// EnetChannelId: 0
// EnetIsReliable: true
message BargainTerminateNotify {
  uint32 bargain_id = 15;
}


message BartenderActivityDetailInfo {
  repeated uint32 Unk2700_BMOAIJMHPGA = 3;
  bool Unk2700_JICAAEMPNBC = 13;
  bool is_content_closed = 6;
  repeated Unk2700_LBIDBGLGKCJ Unk2700_MEGOPKBEHOH = 5;
  repeated uint32 Unk2700_AIKFMMLFIJI = 14;
  repeated Unk2700_KJODHFMHMNC Unk2700_DAGGAECBDEG = 2;
}


// CmdId: 2626
// EnetChannelId: 0
// EnetIsReliable: true
message BattlePassAllDataNotify {
  bool have_cur_schedule = 2;
  repeated BattlePassMission mission_list = 4;
  BattlePassSchedule cur_schedule = 1;
}


// CmdId: 2614
// EnetChannelId: 0
// EnetIsReliable: true
message BattlePassBuySuccNotify {
  uint32 schedule_id = 4;
  uint32 product_play_type = 11;
  uint32 add_point = 12;
  repeated ItemParam item_list = 9;
}


// CmdId: 2607
// EnetChannelId: 0
// EnetIsReliable: true
message BattlePassCurScheduleUpdateNotify {
  bool have_cur_schedule = 11;
  BattlePassSchedule cur_schedule = 1;
}

message BattlePassCycle {
  uint32 cycle_idx = 3;
  uint32 end_time = 10;
  uint32 begin_time = 13;
}

message BattlePassMission {
  uint32 cur_progress = 13;
  MissionStatus mission_status = 15;
  uint32 mission_id = 11;
  uint32 reward_battle_pass_point = 3;
  uint32 mission_type = 12;
  uint32 total_progress = 6;
  enum MissionStatus {
    MISSION_STATUS_INVALID = 0;
    MISSION_STATUS_UNFINISHED = 1;
    MISSION_STATUS_FINISHED = 2;
    MISSION_STATUS_POINT_TAKEN = 3;
  }
}

// CmdId: 2625
// EnetChannelId: 0
// EnetIsReliable: true
message BattlePassMissionDelNotify {
  repeated uint32 del_mission_id_list = 10;
}


// CmdId: 2618
// EnetChannelId: 0
// EnetIsReliable: true
message BattlePassMissionUpdateNotify {
  repeated BattlePassMission mission_list = 1;
}

message BattlePassProduct {
  string normal_product_id = 13;
  string extra_product_id = 10;
  string upgrade_product_id = 6;
}


message BattlePassRewardTag {
  uint32 level = 4;
  BattlePassUnlockStatus unlock_status = 2;
  uint32 reward_id = 7;
}


message BattlePassRewardTakeOption {
  BattlePassRewardTag tag = 10;
  uint32 option_idx = 14;
}



message BattlePassSchedule {
  uint32 level = 14;
  uint32 begin_time = 2;
  uint32 end_time = 15;
  uint32 point = 1;
  BattlePassCycle cur_cycle = 4;
  BattlePassUnlockStatus unlock_status = 7;
  repeated BattlePassRewardTag reward_taken_list = 11;
  uint32 cur_cycle_points = 10;
  uint32 Unk2700_ODHAAHEPFAG = 12;
  BattlePassProduct product_info = 13;
  bool is_extra_paid_reward_taken = 6;
  bool is_viewed = 3;
  uint32 schedule_id = 9;
}

enum BattlePassUnlockStatus {
  BATTLE_PASS_UNLOCK_STATUS_INVALID = 0;
  BATTLE_PASS_UNLOCK_STATUS_FREE = 1;
  BATTLE_PASS_UNLOCK_STATUS_PAID = 2;
}


// CmdId: 270
// EnetChannelId: 0
// EnetIsReliable: true
message BeginCameraSceneLookNotify {
  float Unk2700_DHAHEKOGHBJ = 7;
  float screen_y = 15;
  bool is_force = 12;
  bool is_recover_keep_current = 11;
  repeated string other_params = 1;
  float duration = 14;
  Unk2700_LNCHDDOOECD Unk2700_HIAKNNCKHJB = 6;
  Vector look_pos = 4;
  bool is_allow_input = 2;
  bool is_change_play_mode = 9;
  uint32 entity_id = 1327;
  bool is_force_walk = 10;
  float screen_x = 3;
  Vector follow_pos = 8;
  bool is_set_follow_pos = 13;
  bool is_set_screen_xy = 5;
  enum Unk2700_LNCHDDOOECD {
    Unk2700_LNCHDDOOECD_Unk2700_ACOENBMDFBP = 0;
    Unk2700_LNCHDDOOECD_Unk2700_FKBLCDFLCOM = 1;
  }
}

// CmdId: 1007
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BigTalentPointConvertReq {
  repeated uint64 item_guid_list = 6;
  uint64 avatar_guid = 3;
}

// CmdId: 1021
// EnetChannelId: 0
// EnetIsReliable: true
message BigTalentPointConvertRsp {
  int32 retcode = 1;
  uint64 avatar_guid = 8;
}

message Birthday {
  uint32 month = 1;
  uint32 day = 2;
}

// CmdId: 2045
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BlessingAcceptAllGivePicReq {}

// CmdId: 2044
// EnetChannelId: 0
// EnetIsReliable: true
message BlessingAcceptAllGivePicRsp {
  int32 retcode = 11;
  map<uint32, uint32> accept_pic_num_map = 14;
  repeated uint32 accept_index_list = 5;
}

// CmdId: 2006
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BlessingAcceptGivePicReq {
  uint32 index = 9;
  uint32 uid = 1;
}

// CmdId: 2055
// EnetChannelId: 0
// EnetIsReliable: true
message BlessingAcceptGivePicRsp {
  uint32 pic_id = 1;
  int32 retcode = 13;
  uint32 index = 5;
  uint32 uid = 14;
}

message BlessingActivityDetailInfo {
  uint32 cur_day_scan_type = 9;
  bool is_content_closed = 11;
  map<uint32, uint32> pic_num_map = 15;
  uint32 content_close_time = 2;
  uint32 cur_day_scan_num = 4;
  uint32 redeem_reward_num = 1;
  bool is_activated = 13;
  uint32 next_refresh_time = 6;
}


message BlessingFriendPicData {
  map<uint32, uint32> pic_num_map = 4;
  uint32 avatar_id = 5;
  string remark_name = 11;
  string nickname = 14;
  string signature = 1;
  ProfilePicture profile_picture = 6;
  uint32 uid = 9;
}

// CmdId: 2096
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BlessingGetAllRecvPicRecordListReq {}


// CmdId: 2083
// EnetChannelId: 0
// EnetIsReliable: true
message BlessingGetAllRecvPicRecordListRsp {
  repeated BlessingRecvPicRecord recv_pic_record_list = 15;
  int32 retcode = 9;
}

// CmdId: 2043
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BlessingGetFriendPicListReq {}


// CmdId: 2056
// EnetChannelId: 0
// EnetIsReliable: true
message BlessingGetFriendPicListRsp {
  int32 retcode = 2;
  repeated BlessingFriendPicData friend_pic_data_list = 6;
}

// CmdId: 2062
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BlessingGiveFriendPicReq {
  uint32 uid = 11;
  uint32 pic_id = 3;
}

// CmdId: 2053
// EnetChannelId: 0
// EnetIsReliable: true
message BlessingGiveFriendPicRsp {
  uint32 pic_id = 10;
  int32 retcode = 11;
  uint32 uid = 13;
}

// CmdId: 2178
// EnetChannelId: 0
// EnetIsReliable: true
message BlessingRecvFriendPicNotify {
  uint32 uid = 15;
  uint32 pic_id = 5;
}


message BlessingRecvPicRecord {
  string nickname = 1;
  string remark_name = 2;
  uint32 pic_id = 3;
  uint32 uid = 5;
  uint32 avatar_id = 6;
  string signature = 10;
  uint32 index = 14;
  bool is_recv = 7;
  ProfilePicture profile_picture = 9;
}

// CmdId: 2137
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BlessingRedeemRewardReq {}

// CmdId: 2098
// EnetChannelId: 0
// EnetIsReliable: true
message BlessingRedeemRewardRsp {
  map<uint32, uint32> pic_num_map = 12;
  int32 retcode = 15;
}

// CmdId: 2081
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BlessingScanReq {
  uint32 entity_id = 11;
}

// CmdId: 2093
// EnetChannelId: 0
// EnetIsReliable: true
message BlessingScanRsp {
  uint32 scan_pic_id = 4;
  int32 retcode = 11;
  uint32 cur_day_scan_num = 1;
}


message BlitzRushActivityDetailInfo {
  repeated BlitzRushStage stage_list = 10;
  uint32 content_close_time = 14;
  bool is_content_closed = 2;
  repeated ParkourLevelInfo parkour_level_info_list = 6;
}

// CmdId: 8653
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BlitzRushParkourRestartReq {
  uint32 schedule_id = 13;
  uint32 group_id = 2;
}

// CmdId: 8944
// EnetChannelId: 0
// EnetIsReliable: true
message BlitzRushParkourRestartRsp {
  int32 retcode = 14;
  uint32 group_id = 15;
  uint32 schedule_id = 1;
}

message BlitzRushStage {
  bool is_open = 13;
  uint32 open_time = 11;
}

message BlockInfo {
  uint32 block_id = 1;
  uint32 data_version = 2;
  bytes bin_data = 3;
  bool is_dirty = 4;
}


message BlossomBriefInfo {
  uint32 refresh_id = 13;
  uint32 reward_id = 5;
  uint32 city_id = 10;
  uint32 resin = 11;
  uint32 state = 7;
  bool is_guide_opened = 1;
  uint32 monster_level = 8;
  uint32 circle_camp_id = 15;
  Vector pos = 12;
  uint32 scene_id = 9;
}


// CmdId: 2712
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BlossomBriefInfoNotify {
  repeated BlossomBriefInfo brief_info_list = 4;
}

// CmdId: 2721
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BlossomChestCreateNotify {
  uint32 refresh_id = 1;
  uint32 circle_camp_id = 10;
}

message BlossomChestInfo {
  uint32 resin = 1;
  repeated uint32 qualify_uid_list = 2;
  repeated uint32 remain_uid_list = 3;
  uint32 dead_time = 4;
  uint32 blossom_refresh_type = 5;
  uint32 refresh_id = 6;
}


// CmdId: 890
// EnetChannelId: 0
// EnetIsReliable: true
message BlossomChestInfoNotify {
  uint32 entity_id = 9;
  BlossomChestInfo blossom_chest_info = 3;
}

message BlossomScheduleInfo {
  uint32 progress = 13;
  uint32 state = 10;
  uint32 round = 4;
  uint32 circle_camp_id = 15;
  uint32 refresh_id = 6;
  uint32 finish_progress = 14;
}

message BonusActivityInfo {
  uint32 bonus_activity_id = 6;
  uint32 state = 3;
}

// CmdId: 2548
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BonusActivityInfoReq {}


// CmdId: 2597
// EnetChannelId: 0
// EnetIsReliable: true
message BonusActivityInfoRsp {
  repeated BonusActivityInfo bonus_activity_info_list = 2;
  int32 retcode = 7;
}


// CmdId: 2575
// EnetChannelId: 0
// EnetIsReliable: true
message BonusActivityUpdateNotify {
  repeated BonusActivityInfo bonus_activity_info_list = 8;
}

message BonusOpActivityInfo {
  uint32 left_bonus_count = 11;
}

// CmdId: 803
// EnetChannelId: 0
// EnetIsReliable: true
message BossChestActivateNotify {
  repeated uint32 qualify_uid_list = 1;
  uint32 entity_id = 12;
}


message BossChestInfo {
  uint32 monster_config_id = 1;
  uint32 resin = 2;
  repeated uint32 remain_uid_list = 3;
  repeated uint32 qualify_uid_list = 4;
  map<uint32, WeeklyBossResinDiscountInfo> uid_discount_map = 5;
}


message BounceConjuringActivityDetailInfo {
  repeated BounceConjuringChapterInfo chapter_info_list = 8;
  bool is_content_closed = 12;
  uint32 content_close_time = 7;
}

message BounceConjuringChapterInfo {
  uint32 best_score = 12;
  uint32 open_time = 9;
  uint32 chapter_id = 13;
}


message BounceConjuringGallerySettleInfo {
  OnlinePlayerInfo player_info = 14;
  uint32 destroyed_machine_count = 5;
  uint32 fever_count = 6;
  uint32 normal_hit_count = 4;
  float damage = 11;
  map<uint32, uint32> gadget_count_map = 15;
  uint32 score = 12;
  uint32 perfect_hit_count = 8;
  repeated ExhibitionDisplayInfo card_list = 7;
}


// CmdId: 8084
// EnetChannelId: 0
// EnetIsReliable: true
message BounceConjuringSettleNotify {
  bool is_new_record = 14;
  map<uint32, BounceConjuringGallerySettleInfo> settle_info_map = 4;
  uint32 total_score = 2;
  uint32 chapter_id = 13;
}

message BuildingInfo {
  uint32 building_id = 1;
  uint32 point_config_id = 2;
  uint32 cost = 3;
  uint32 refund = 5;
  uint32 owner_uid = 6;
  uint32 Unk2700_MDJOPHOHFDB = 7;
  uint32 Unk2700_COFBIGLBNGP = 8;
}

message BundleInfo {
  repeated uint32 Unk2700_OGNEAEGHCPM = 13;
}

message BuoyantCombatDailyInfo {
  uint32 start_time = 2;
  uint32 best_score = 13;
}


message BuoyantCombatDetailInfo {
  repeated BuoyantCombatDailyInfo daily_info_list = 8;
}

message BuoyantCombatGallerySettleInfo {
  uint32 gallery_level = 12;
  uint32 final_score = 15;
  uint32 kill_monster_count = 9;
  uint32 kill_target_count = 1;
  uint32 kill_special_monster_count = 4;
  uint32 gallery_id = 2;
  uint32 gallery_multiple = 11;
}


message BuoyantCombatSettleInfo {
  bool is_new_record = 1;
  BuoyantCombatGallerySettleInfo settle_info = 3;
}


// CmdId: 8305
// EnetChannelId: 0
// EnetIsReliable: true
message BuoyantCombatSettleNotify {
  uint32 gallery_id = 8;
  BuoyantCombatSettleInfo settle_info = 11;
}

// CmdId: 2647
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BuyBattlePassLevelReq {
  uint32 buy_level = 8;
}

// CmdId: 2637
// EnetChannelId: 0
// EnetIsReliable: true
message BuyBattlePassLevelRsp {
  int32 retcode = 5;
  uint32 buy_level = 13;
}


// CmdId: 712
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BuyGoodsReq {
  uint32 buy_count = 14;
  ShopGoods goods = 15;
  uint32 shop_type = 7;
}


// CmdId: 735
// EnetChannelId: 0
// EnetIsReliable: true
message BuyGoodsRsp {
  uint32 buy_count = 14;
  ShopGoods goods = 12;
  uint32 shop_type = 11;
  int32 retcode = 2;
  repeated ShopGoods goods_list = 5;
}

// CmdId: 602
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BuyResinReq {}

// CmdId: 619
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message BuyResinRsp {
  uint32 cur_value = 10;
  int32 retcode = 5;
}


// CmdId: 633
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CalcWeaponUpgradeReturnItemsReq {
  repeated uint64 food_weapon_guid_list = 15;
  uint64 target_weapon_guid = 12;
  repeated ItemParam item_param_list = 3;
}


// CmdId: 684
// EnetChannelId: 0
// EnetIsReliable: true
message CalcWeaponUpgradeReturnItemsRsp {
  repeated ItemParam item_param_list = 4;
  int32 retcode = 15;
  uint64 target_weapon_guid = 8;
}

// CmdId: 1005
// EnetChannelId: 0
// EnetIsReliable: true
message CanUseSkillNotify {
  bool is_can_use_skill = 2;
}

// CmdId: 2899
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CancelCityReputationRequestReq {
  uint32 request_id = 10;
  uint32 city_id = 6;
}

// CmdId: 2831
// EnetChannelId: 0
// EnetIsReliable: true
message CancelCityReputationRequestRsp {
  uint32 city_id = 3;
  int32 retcode = 2;
  uint32 request_id = 12;
}

// CmdId: 1997
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CancelCoopTaskReq {
  uint32 chapter_id = 13;
}

// CmdId: 1987
// EnetChannelId: 0
// EnetIsReliable: true
message CancelCoopTaskRsp {
  uint32 chapter_id = 1;
  int32 retcode = 5;
}

// CmdId: 424
// EnetChannelId: 0
// EnetIsReliable: true
message CancelFinishParentQuestNotify {
  uint32 parent_quest_id = 6;
}

// CmdId: 4107
// EnetChannelId: 0
// EnetIsReliable: true
message CardProductRewardNotify {
  uint32 hcoin = 6;
  string product_id = 14;
  uint32 remain_days = 1;
}


message CellInfo {
  SceneSurfaceMaterial type = 1;
  int32 y = 2;
}

// CmdId: 953
// EnetChannelId: 0
// EnetIsReliable: true
message ChallengeDataNotify {
  uint32 value = 8;
  uint32 challenge_index = 2;
  uint32 param_index = 9;
}

message ChallengeRecord {
  uint32 challenge_record_type = 14;
  uint32 challenge_index = 15;
  uint32 challenge_id = 1;
  uint32 best_value = 8;
}


// CmdId: 993
// EnetChannelId: 0
// EnetIsReliable: true
message ChallengeRecordNotify {
  uint32 group_id = 2;
  repeated ChallengeRecord challenge_record_list = 5;
}


// CmdId: 1640
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChangeAvatarReq {
  Vector move_pos = 15;
  uint32 skill_id = 2;
  uint64 guid = 7;
  bool is_move = 10;
}

// CmdId: 1607
// EnetChannelId: 0
// EnetIsReliable: true
message ChangeAvatarRsp {
  uint32 skill_id = 3;
  int32 retcode = 10;
  uint64 cur_guid = 4;
}

enum ChangeEnergyReason {
  CHANGE_ENERGY_REASON_NONE = 0;
  CHANGE_ENERGY_REASON_SKILL_START = 1;
}

// CmdId: 173
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChangeGameTimeReq {
  uint32 game_time = 6;
  bool is_force_set = 11;
  uint32 extra_days = 12;
}

// CmdId: 199
// EnetChannelId: 0
// EnetIsReliable: true
message ChangeGameTimeRsp {
  int32 retcode = 8;
  uint32 extra_days = 5;
  uint32 cur_game_time = 14;
}

enum ChangeHpReason {
  CHANGE_HP_REASON_NONE = 0;
  CHANGE_HP_REASON_SUB_AVATAR = 1;
  CHANGE_HP_REASON_SUB_MONSTER = 2;
  CHANGE_HP_REASON_SUB_GEAR = 3;
  CHANGE_HP_REASON_SUB_ENVIR = 4;
  CHANGE_HP_REASON_SUB_FALL = 5;
  CHANGE_HP_REASON_SUB_DRAWN = 6;
  CHANGE_HP_REASON_SUB_ABYSS = 7;
  CHANGE_HP_REASON_SUB_ABILITY = 8;
  CHANGE_HP_REASON_SUB_SUMMON = 9;
  CHANGE_HP_REASON_SUB_SCRIPT = 10;
  CHANGE_HP_REASON_SUB_GM = 11;
  CHANGE_HP_REASON_SUB_KILL_SELF = 12;
  CHANGE_HP_REASON_SUB_CLIMATE_COLD = 13;
  CHANGE_HP_REASON_SUB_STORM_LIGHTNING = 14;
  CHANGE_HP_REASON_SUB_KILL_SERVER_GADGET = 15;
  CHANGE_HP_REASON_SUB_REPLACE = 16;
  CHANGE_HP_REASON_SUB_PLAYER_LEAVE = 17;
  CHANGE_HP_REASON_Unk2700_CIKCDBOJGDK = 18;
  CHANGE_HP_REASON_Unk2700_HEKLBLFBJJK = 19;
  CHANGE_HP_REASON_BY_LUA = 51;
  CHANGE_HP_REASON_ADD_ABILITY = 101;
  CHANGE_HP_REASON_ADD_ITEM = 102;
  CHANGE_HP_REASON_ADD_REVIVE = 103;
  CHANGE_HP_REASON_ADD_UPGRADE = 104;
  CHANGE_HP_REASON_ADD_STATUE = 105;
  CHANGE_HP_REASON_ADD_BACKGROUND = 106;
  CHANGE_HP_REASON_ADD_GM = 107;
  CHANGE_HP_REASON_ADD_TRIAL_AVATAR_ACTIVITY = 108;
  CHANGE_HP_REASON_ADD_ROUGUELIKE_SPRING = 109;
}

// CmdId: 1448
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChangeMailStarNotify {
  bool is_star = 14;
  repeated uint32 mail_id_list = 2;
}

// CmdId: 1708
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChangeMpTeamAvatarReq {
  uint64 cur_avatar_guid = 4;
  repeated uint64 avatar_guid_list = 8;
}

// CmdId: 1753
// EnetChannelId: 0
// EnetIsReliable: true
message ChangeMpTeamAvatarRsp {
  int32 retcode = 4;
  repeated uint64 avatar_guid_list = 3;
  uint64 cur_avatar_guid = 13;
}

// CmdId: 27
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChangeServerGlobalValueNotify {
  uint32 entity_id = 4;
}

// CmdId: 1603
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChangeTeamNameReq {
  int32 team_id = 8;
  string team_name = 9;
}

// CmdId: 1666
// EnetChannelId: 0
// EnetIsReliable: true
message ChangeTeamNameRsp {
  int32 retcode = 11;
  string team_name = 2;
  int32 team_id = 4;
}

// CmdId: 3006
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChangeWorldToSingleModeNotify {}

// CmdId: 3066
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChangeWorldToSingleModeReq {}

// CmdId: 3282
// EnetChannelId: 0
// EnetIsReliable: true
message ChangeWorldToSingleModeRsp {
  uint32 quit_mp_valid_time = 15;
  int32 retcode = 4;
}


message ChannelerSlabActivityDetailInfo {
  ChannelerSlabBuffInfo buff_info = 1;
  ChannelerSlabLoopDungeonStageInfo loop_dungeon_stage_info = 7;
  repeated ChannelerSlabChallengeStage stage_list = 15;
  uint32 play_end_time = 3;
}

message ChannelerSlabAssistInfo {
  uint32 uid = 10;
  uint32 avatar_level = 12;
  uint32 avatar_id = 6;
}


message ChannelerSlabBuffInfo {
  ChannelerSlabBuffSchemeInfo mp_buff_scheme_info = 6;
  repeated uint32 buff_id_list = 8;
  ChannelerSlabBuffSchemeInfo single_buff_scheme_info = 7;
  repeated ChannelerSlabAssistInfo assist_info_list = 15;
}

message ChannelerSlabBuffSchemeInfo {
  map<uint32, uint32> slot_map = 9;
  uint32 total_energy = 13;
  uint32 self_energy = 15;
}


message ChannelerSlabCamp {
  uint32 reward_id = 11;
  Vector pos = 8;
  uint32 buff_num = 7;
  uint32 group_id = 3;
}


message ChannelerSlabChallenge {
  uint32 active_camp_index = 5;
  repeated ChannelerSlabCamp camp_list = 14;
}


message ChannelerSlabChallengeStage {
  uint32 open_time = 3;
  repeated ChannelerSlabChallenge challenge_list = 14;
  bool is_open = 7;
  uint32 stage_id = 9;
  ChannelerSlabOneofDungeon dungeon_info = 13;
}

// CmdId: 8745
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChannelerSlabCheckEnterLoopDungeonReq {}

// CmdId: 8452
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabCheckEnterLoopDungeonRsp {
  int32 retcode = 10;
}

// CmdId: 8869
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChannelerSlabEnterLoopDungeonReq {
  uint32 point_id = 9;
  uint32 dungeon_index = 10;
  repeated uint32 condition_id_list = 5;
  uint32 difficulty_id = 12;
}

// CmdId: 8081
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabEnterLoopDungeonRsp {
  int32 retcode = 9;
  uint32 point_id = 12;
  repeated uint32 condition_id_list = 6;
  uint32 dungeon_index = 15;
  uint32 difficulty_id = 3;
}

// CmdId: 8224
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabLoopDungeonChallengeInfoNotify {
  uint32 dungeon_index = 12;
  uint32 challenge_score = 4;
  uint32 difficulty_id = 2;
  repeated uint32 condition_id_list = 3;
  repeated uint32 scheme_buff_id_list = 6;
}

message ChannelerSlabLoopDungeonInfo {
  uint32 score = 7;
  uint32 dungeon_index = 4;
  uint32 open_time = 12;
  bool is_first_pass_reward_taken = 9;
  repeated uint32 last_condition_id_list = 14;
  bool is_open = 1;
}

message ChannelerSlabLoopDungeonResultInfo {
  bool is_success = 11;
  uint32 challenge_max_score = 8;
  uint32 dungeon_index = 7;
  bool is_in_time_limit = 10;
  uint32 challenge_score = 12;
}

// CmdId: 8503
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChannelerSlabLoopDungeonSelectConditionReq {
  uint32 dungeon_index = 4;
  repeated uint32 condition_id_list = 3;
  uint32 difficulty_id = 8;
}

// CmdId: 8509
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabLoopDungeonSelectConditionRsp {
  int32 retcode = 9;
  uint32 dungeon_index = 5;
  repeated uint32 condition_id_list = 13;
  uint32 difficulty_id = 14;
}


message ChannelerSlabLoopDungeonStageInfo {
  repeated ChannelerSlabLoopDungeonInfo dungeon_info_list = 15;
  repeated uint32 taken_reward_index_list = 5;
  bool is_open = 11;
  uint32 last_difficulty_id = 6;
  uint32 open_time = 3;
}

// CmdId: 8589
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChannelerSlabLoopDungeonTakeFirstPassRewardReq {
  uint32 dungeon_index = 10;
}

// CmdId: 8539
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabLoopDungeonTakeFirstPassRewardRsp {
  int32 retcode = 10;
  uint32 dungeon_index = 8;
}

// CmdId: 8684
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChannelerSlabLoopDungeonTakeScoreRewardReq {
  uint32 reward_index = 8;
}

// CmdId: 8433
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabLoopDungeonTakeScoreRewardRsp {
  uint32 reward_index = 12;
  int32 retcode = 5;
}

// CmdId: 8729
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabOneOffDungeonInfoNotify {
  repeated uint32 scheme_buff_id_list = 6;
}

// CmdId: 8409
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChannelerSlabOneOffDungeonInfoReq {}

// CmdId: 8268
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabOneOffDungeonInfoRsp {
  repeated uint32 scheme_buff_id_list = 3;
  int32 retcode = 15;
}

message ChannelerSlabOneofDungeon {
  bool is_done = 8;
  uint32 dungeon_id = 12;
  uint32 reward_id = 13;
}


// CmdId: 8416
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChannelerSlabSaveAssistInfoReq {
  repeated ChannelerSlabAssistInfo assist_info_list = 8;
}


// CmdId: 8932
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabSaveAssistInfoRsp {
  repeated ChannelerSlabAssistInfo assist_info_list = 8;
  int32 retcode = 11;
}

// CmdId: 8734
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabStageActiveChallengeIndexNotify {
  uint32 stage_id = 15;
  uint32 challenge_index = 12;
  uint32 active_camp_index = 6;
}

// CmdId: 8203
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabStageOneofDungeonNotify {
  uint32 stage_id = 2;
  bool is_done = 8;
}

// CmdId: 8516
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChannelerSlabTakeoffBuffReq {
  bool is_mp = 10;
  uint32 slot_id = 12;
  uint32 buff_id = 9;
}

// CmdId: 8237
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabTakeoffBuffRsp {
  int32 retcode = 3;
  bool is_mp = 13;
  uint32 buff_id = 14;
  uint32 slot_id = 8;
}

// CmdId: 8107
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChannelerSlabWearBuffReq {
  uint32 buff_id = 3;
  bool is_mp = 5;
  uint32 slot_id = 13;
}

// CmdId: 8600
// EnetChannelId: 0
// EnetIsReliable: true
message ChannelerSlabWearBuffRsp {
  uint32 buff_id = 15;
  int32 retcode = 1;
  bool is_mp = 9;
  uint32 slot_id = 8;
}

enum ChapterState {
  CHAPTER_STATE_INVALID = 0;
  CHAPTER_STATE_UNABLE_TO_BEGIN = 1;
  CHAPTER_STATE_BEGIN = 2;
  CHAPTER_STATE_END = 3;
}


// CmdId: 405
// EnetChannelId: 0
// EnetIsReliable: true
message ChapterStateNotify {
  ChapterState chapter_state = 9;
  NeedPlayerLevel need_player_level = 10;
  NeedBeginTime need_begin_time = 1;
  uint32 chapter_id = 2;
  message NeedPlayerLevel {
    bool is_limit = 2;
    uint32 config_need_player_level = 11;
  }
  message NeedBeginTime {
    uint32 config_need_begin_time = 3;
    bool is_limit = 7;
  }
}

// CmdId: 4998
// EnetChannelId: 0
// EnetIsReliable: true
message ChatChannelDataNotify {
  repeated uint32 channel_list = 3;
}

// CmdId: 5025
// EnetChannelId: 0
// EnetIsReliable: true
message ChatChannelUpdateNotify {
  uint32 channel_id = 3;
  bool is_create = 15;
}

message ChatEmojiCollectionData {
  repeated uint32 emoji_id_list = 1;
}


// CmdId: 3496
// EnetChannelId: 0
// EnetIsReliable: true
message ChatHistoryNotify {
  repeated ChatInfo chat_info = 9;
  uint32 channel_id = 12;
}

message ChatInfo {
  uint32 time = 13;
  uint32 sequence = 10;
  uint32 to_uid = 7;
  uint32 uid = 15;
  bool is_read = 5;
  oneof content {
    string text = 1946;
    uint32 icon = 914;
    SystemHint system_hint = 1753;
  }
  enum SystemHintType {
    SYSTEM_HINT_TYPE_CHAT_NONE = 0;
    SYSTEM_HINT_TYPE_CHAT_ENTER_WORLD = 1;
    SYSTEM_HINT_TYPE_CHAT_LEAVE_WORLD = 2;
  }
  message SystemHint {
    uint32 type = 14;
  }
}

// CmdId: 692
// EnetChannelId: 0
// EnetIsReliable: true
message CheckAddItemExceedLimitNotify {
  bool is_drop = 5;
  repeated uint32 exceeded_item_type_list = 10;
  repeated uint32 exceeded_item_list = 12;
  ItemExceedLimitMsgType msg_type = 4;
  enum ItemExceedLimitMsgType {
    ITEM_EXCEED_LIMIT_MSG_TYPE_DEFAULT = 0;
    ITEM_EXCEED_LIMIT_MSG_TYPE_TEXT = 1;
    ITEM_EXCEED_LIMIT_MSG_TYPE_DIALOG = 2;
    ITEM_EXCEED_LIMIT_MSG_TYPE_Unk2700_BONLGEEEBBF = 3;
  }
}


// CmdId: 39
// EnetChannelId: 0
// EnetIsReliable: true
message CheckSegmentCRCNotify {
  repeated SegmentInfo info_list = 6;
}


// CmdId: 53
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CheckSegmentCRCReq {
  repeated SegmentCRCInfo info_list = 1;
}

message ChessActivityDetailInfo {
  uint32 level = 4;
  bool is_teach_dungeon_finished = 9;
  uint32 content_close_time = 14;
  uint32 obtained_exp = 8;
  bool is_content_closed = 5;
  uint32 available_exp = 2;
  uint32 exp = 13;
  repeated uint32 finished_map_id_list = 1;
  uint32 punish_over_time = 3;
}

message ChessCardInfo {
  uint32 effect_stack = 12;
  uint32 card_id = 11;
}


message ChessEntranceDetailInfo {
  repeated ChessEntranceInfo info_list = 4;
}


message ChessEntranceInfo {
  repeated ChessMonsterInfo monster_info_list = 14;
  uint32 entrance_index = 15;
  uint32 entrance_point_id = 8;
}

// CmdId: 5314
// EnetChannelId: 0
// EnetIsReliable: true
message ChessEscapedMonstersNotify {
  uint32 escaped_monsters = 14;
}

// CmdId: 5360
// EnetChannelId: 0
// EnetIsReliable: true
message ChessLeftMonstersNotify {
  uint32 left_monsters = 6;
}

// CmdId: 5389
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChessManualRefreshCardsReq {}

// CmdId: 5359
// EnetChannelId: 0
// EnetIsReliable: true
message ChessManualRefreshCardsRsp {
  int32 retcode = 12;
}

message ChessMonsterInfo {
  uint32 monster_id = 12;
  uint32 level = 2;
  repeated uint32 affix_list = 13;
}


message ChessMysteryInfo {
  map<uint32, uint32> entrance_point_map = 13;
  repeated uint32 exit_point_id_list = 3;
  map<uint32, ChessEntranceDetailInfo> detail_info_map = 5;
}

message ChessNormalCardInfo {
  uint32 card_id = 2;
  uint32 cost_points = 15;
  bool is_attach_curse = 6;
}


// CmdId: 5380
// EnetChannelId: 0
// EnetIsReliable: true
message ChessPickCardNotify {
  uint32 curse_card_id = 13;
  ChessNormalCardInfo normal_card_info = 1;
}

// CmdId: 5333
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChessPickCardReq {
  uint32 card_id = 1;
  uint32 card_index = 4;
}

// CmdId: 5384
// EnetChannelId: 0
// EnetIsReliable: true
message ChessPickCardRsp {
  uint32 card_index = 11;
  uint32 card_id = 1;
  int32 retcode = 4;
}


message ChessPlayerInfo {
  uint32 uid = 5;
  uint32 free_refresh_limit = 10;
  repeated ChessNormalCardInfo candidate_card_info_list = 3;
  uint32 building_points = 12;
  uint32 candidate_index = 6;
  uint32 free_refresh_count = 13;
  uint32 refresh_cost = 7;
}


// CmdId: 5332
// EnetChannelId: 0
// EnetIsReliable: true
message ChessPlayerInfoNotify {
  ChessPlayerInfo player_info = 10;
}


// CmdId: 5392
// EnetChannelId: 0
// EnetIsReliable: true
message ChessSelectedCardsNotify {
  repeated ChessCardInfo selected_card_info_list = 4;
}

message ChildQuest {
  uint32 quest_config_id = 8;
  uint32 state = 4;
  uint32 quest_id = 15;
}

// CmdId: 1796
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ChooseCurAvatarTeamReq {
  uint32 team_id = 9;
}

// CmdId: 1661
// EnetChannelId: 0
// EnetIsReliable: true
message ChooseCurAvatarTeamRsp {
  uint32 cur_team_id = 1;
  int32 retcode = 14;
}

message CityInfo {
  uint32 city_id = 15;
  uint32 crystal_num = 3;
  uint32 level = 4;
}


// CmdId: 2805
// EnetChannelId: 0
// EnetIsReliable: true
message CityReputationDataNotify {
  repeated CityReputationSimpleInfo simple_info_list = 7;
}

message CityReputationExploreInfo {
  repeated uint32 taken_explore_reward_list = 2;
  uint32 explore_percent = 14;
  bool is_open = 15;
}

message CityReputationHuntInfo {
  bool is_open = 6;
  uint32 cur_week_finish_num = 15;
  bool has_reward = 5;
}



message CityReputationInfo {
  uint32 level = 4;
  uint32 next_refresh_time = 3;
  CityReputationHuntInfo hunt_info = 11;
  repeated uint32 taken_level_reward_list = 2;
  uint32 total_accept_request_num = 6;
  CityReputationRequestInfo request_info = 5;
  CityReputationQuestInfo quest_info = 9;
  uint32 exp = 13;
  CityReputationExploreInfo explore_info = 10;
}

// CmdId: 2807
// EnetChannelId: 0
// EnetIsReliable: true
message CityReputationLevelupNotify {
  uint32 city_id = 12;
  uint32 level = 15;
}

message CityReputationQuestInfo {
  bool is_open = 2;
  repeated uint32 taken_parent_quest_reward_list = 12;
  repeated uint32 finished_parent_quest_list = 7;
}

message CityReputationRequestInfo {
  bool is_open = 2;
  repeated RequestInfo request_info_list = 1;
  message RequestInfo {
    uint32 request_id = 3;
    uint32 quest_id = 9;
    bool is_taken_reward = 6;
  }
}

message CityReputationSimpleInfo {
  uint32 level = 15;
  uint32 city_id = 9;
}

// CmdId: 8207
// EnetChannelId: 0
// EnetIsReliable: true
message ClearRoguelikeCurseNotify {
  map<uint32, uint32> clear_curse_map = 10;
  bool is_clear_all = 11;
  uint32 card_id = 8;
  bool is_curse_all_clear = 1;
}

// CmdId: 1181
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientAIStateNotify {
  uint32 entity_id = 9;
  uint32 cur_tactic = 15;
}


// CmdId: 1103
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientAbilitiesInitFinishCombineNotify {
  repeated EntityAbilityInvokeEntry entity_invoke_list = 1;
}


// CmdId: 1175
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientAbilityChangeNotify {
  bool Unk2200_FNAFDMAPLHP = 9;
  uint32 entity_id = 2;
  repeated AbilityInvokeEntry invokes = 3;
}

// CmdId: 1112
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientAbilityInitBeginNotify {
  uint32 entity_id = 1;
}


// CmdId: 1135
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientAbilityInitFinishNotify {
  repeated AbilityInvokeEntry invokes = 14;
  uint32 entity_id = 11;
}

// CmdId: 4
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientBulletCreateNotify {
  uint32 param = 6;
}

message ClientCollectorData {
  uint32 material_id = 10;
  uint32 max_points = 8;
  uint32 curr_points = 13;
}


// CmdId: 4264
// EnetChannelId: 0
// EnetIsReliable: true
message ClientCollectorDataNotify {
  repeated ClientCollectorData client_collector_data_list = 13;
}

message ClientGadgetInfo {
  uint32 camp_id = 1;
  uint32 camp_type = 2;
  uint64 guid = 3;
  uint32 owner_entity_id = 4;
  uint32 target_entity_id = 5;
  bool async_load = 6;
  bool Unk2700_JBOPENAGGAF = 7;
  repeated uint32 Unk2700_BELOIHEIEAN = 8;
}

// CmdId: 3086
// EnetChannelId: 0
// EnetIsReliable: true
message ClientHashDebugNotify {
  uint32 job_id = 12;
}

// CmdId: 3487
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientLoadingCostumeVerificationNotify {
  uint32 costume_id = 9;
  uint64 prefab_hash = 2;
  uint64 guid = 14;
}

// CmdId: 114
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientLockGameTimeNotify {
  bool is_lock = 5;
}

message ClientLogBodyLogin {
  string action_type = 1;
  string action_result = 2;
  uint32 action_time = 3;
  string xg = 4;
  uint32 signal_level = 5;
  string dns = 6;
}

message ClientLogBodyPing {
  string xg = 1;
  uint32 signal_level = 2;
  uint32 ping = 3;
  string servertype = 4;
  string serverip = 5;
  string serverport = 6;
  uint32 pcount = 7;
  uint32 plost = 8;
  string dns = 9;
}

message ClientLogHead {
  string event_time = 1;
  string log_serial_number = 2;
  uint32 action_id = 3;
  string action_name = 4;
  string upload_ip = 5;
  string product_id = 6;
  string channel_id = 7;
  string region_name = 8;
  string game_version = 9;
  string device_type = 10;
  string device_uuid = 11;
  string mac_addr = 12;
  string account_name = 13;
  string account_uuid = 14;
}


message ClientMassiveEntity {
  uint32 entity_type = 1;
  uint32 config_id = 2;
  int64 obj_id = 3;
  oneof entity_info {
    MassiveWaterInfo water_info = 4;
    MassiveGrassInfo grass_info = 5;
    MassiveBoxInfo box_info = 6;
  }
}

// CmdId: 1499
// EnetChannelId: 0
// EnetIsReliable: true
message ClientNewMailNotify {
  uint32 not_read_num = 7;
  uint32 not_got_attachment_num = 2;
}

// CmdId: 260
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientPauseNotify {
  bool is_open = 1;
}


// CmdId: 75
// EnetChannelId: 0
// EnetIsReliable: true
message ClientReconnectNotify {
  ClientReconnectReason reason = 6;
}

enum ClientReconnectReason {
  CLIENT_RECONNECT_REASON_RECONNNECT_NONE = 0;
  CLIENT_RECONNECT_REASON_RECONNNECT_QUIT_MP = 1;
}

// CmdId: 81
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientReportNotify {
  string report_type = 1;
  string report_value = 4;
}

// CmdId: 213
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientScriptEventNotify {
  repeated int32 param_list = 9;
  uint32 source_entity_id = 14;
  uint32 event_type = 10;
  uint32 target_entity_id = 13;
}


// CmdId: 291
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientTransmitReq {
  uint32 scene_id = 2;
  TransmitReason reason = 14;
  Vector pos = 1;
  Vector rot = 9;
}


// CmdId: 224
// EnetChannelId: 0
// EnetIsReliable: true
message ClientTransmitRsp {
  TransmitReason reason = 3;
  int32 retcode = 9;
}


// CmdId: 148
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ClientTriggerEventNotify {
  uint32 force_id = 3;
  EventTriggerType event_type = 2;
}

// CmdId: 3194
// EnetChannelId: 0
// EnetIsReliable: true
message CloseCommonTipsNotify {}

// CmdId: 614
// EnetChannelId: 0
// EnetIsReliable: true
message ClosedItemNotify {
  repeated uint32 item_id_list = 8;
}


// CmdId: 4205
// EnetChannelId: 0
// EnetIsReliable: true
message CodexDataFullNotify {
  uint32 Unk2700_BPKOLHOOGFO = 4;
  repeated uint32 Unk2700_DFJJHFHHIHF = 2;
  uint32 Unk2700_HJDNBBPMOAP = 3;
  repeated CodexTypeData type_data_list = 6;
}


// CmdId: 4207
// EnetChannelId: 0
// EnetIsReliable: true
message CodexDataUpdateNotify {
  uint32 id = 8;
  uint32 weapon_max_promote_level = 15;
  CodexType type = 11;
}

enum CodexType {
  CODEX_TYPE_NONE = 0;
  CODEX_TYPE_QUEST = 1;
  CODEX_TYPE_WEAPON = 2;
  CODEX_TYPE_ANIMAL = 3;
  CODEX_TYPE_MATERIAL = 4;
  CODEX_TYPE_BOOKS = 5;
  CODEX_TYPE_PUSHTIPS = 6;
  CODEX_TYPE_VIEW = 7;
  CODEX_TYPE_RELIQUARY = 8;
}


message CodexTypeData {
  repeated uint32 codex_id_list = 14;
  map<uint32, uint32> weapon_max_promote_level_map = 4;
  CodexType type = 13;
  repeated bool have_viewed_list = 5;
}


// CmdId: 319
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CombatInvocationsNotify {
  repeated CombatInvokeEntry invoke_list = 14;
}


message CombatInvokeEntry {
  bytes combat_data = 12;
  ForwardType forward_type = 10;
  CombatTypeArgument argument_type = 11;
}

enum CombatTypeArgument {
  COMBAT_TYPE_ARGUMENT_NONE = 0;
  COMBAT_TYPE_ARGUMENT_EVT_BEING_HIT = 1;
  COMBAT_TYPE_ARGUMENT_ANIMATOR_STATE_CHANGED = 2;
  COMBAT_TYPE_ARGUMENT_FACE_TO_DIR = 3;
  COMBAT_TYPE_ARGUMENT_SET_ATTACK_TARGET = 4;
  COMBAT_TYPE_ARGUMENT_RUSH_MOVE = 5;
  COMBAT_TYPE_ARGUMENT_ANIMATOR_PARAMETER_CHANGED = 6;
  COMBAT_TYPE_ARGUMENT_ENTITY_MOVE = 7;
  COMBAT_TYPE_ARGUMENT_SYNC_ENTITY_POSITION = 8;
  COMBAT_TYPE_ARGUMENT_STEER_MOTION_INFO = 9;
  COMBAT_TYPE_ARGUMENT_FORCE_SET_POS_INFO = 10;
  COMBAT_TYPE_ARGUMENT_COMPENSATE_POS_DIFF = 11;
  COMBAT_TYPE_ARGUMENT_MONSTER_DO_BLINK = 12;
  COMBAT_TYPE_ARGUMENT_FIXED_RUSH_MOVE = 13;
  COMBAT_TYPE_ARGUMENT_SYNC_TRANSFORM = 14;
  COMBAT_TYPE_ARGUMENT_LIGHT_CORE_MOVE = 15;
  COMBAT_TYPE_ARGUMENT_Unk2700_KPDNFKCMKPG = 16;
  COMBAT_TYPE_ARGUMENT_Unk2700_KPLOMOIALGF = 17;
}

// CmdId: 659
// EnetChannelId: 0
// EnetIsReliable: true
message CombineDataNotify {
  repeated uint32 combine_id_list = 5;
}

// CmdId: 632
// EnetChannelId: 0
// EnetIsReliable: true
message CombineFormulaDataNotify {
  uint32 combine_id = 6;
  bool is_locked = 3;
}

// CmdId: 643
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CombineReq {
  uint32 combine_count = 12;
  uint32 combine_id = 9;
  uint64 avatar_guid = 14;
}


// CmdId: 674
// EnetChannelId: 0
// EnetIsReliable: true
message CombineRsp {
  repeated ItemParam cost_item_list = 3;
  int32 retcode = 7;
  repeated ItemParam total_extra_item_list = 6;
  uint32 combine_id = 11;
  repeated ItemParam total_random_item_list = 9;
  repeated ItemParam result_item_list = 2;
  uint32 combine_count = 13;
  repeated ItemParam total_return_item_list = 12;
  uint64 avatar_guid = 10;
}

// CmdId: 8466
// EnetChannelId: 0
// EnetIsReliable: true
message CommonPlayerTipsNotify {
  uint32 notify_type = 3;
  repeated string text_map_id_list = 9;
}


// CmdId: 146
// EnetChannelId: 0
// EnetIsReliable: true
message CompoundDataNotify {
  repeated uint32 unlock_compound_list = 1;
  repeated CompoundQueueData compound_que_data_list = 9;
}

message CompoundQueueData {
  uint32 output_count = 1;
  uint32 compound_id = 4;
  uint32 output_time = 14;
  uint32 wait_count = 8;
}

// CmdId: 128
// EnetChannelId: 0
// EnetIsReliable: true
message CompoundUnlockNotify {
  uint32 compound_id = 3;
}


// CmdId: 195
// EnetChannelId: 0
// EnetIsReliable: true
message CookDataNotify {
  repeated CookRecipeData recipe_data_list = 2;
  uint32 grade = 11;
}

// CmdId: 134
// EnetChannelId: 0
// EnetIsReliable: true
message CookGradeDataNotify {
  uint32 grade = 12;
}

message CookRecipeData {
  uint32 proficiency = 13;
  uint32 recipe_id = 9;
}


// CmdId: 106
// EnetChannelId: 0
// EnetIsReliable: true
message CookRecipeDataNotify {
  CookRecipeData recipe_data = 4;
}

message CoopCg {
  bool is_unlock = 14;
  uint32 id = 8;
}

// CmdId: 1983
// EnetChannelId: 0
// EnetIsReliable: true
message CoopCgShowNotify {
  repeated uint32 cg_list = 10;
}

// CmdId: 1994
// EnetChannelId: 0
// EnetIsReliable: true
message CoopCgUpdateNotify {
  repeated uint32 cg_list = 13;
}


message CoopChapter {
  repeated CoopCg coop_cg_list = 1;
  uint32 id = 2;
  repeated CoopPoint coop_point_list = 11;
  repeated uint32 finish_dialog_list = 10;
  uint32 finished_end_count = 14;
  uint32 total_end_count = 7;
  repeated CoopReward coop_reward_list = 5;
  repeated uint32 lock_reason_list = 12;
  State state = 4;
  map<uint32, uint32> seen_ending_map = 9;
  enum State {
    STATE_CLOSE = 0;
    STATE_COND_NOT_MEET = 1;
    STATE_COND_MEET = 2;
    STATE_ACCEPT = 3;
  }
}


// CmdId: 1972
// EnetChannelId: 0
// EnetIsReliable: true
message CoopChapterUpdateNotify {
  repeated CoopChapter chapter_list = 14;
}


// CmdId: 1979
// EnetChannelId: 0
// EnetIsReliable: true
message CoopDataNotify {
  repeated CoopChapter chapter_list = 15;
  repeated uint32 viewed_chapter_list = 7;
  bool is_have_progress = 10;
  uint32 cur_coop_point = 5;
}

message CoopPoint {
  uint32 self_confidence = 15;
  State state = 10;
  uint32 id = 14;
  enum State {
    STATE_UNSTARTED = 0;
    STATE_STARTED = 1;
    STATE_FINISHED = 2;
  }
}


// CmdId: 1991
// EnetChannelId: 0
// EnetIsReliable: true
message CoopPointUpdateNotify {
  CoopPoint coop_point = 13;
}

// CmdId: 1998
// EnetChannelId: 0
// EnetIsReliable: true
message CoopProgressUpdateNotify {
  uint32 cur_coop_point = 11;
  bool is_have_progress = 12;
}

message CoopReward {
  uint32 id = 5;
  State state = 6;
  enum State {
    STATE_UNLOCK = 0;
    STATE_LOCK = 1;
    STATE_TAKEN = 2;
  }
}


// CmdId: 1999
// EnetChannelId: 0
// EnetIsReliable: true
message CoopRewardUpdateNotify {
  repeated CoopReward reward_list = 7;
}


message CreateEntityInfo {
  uint32 level = 5;
  Vector pos = 6;
  Vector rot = 7;
  uint32 scene_id = 10;
  uint32 room_id = 11;
  uint32 client_unique_id = 12;
  oneof entity {
    uint32 monster_id = 1;
    uint32 npc_id = 2;
    uint32 gadget_id = 3;
    uint32 item_id = 4;
  }
  oneof entity_create_info {
    CreateGadgetInfo gadget = 13;
  }
}


message CreateGadgetInfo {
  GadgetBornType born_type = 1;
  Chest chest = 2;
  message Chest {
    uint32 chest_drop_id = 1;
    bool is_show_cutscene = 2;
  }
}


// CmdId: 367
// EnetChannelId: 0
// EnetIsReliable: true
message CreateMassiveEntityNotify {
  repeated ServerMassiveEntity massive_entity_list = 15;
}


// CmdId: 342
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CreateMassiveEntityReq {
  repeated ClientMassiveEntity massive_entity_list = 1;
}

// CmdId: 330
// EnetChannelId: 0
// EnetIsReliable: true
message CreateMassiveEntityRsp {
  int32 retcode = 1;
}

enum CreateReason {
  CREATE_REASON_NONE = 0;
  CREATE_REASON_QUEST = 1;
  CREATE_REASON_ENERGY = 2;
}


// CmdId: 893
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CreateVehicleReq {
  Vector pos = 11;
  uint32 vehicle_id = 2;
  uint32 scene_point_id = 7;
  Vector rot = 5;
}

// CmdId: 827
// EnetChannelId: 0
// EnetIsReliable: true
message CreateVehicleRsp {
  int32 retcode = 10;
  uint32 vehicle_id = 9;
  uint32 entity_id = 11;
}


message CrucibleActivityDetailInfo {
  uint32 cost_time = 5;
  uint32 battle_world_level = 12;
  repeated CrucibleBattleUidInfo uid_info_list = 3;
  Vector pos = 9;
}


message CrucibleBattleUidInfo {
  ProfilePicture profile_picture = 15;
  uint32 uid = 4;
  string nickname = 5;
  string online_id = 13;
  uint32 icon = 11;
}


message CrystalLinkActivityDetailInfo {
  repeated Unk2700_IOLMLCCBAKP Unk2700_FIKHCFMEOAJ = 3;
  uint32 difficulty_id = 7;
}

message CrystalLinkSettleInfo {
  uint32 kill_elite_monster_num = 2;
  uint32 final_score = 6;
  uint32 level_id = 12;
  bool is_new_record = 13;
  uint32 difficulty_id = 9;
  uint32 kill_normal_mosnter_num = 3;
}

message CurVehicleInfo {
  uint32 entity_id = 1;
  uint32 pos = 2;
}

message CustomCommonNodeInfo {
  int32 parent_index = 1;
  uint32 config_id = 2;
  string slot_identifier = 3;
}


message CustomDungeonResultInfo {
  bool Unk2700_BONNHGKDLFO = 12;
  uint32 Unk2700_FBBEJKCDMEI = 9;
  repeated Unk2700_FDEGJOCDDGH child_challenge_list = 6;
  uint64 Unk2700_ONOOJBEABOE = 3;
  Unk2700_OCOKILBJIPJ Unk2700_ONCDLPDHFAB = 7;
  uint32 time_cost = 11;
  bool Unk2700_IBDCFAMBGOK = 2;
  bool Unk2700_HBFLKFOCKBF = 14;
}


message CustomGadgetTreeInfo {
  repeated CustomCommonNodeInfo node_list = 1;
}

// CmdId: 296
// EnetChannelId: 0
// EnetIsReliable: true
message CutSceneBeginNotify {
  uint32 cutscene_id = 14;
  bool is_wait_others = 9;
}

// CmdId: 215
// EnetChannelId: 0
// EnetIsReliable: true
message CutSceneEndNotify {
  int32 retcode = 5;
  uint32 cutscene_id = 14;
}

// CmdId: 262
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message CutSceneFinishNotify {
  uint32 cutscene_id = 12;
}

message CylinderRegionSize {
  float radius = 8;
  float height = 7;
}


message DailyDungeonEntryInfo {
  uint32 dungeon_entry_config_id = 12;
  uint32 dungeon_entry_id = 15;
  DungeonEntryInfo recommend_dungeon_entry_info = 1;
  uint32 recommend_dungeon_id = 4;
}

// CmdId: 158
// EnetChannelId: 0
// EnetIsReliable: true
message DailyTaskDataNotify {
  uint32 score_reward_id = 11;
  uint32 finished_num = 4;
  bool is_taken_score_reward = 9;
}

// CmdId: 111
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DailyTaskFilterCityReq {
  uint32 city_id = 8;
}

// CmdId: 144
// EnetChannelId: 0
// EnetIsReliable: true
message DailyTaskFilterCityRsp {
  int32 retcode = 5;
  uint32 city_id = 9;
}

message DailyTaskInfo {
  uint32 reward_id = 3;
  uint32 progress = 13;
  uint32 finish_progress = 10;
  uint32 daily_task_id = 4;
  bool is_finished = 14;
}


// CmdId: 170
// EnetChannelId: 0
// EnetIsReliable: true
message DailyTaskProgressNotify {
  DailyTaskInfo info = 12;
}

// CmdId: 117
// EnetChannelId: 0
// EnetIsReliable: true
message DailyTaskScoreRewardNotify {
  uint32 reward_id = 14;
}

// CmdId: 186
// EnetChannelId: 0
// EnetIsReliable: true
message DailyTaskUnlockedCitiesNotify {
  repeated uint32 unlocked_city_list = 12;
}


// CmdId: 167
// EnetChannelId: 0
// EnetIsReliable: true
message DataResVersionNotify {
  string client_silence_md_5 = 10;
  string client_silence_version_suffix = 15;
  ResVersionConfig res_version_config = 9;
  bool is_data_need_relogin = 7;
  DataResVersionOpType op_type = 12;
  uint32 client_data_version = 2;
  string client_version_suffix = 5;
  uint32 client_silence_data_version = 1;
  string client_md_5 = 14;
  enum DataResVersionOpType {
    DATA_RES_VERSION_OP_TYPE_NONE = 0;
    DATA_RES_VERSION_OP_TYPE_RELOGIN = 1;
    DATA_RES_VERSION_OP_TYPE_MP_RELOGIN = 2;
  }
}


// CmdId: 4003
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DealAddFriendReq {
  DealAddFriendResultType deal_add_friend_result = 12;
  uint32 target_uid = 10;
}

enum DealAddFriendResultType {
  DEAL_ADD_FRIEND_RESULT_TYPE_REJECT = 0;
  DEAL_ADD_FRIEND_RESULT_TYPE_ACCEPT = 1;
}


// CmdId: 4090
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DealAddFriendRsp {
  int32 retcode = 1;
  uint32 target_uid = 5;
  DealAddFriendResultType deal_add_friend_result = 6;
}

// CmdId: 101
// TargetService: 101
// EnetChannelId: 2
// EnetIsReliable: true
message DebugNotify {
  uint32 id = 1;
  string name = 2;
  Retcode retcode = 3;
  enum Retcode {
    RETCODE_SUCC = 0;
    RETCODE_FAIL = 1;
  }
}

// CmdId: 1421
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DelMailReq {
  repeated uint32 mail_id_list = 12;
}

// CmdId: 1403
// EnetChannelId: 0
// EnetIsReliable: true
message DelMailRsp {
  int32 retcode = 11;
  repeated uint32 mail_id_list = 5;
}

// CmdId: 3318
// EnetChannelId: 0
// EnetIsReliable: true
message DelScenePlayTeamEntityNotify {
  repeated uint32 del_entity_id_list = 2;
  uint32 scene_id = 4;
}

// CmdId: 302
// EnetChannelId: 0
// EnetIsReliable: true
message DelTeamEntityNotify {
  repeated uint32 del_entity_id_list = 15;
  uint32 scene_id = 8;
}

// CmdId: 4053
// EnetChannelId: 0
// EnetIsReliable: true
message DeleteFriendNotify {
  uint32 target_uid = 12;
}

// CmdId: 4031
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DeleteFriendReq {
  uint32 target_uid = 13;
}

// CmdId: 4075
// EnetChannelId: 0
// EnetIsReliable: true
message DeleteFriendRsp {
  uint32 target_uid = 14;
  int32 retcode = 5;
}

message DeliveryActivityDetailInfo {
  uint32 day_index = 14;
  bool is_taken_reward = 13;
  repeated uint32 finished_delivery_quest_index = 4;
}


// CmdId: 358
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DestroyMassiveEntityNotify {
  repeated ClientMassiveEntity massive_entity_list = 7;
}


// CmdId: 640
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DestroyMaterialReq {
  repeated MaterialInfo material_list = 5;
}

// CmdId: 618
// EnetChannelId: 0
// EnetIsReliable: true
message DestroyMaterialRsp {
  repeated uint32 item_count_list = 12;
  repeated uint32 item_id_list = 13;
  int32 retcode = 11;
}

// CmdId: 8464
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DigActivityChangeGadgetStateReq {
  uint32 entity_id = 10;
}

// CmdId: 8430
// EnetChannelId: 0
// EnetIsReliable: true
message DigActivityChangeGadgetStateRsp {
  uint32 entity_id = 15;
  int32 retcode = 6;
}


message DigActivityDetailInfo {
  repeated uint32 stage_id_list = 15;
  repeated DigMarkPoint dig_mark_point_list = 11;
  uint32 stage_id = 8;
}


// CmdId: 8109
// EnetChannelId: 0
// EnetIsReliable: true
message DigActivityMarkPointChangeNotify {
  repeated DigMarkPoint dig_mark_point_list = 11;
}


message DigMarkPoint {
  Vector pos = 1;
  uint32 bundle_id = 13;
  Vector rot = 3;
}

// CmdId: 8259
// EnetChannelId: 0
// EnetIsReliable: true
message DisableRoguelikeTrapNotify {
  uint32 card_id = 13;
}

// CmdId: 1512
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DoGachaReq {
  uint32 gacha_times = 10;
  uint32 gacha_schedule_id = 7;
  uint32 gacha_type = 14;
  uint32 gacha_random = 13;
  string gacha_tag = 4;
}


// CmdId: 1535
// EnetChannelId: 0
// EnetIsReliable: true
message DoGachaRsp {
  bool Unk2700_LEEPELHDING = 1435;
  uint32 gacha_schedule_id = 5;
  uint32 wish_item_id = 8;
  int32 retcode = 13;
  uint32 cost_item_num = 10;
  uint32 gacha_times_limit = 1;
  uint32 cost_item_id = 14;
  uint32 gacha_type = 12;
  uint32 ten_cost_item_id = 7;
  uint32 wish_max_progress = 9;
  uint32 Unk2700_OJKKHDLEDCI = 1240;
  uint32 ten_cost_item_num = 3;
  uint32 left_gacha_times = 6;
  uint32 wish_progress = 2;
  uint32 gacha_times = 4;
  repeated GachaItem gacha_item_list = 15;
  uint32 new_gacha_random = 11;
}

// CmdId: 8148
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DoRoguelikeDungeonCardGachaReq {
  uint32 dungeon_id = 13;
  uint32 cell_id = 6;
}

// CmdId: 8472
// EnetChannelId: 0
// EnetIsReliable: true
message DoRoguelikeDungeonCardGachaRsp {
  bool is_can_refresh = 8;
  repeated uint32 card_list = 15;
  int32 retcode = 5;
}

// CmdId: 147
// EnetChannelId: 0
// EnetIsReliable: true
message DoSetPlayerBornDataNotify {}

// CmdId: 5490
// EnetChannelId: 0
// EnetIsReliable: true
message DraftGuestReplyInviteNotify {
  uint32 draft_id = 5;
  bool is_agree = 9;
  uint32 guest_uid = 10;
}

// CmdId: 5421
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DraftGuestReplyInviteReq {
  uint32 draft_id = 10;
  bool is_agree = 3;
}

// CmdId: 5403
// EnetChannelId: 0
// EnetIsReliable: true
message DraftGuestReplyInviteRsp {
  uint32 draft_id = 3;
  int32 retcode = 1;
  bool is_agree = 10;
}

// CmdId: 5497
// EnetChannelId: 0
// EnetIsReliable: true
message DraftGuestReplyTwiceConfirmNotify {
  bool is_agree = 14;
  uint32 draft_id = 15;
  uint32 guest_uid = 7;
}

// CmdId: 5431
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DraftGuestReplyTwiceConfirmReq {
  bool is_agree = 15;
  uint32 draft_id = 14;
}

// CmdId: 5475
// EnetChannelId: 0
// EnetIsReliable: true
message DraftGuestReplyTwiceConfirmRsp {
  uint32 draft_id = 5;
  bool is_agree = 13;
  int32 retcode = 3;
}


message DraftInviteFailInfo {
  uint32 uid = 8;
  DraftInviteFailReason reason = 5;
}

enum DraftInviteFailReason {
  DRAFT_INVITE_FAIL_REASON_UNKNOWN = 0;
  DRAFT_INVITE_FAIL_REASON_ACTIVITY_NOT_OPEN = 1;
  DRAFT_INVITE_FAIL_REASON_ACTIVITY_PLAY_NOT_OPEN = 2;
  DRAFT_INVITE_FAIL_REASON_SCENE_NOT_MEET = 3;
  DRAFT_INVITE_FAIL_REASON_WORLD_NOT_MEET = 4;
  DRAFT_INVITE_FAIL_REASON_PLAY_LIMIT_NOT_MEET = 5;
}

// CmdId: 5473
// EnetChannelId: 0
// EnetIsReliable: true
message DraftInviteResultNotify {
  bool is_all_argee = 9;
  uint32 draft_id = 13;
}

// CmdId: 5407
// EnetChannelId: 0
// EnetIsReliable: true
message DraftOwnerInviteNotify {
  uint32 draft_id = 4;
  uint32 invite_deadline_time = 15;
}

// CmdId: 5412
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DraftOwnerStartInviteReq {
  uint32 draft_id = 14;
}


// CmdId: 5435
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DraftOwnerStartInviteRsp {
  repeated DraftInviteFailInfo invite_fail_info_list = 15;
  int32 retcode = 9;
  uint32 wrong_uid = 3;
  uint32 draft_id = 14;
}

// CmdId: 5499
// EnetChannelId: 0
// EnetIsReliable: true
message DraftOwnerTwiceConfirmNotify {
  uint32 twice_confirm_deadline_time = 15;
  uint32 draft_id = 14;
}

// CmdId: 5448
// EnetChannelId: 0
// EnetIsReliable: true
message DraftTwiceConfirmResultNotify {
  bool is_all_argee = 7;
  uint32 draft_id = 1;
}


message DragonSpineActivityDetailInfo {
  bool is_content_closed = 10;
  repeated DragonSpineChapterInfo chapter_info_list = 4;
  uint32 weapon_enhance_level = 2;
  uint32 content_finish_time = 15;
  uint32 shimmering_essence = 13;
  uint32 warm_essence = 11;
  uint32 wondrous_essence = 7;
}

// CmdId: 2069
// EnetChannelId: 0
// EnetIsReliable: true
message DragonSpineChapterFinishNotify {
  uint32 schedule_id = 13;
  uint32 chapter_id = 11;
  uint32 weapon_enhance_level = 14;
}

message DragonSpineChapterInfo {
  uint32 progress = 14;
  uint32 open_time = 6;
  bool is_open = 11;
  uint32 chapter_id = 9;
  uint32 finished_mission_num = 10;
}

// CmdId: 2022
// EnetChannelId: 0
// EnetIsReliable: true
message DragonSpineChapterOpenNotify {
  uint32 schedule_id = 12;
  uint32 chapter_id = 10;
}

// CmdId: 2065
// EnetChannelId: 0
// EnetIsReliable: true
message DragonSpineChapterProgressChangeNotify {
  uint32 schedule_id = 7;
  uint32 chapter_id = 11;
  uint32 cur_progress = 5;
}

// CmdId: 2088
// EnetChannelId: 0
// EnetIsReliable: true
message DragonSpineCoinChangeNotify {
  uint32 shimmering_essence = 4;
  uint32 warm_essence = 13;
  uint32 schedule_id = 12;
  uint32 wondrous_essence = 11;
}


// CmdId: 650
// EnetChannelId: 0
// EnetIsReliable: true
message DropHintNotify {
  Vector position = 7;
  repeated uint32 item_id_list = 14;
}


// CmdId: 699
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DropItemReq {
  Vector pos = 11;
  StoreType store_type = 1;
  uint32 count = 2;
  uint64 guid = 13;
}


// CmdId: 631
// EnetChannelId: 0
// EnetIsReliable: true
message DropItemRsp {
  int32 retcode = 9;
  uint64 guid = 1;
  StoreType store_type = 15;
}

enum DropSubfieldType {
  DROP_SUBFIELD_TYPE_NONE = 0;
  DROP_SUBFIELD_TYPE_ONE = 1;
  DROP_SUBFIELD_TYPE_Unk2700_NNGMHCEADHE = 2;
  DROP_SUBFIELD_TYPE_Unk2700_MKIJPEHKAJI = 3;
  DROP_SUBFIELD_TYPE_Unk2700_DJDNENLGIEB = 4;
}


message DungeonCandidateTeamAvatar {
  uint32 player_uid = 2;
  AvatarInfo avatar_info = 6;
}

// CmdId: 956
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonCandidateTeamChangeAvatarReq {
  repeated uint64 avatar_guid_list = 5;
}

// CmdId: 942
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamChangeAvatarRsp {
  int32 retcode = 4;
}

// CmdId: 995
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonCandidateTeamCreateReq {
  uint32 point_id = 7;
  uint32 dungeon_id = 6;
}

// CmdId: 906
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamCreateRsp {
  int32 retcode = 1;
}


// CmdId: 963
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamDismissNotify {
  DungeonCandidateTeamDismissReason reason = 9;
  uint32 player_uid = 12;
}

enum DungeonCandidateTeamDismissReason {
  DUNGEON_CANDIDATE_TEAM_DISMISS_REASON_TPDR_NORMAL = 0;
  DUNGEON_CANDIDATE_TEAM_DISMISS_REASON_TPDR_DIE = 1;
  DUNGEON_CANDIDATE_TEAM_DISMISS_REASON_TPDR_DISCONNECT = 2;
}


// CmdId: 927
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamInfoNotify {
  map<uint32, DungeonCandidateTeamPlayerState> player_state_map = 10;
  uint32 dungeon_id = 9;
  repeated uint32 ready_player_uid = 13;
  uint32 match_type = 2;
  repeated DungeonCandidateTeamAvatar avatar_list = 4;
}

// CmdId: 994
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamInviteNotify {
  uint32 player_uid = 5;
  uint32 vaild_deadline_time_sec = 9;
  uint32 dungeon_id = 6;
}

// CmdId: 934
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonCandidateTeamInviteReq {
  repeated uint32 player_uids = 5;
}

// CmdId: 950
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamInviteRsp {
  int32 retcode = 12;
  repeated uint32 Unk2700_OJEGACKKJAE = 7;
}

// CmdId: 943
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonCandidateTeamKickReq {
  uint32 player_uid = 9;
}

// CmdId: 974
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamKickRsp {
  int32 retcode = 1;
}

// CmdId: 976
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonCandidateTeamLeaveReq {}

// CmdId: 946
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamLeaveRsp {
  int32 retcode = 14;
}


// CmdId: 926
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamPlayerLeaveNotify {
  DungeonCandidateTeamPlayerLeaveReason reason = 3;
  uint32 player_uid = 13;
}

enum DungeonCandidateTeamPlayerLeaveReason {
  DUNGEON_CANDIDATE_TEAM_PLAYER_LEAVE_REASON_TPLR_NORMAL = 0;
  DUNGEON_CANDIDATE_TEAM_PLAYER_LEAVE_REASON_TPLR_DIE = 1;
  DUNGEON_CANDIDATE_TEAM_PLAYER_LEAVE_REASON_TPLR_BE_KICK = 2;
  DUNGEON_CANDIDATE_TEAM_PLAYER_LEAVE_REASON_DISCONNECT = 3;
}

enum DungeonCandidateTeamPlayerState {
  DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_IDLE = 0;
  DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_CHANGING_AVATAR = 1;
  DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_READY = 2;
}

// CmdId: 988
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamRefuseNotify {
  uint32 player_uid = 3;
}

// CmdId: 941
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonCandidateTeamReplyInviteReq {
  bool is_accept = 5;
}

// CmdId: 949
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamReplyInviteRsp {
  bool is_trans_point = 4;
  int32 retcode = 2;
}

// CmdId: 918
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonCandidateTeamSetChangingAvatarReq {
  bool is_changing_avatar = 12;
}

// CmdId: 966
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamSetChangingAvatarRsp {
  int32 retcode = 2;
}

// CmdId: 991
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonCandidateTeamSetReadyReq {
  bool is_ready = 15;
}

// CmdId: 924
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonCandidateTeamSetReadyRsp {
  int32 retcode = 12;
}

// CmdId: 947
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonChallengeBeginNotify {
  uint32 father_index = 5;
  repeated uint32 param_list = 14;
  uint32 challenge_index = 6;
  uint32 challenge_id = 1;
  uint32 group_id = 4;
  repeated uint32 uid_list = 12;
}



// CmdId: 939
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonChallengeFinishNotify {
  map<uint32, StrengthenPointData> strengthen_point_data_map = 13;
  Unk2700_FHOKHHBGPEG Unk2700_ONCDLPDHFAB = 9;
  bool is_new_record = 10;
  uint32 challenge_record_type = 7;
  uint32 time_cost = 4;
  uint32 current_value = 15;
  bool is_success = 3;
  uint32 challenge_index = 5;
  oneof detail {
    ChannelerSlabLoopDungeonResultInfo channeller_slab_loop_dungeon_result_info = 1521;
    EffigyChallengeDungeonResultInfo effigy_challenge_dungeon_result_info = 1627;
    PotionDungeonResultInfo potion_dungeon_result_info = 1824;
    CustomDungeonResultInfo custom_dungeon_result_info = 1664;
  }
}

// CmdId: 982
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonDataNotify {
  map<uint32, uint32> dungeon_data_map = 1;
}


// CmdId: 975
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonDieOptionReq {
  PlayerDieOption die_option = 11;
  bool is_quit_immediately = 14;
}


// CmdId: 948
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonDieOptionRsp {
  int32 retcode = 5;
  uint32 revive_count = 10;
  PlayerDieOption die_option = 6;
}

enum DungeonEntryBlockReason {
  DUNGEON_ENTRY_BLOCK_REASON_NONE = 0;
  DUNGEON_ENTRY_BLOCK_REASON_LEVEL = 1;
  DUNGEON_ENTRY_BLOCK_REASON_QUEST = 2;
  DUNGEON_ENTRY_BLOCK_REASON_MULIPLE = 3;
}


message DungeonEntryCond {
  DungeonEntryBlockReason cond_reason = 7;
  uint32 param_1 = 8;
}


message DungeonEntryInfo {
  uint32 end_time = 6;
  uint32 dungeon_id = 5;
  uint32 boss_chest_num = 12;
  uint32 max_boss_chest_num = 13;
  uint32 next_refresh_time = 11;
  WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 9;
  uint32 start_time = 15;
  bool is_passed = 4;
  uint32 left_times = 7;
}


// CmdId: 972
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonEntryInfoReq {
  uint32 point_id = 2;
  uint32 scene_id = 9;
  repeated Uint32Pair Unk2800_GGAMJDFELPH = 4;
}


// CmdId: 998
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonEntryInfoRsp {
  repeated DungeonEntryInfo dungeon_entry_list = 12;
  uint32 point_id = 15;
  repeated Unk2800_MHCFAGCKGIB Unk2800_JJFLDCLMEHD = 4;
  uint32 recommend_dungeon_id = 14;
  int32 retcode = 11;
}

// CmdId: 3147
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonEntryToBeExploreNotify {
  uint32 dungeon_entry_scene_point_id = 2;
  uint32 scene_id = 4;
  uint32 dungeon_entry_config_id = 10;
}

// CmdId: 922
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonFollowNotify {
  uint32 target_uid = 8;
}

// CmdId: 965
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonGetStatueDropReq {}

// CmdId: 904
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonGetStatueDropRsp {
  int32 retcode = 12;
}

// CmdId: 917
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonInterruptChallengeReq {
  uint32 challenge_index = 14;
  uint32 group_id = 13;
  uint32 challenge_id = 11;
}

// CmdId: 902
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonInterruptChallengeRsp {
  int32 retcode = 1;
  uint32 challenge_index = 2;
  uint32 group_id = 15;
  uint32 challenge_id = 11;
}


// CmdId: 931
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonPlayerDieNotify {
  map<uint32, StrengthenPointData> strengthen_point_data_map = 15;
  uint32 wait_time = 1;
  uint32 dungeon_id = 9;
  uint32 murderer_entity_id = 13;
  PlayerDieType die_type = 3;
  uint32 revive_count = 6;
  oneof entity {
    uint32 monster_id = 4;
    uint32 gadget_id = 8;
  }
}


// CmdId: 981
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonPlayerDieReq {
  PlayerDieType die_type = 6;
  uint32 dungeon_id = 8;
}

// CmdId: 905
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonPlayerDieRsp {
  int32 retcode = 5;
}

// CmdId: 957
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonRestartInviteNotify {
  uint32 player_uid = 3;
  uint32 cd = 15;
  uint32 point_id = 13;
  uint32 dungeon_id = 10;
}

// CmdId: 987
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonRestartInviteReplyNotify {
  bool is_accept = 6;
  uint32 player_uid = 9;
}

// CmdId: 1000
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonRestartInviteReplyReq {
  bool is_accept = 11;
}

// CmdId: 916
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonRestartInviteReplyRsp {
  bool is_accept = 10;
  bool is_trans_point = 1;
  int32 retcode = 9;
}

// CmdId: 961
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonRestartReq {}

// CmdId: 940
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonRestartResultNotify {
  bool is_add_accpet = 9;
}

// CmdId: 929
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonRestartRsp {
  uint32 dungeon_id = 15;
  int32 retcode = 9;
  uint32 point_id = 14;
}

// CmdId: 968
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonReviseLevelNotify {
  uint32 revise_level = 7;
  uint32 dungeon_id = 14;
}


message DungeonSettleExhibitionInfo {
  OnlinePlayerInfo player_info = 3;
  repeated ExhibitionDisplayInfo card_list = 13;
}




// CmdId: 999
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonSettleNotify {
  map<uint32, StrengthenPointData> strengthen_point_data_map = 14;
  bool is_success = 7;
  uint32 close_time = 4;
  uint32 Unk2700_OMCCFBBDJMI = 1;
  map<uint32, ParamList> settle_show = 5;
  repeated DungeonSettleExhibitionInfo exhibition_info_list = 8;
  repeated uint32 fail_cond_list = 11;
  uint32 dungeon_id = 13;
  uint32 result = 10;
  oneof detail {
    TowerLevelEndNotify tower_level_end_notify = 351;
    TrialAvatarFirstPassDungeonNotify trial_avatar_first_pass_dungeon_notify = 635;
    ChannelerSlabLoopDungeonResultInfo channeller_slab_loop_dungeon_result_info = 686;
    EffigyChallengeDungeonResultInfo effigy_challenge_dungeon_result_info = 328;
    RoguelikeDungeonSettleInfo roguelike_dungeon_settle_info = 1482;
    CrystalLinkSettleInfo crystal_link_settle_info = 112;
    SummerTimeV2DungeonSettleInfo summer_time_v_2_dungeon_settle_info = 1882;
  }
}

// CmdId: 997
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonShowReminderNotify {
  uint32 reminder_id = 9;
}

// CmdId: 958
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonSlipRevivePointActivateReq {
  uint32 slip_revive_point_id = 9;
}

// CmdId: 970
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonSlipRevivePointActivateRsp {
  uint32 slip_revive_point_id = 14;
  int32 retcode = 4;
}

// CmdId: 990
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message DungeonWayPointActivateReq {
  uint32 way_point_id = 3;
}

// CmdId: 973
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonWayPointActivateRsp {
  int32 retcode = 6;
  uint32 way_point_id = 7;
}

// CmdId: 903
// EnetChannelId: 0
// EnetIsReliable: true
message DungeonWayPointNotify {
  bool is_add = 9;
  repeated uint32 active_way_point_list = 4;
}

// CmdId: 65
// EnetChannelId: 0
// EnetIsReliable: true
message EchoNotify {
  uint32 seq_id = 4;
  string content = 9;
}


message EchoShellDetailInfo {
  repeated Unk2800_CEAECGGBOKL Unk2800_KEMCFBCAMMM = 8;
  repeated uint32 shell_list = 13;
  repeated uint32 Unk2800_BFONDMJGNKL = 4;
  repeated uint32 taken_reward_list = 2;
}

message EchoShellInfo {
  uint32 shell_id = 1;
}

// CmdId: 8114
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EchoShellTakeRewardReq {
  uint32 reward_id = 10;
}

// CmdId: 8797
// EnetChannelId: 0
// EnetIsReliable: true
message EchoShellTakeRewardRsp {
  uint32 reward_id = 6;
  int32 retcode = 10;
}

// CmdId: 8150
// EnetChannelId: 0
// EnetIsReliable: true
message EchoShellUpdateNotify {
  uint32 shell_id = 1;
}


message EffigyActivityDetailInfo {
  uint32 cur_score = 5;
  repeated EffigyDailyInfo daily_info_list = 14;
  uint32 last_difficulty_id = 9;
  repeated uint32 taken_reward_index_list = 2;
}

message EffigyChallengeDungeonResultInfo {
  uint32 challenge_score = 7;
  bool is_in_time_limit = 8;
  uint32 challenge_id = 6;
  bool is_success = 15;
  uint32 challenge_max_score = 13;
}

// CmdId: 2090
// EnetChannelId: 0
// EnetIsReliable: true
message EffigyChallengeInfoNotify {
  uint32 difficulty_id = 9;
  repeated uint32 condition_id_list = 11;
  uint32 challenge_score = 14;
  uint32 challenge_id = 8;
}

// CmdId: 2046
// EnetChannelId: 0
// EnetIsReliable: true
message EffigyChallengeResultNotify {
  bool is_success = 5;
  uint32 challenge_max_score = 12;
  uint32 challenge_score = 3;
  uint32 challenge_id = 7;
}

message EffigyDailyInfo {
  uint32 challenge_max_score = 6;
  bool is_first_pass_reward_taken = 12;
  uint32 challenge_total_score = 15;
  uint32 challenge_id = 1;
  uint32 challenge_count = 3;
  uint32 day_index = 14;
  uint32 begin_time = 2;
}

// CmdId: 217
// EnetChannelId: 0
// EnetIsReliable: true
message EndCameraSceneLookNotify {}

// CmdId: 8191
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EnterChessDungeonReq {
  uint32 map_id = 12;
}

// CmdId: 8592
// EnetChannelId: 0
// EnetIsReliable: true
message EnterChessDungeonRsp {
  int32 retcode = 8;
  uint32 map_id = 13;
}

// CmdId: 5826
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EnterFishingReq {
  uint32 fish_pool_id = 3;
}

// CmdId: 5818
// EnetChannelId: 0
// EnetIsReliable: true
message EnterFishingRsp {
  int32 retcode = 7;
  uint32 fish_pool_id = 9;
}

// CmdId: 3931
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EnterMechanicusDungeonReq {
  uint32 difficult_level = 7;
}

// CmdId: 3975
// EnetChannelId: 0
// EnetIsReliable: true
message EnterMechanicusDungeonRsp {
  uint32 wrong_uid = 12;
  uint32 difficult_level = 13;
  int32 retcode = 6;
  uint32 dungeon_id = 11;
}


// CmdId: 8652
// EnetChannelId: 0
// EnetIsReliable: true
message EnterRoguelikeDungeonNotify {
  bool is_mist_clear = 14;
  uint32 dungeon_weight_config_id = 2;
  repeated RoguelikeRuneRecord rune_record_list = 6;
  repeated uint64 onstage_avatar_guid_list = 9;
  bool is_first_enter = 205;
  repeated uint32 explored_cell_list = 3;
  map<uint32, RogueCellInfo> cell_info_map = 11;
  uint32 dungeon_id = 1;
  uint32 refresh_cost_item_count = 1999;
  float bonus_resource_prop = 13;
  uint32 revise_monster_level = 1541;
  uint32 stage_id = 15;
  repeated uint64 backstage_avatar_guid_list = 10;
  uint32 cur_cell_id = 12;
  uint32 refresh_cost_item_id = 7;
  uint32 cur_level = 8;
}

// CmdId: 277
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EnterSceneDoneReq {
  uint32 enter_scene_token = 11;
}

// CmdId: 237
// EnetChannelId: 0
// EnetIsReliable: true
message EnterSceneDoneRsp {
  uint32 enter_scene_token = 15;
  int32 retcode = 7;
}

// CmdId: 252
// EnetChannelId: 0
// EnetIsReliable: true
message EnterScenePeerNotify {
  uint32 dest_scene_id = 12;
  uint32 enter_scene_token = 11;
  uint32 host_peer_id = 14;
  uint32 peer_id = 1;
}

// CmdId: 208
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EnterSceneReadyReq {
  uint32 enter_scene_token = 9;
}

// CmdId: 209
// EnetChannelId: 0
// EnetIsReliable: true
message EnterSceneReadyRsp {
  uint32 enter_scene_token = 1;
  int32 retcode = 4;
}

// CmdId: 256
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EnterSceneWeatherAreaNotify {
  uint32 weather_gadget_id = 13;
}

// CmdId: 205
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EnterTransPointRegionNotify {
  uint32 scene_id = 8;
  uint32 point_id = 6;
}

// CmdId: 2118
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EnterTrialAvatarActivityDungeonReq {
  uint32 enter_point_id = 10;
  uint32 trial_avatar_index_id = 5;
  uint32 activity_id = 14;
}

// CmdId: 2183
// EnetChannelId: 0
// EnetIsReliable: true
message EnterTrialAvatarActivityDungeonRsp {
  int32 retcode = 11;
  uint32 trial_avatar_index_id = 13;
  uint32 activity_id = 10;
}

enum EnterType {
  ENTER_TYPE_NONE = 0;
  ENTER_TYPE_SELF = 1;
  ENTER_TYPE_GOTO = 2;
  ENTER_TYPE_JUMP = 3;
  ENTER_TYPE_OTHER = 4;
  ENTER_TYPE_BACK = 5;
  ENTER_TYPE_DUNGEON = 6;
  ENTER_TYPE_DUNGEON_REPLAY = 7;
  ENTER_TYPE_GOTO_BY_PORTAL = 8;
  ENTER_TYPE_SELF_HOME = 9;
  ENTER_TYPE_OTHER_HOME = 10;
  ENTER_TYPE_GOTO_RECREATE = 11;
}

// CmdId: 250
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EnterWorldAreaReq {
  uint32 area_type = 8;
  uint32 area_id = 1;
}

// CmdId: 243
// EnetChannelId: 0
// EnetIsReliable: true
message EnterWorldAreaRsp {
  uint32 area_type = 1;
  uint32 area_id = 7;
  int32 retcode = 9;
}


message EntityAbilityInvokeEntry {
  uint32 entity_id = 8;
  repeated AbilityInvokeEntry invokes = 1;
}

// CmdId: 340
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EntityAiKillSelfNotify {
  uint32 entity_id = 12;
}


// CmdId: 400
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EntityAiSyncNotify {
  repeated uint32 local_avatar_alerted_monster_list = 15;
  repeated AiSyncInfo info_list = 1;
}


// CmdId: 394
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EntityAuthorityChangeNotify {
  repeated AuthorityChange authority_change_list = 15;
}



message EntityAuthorityInfo {
  AbilitySyncStateInfo ability_info = 1;
  EntityRendererChangedInfo renderer_changed_info = 2;
  SceneEntityAiInfo ai_info = 3;
  Vector born_pos = 4;
  repeated AnimatorParameterValueInfoPair pose_para_list = 5;
  Unk2700_HFMDKDHCJCM Unk2700_KDGMOPELHNE = 6;
}

message EntityClientData {
  uint32 wind_change_scene_time = 1;
  float windmill_sync_angle = 2;
  int32 wind_change_target_level = 3;
}

message EntityConfigHashEntry {
  uint32 job_id = 13;
  int32 hash_value = 6;
  uint32 entity_id = 11;
}


// CmdId: 3189
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EntityConfigHashNotify {
  repeated EntityConfigHashEntry ability_entry_list = 3;
  repeated EntityConfigHashEntry avatar_entry_list = 15;
  repeated EntityConfigHashEntry combat_entry_list = 8;
}

message EntityEnvironmentInfo {
  uint32 json_climate_type = 1;
  uint32 climate_area_id = 2;
}


// CmdId: 1203
// EnetChannelId: 0
// EnetIsReliable: true
message EntityFightPropChangeReasonNotify {
  repeated uint32 param_list = 10;
  float prop_delta = 1;
  ChangeHpReason change_hp_reason = 14;
  PropChangeReason reason = 6;
  uint32 entity_id = 5;
  ChangeEnergyReason change_energy_reson = 15;
  uint32 prop_type = 13;
}

// CmdId: 1212
// EnetChannelId: 0
// EnetIsReliable: true
message EntityFightPropNotify {
  uint32 entity_id = 4;
  map<uint32, float> fight_prop_map = 8;
}

// CmdId: 1235
// EnetChannelId: 0
// EnetIsReliable: true
message EntityFightPropUpdateNotify {
  map<uint32, float> fight_prop_map = 15;
  uint32 entity_id = 13;
}


// CmdId: 274
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EntityForceSyncReq {
  uint32 room_id = 1;
  MotionInfo motion_info = 11;
  uint32 entity_id = 13;
  uint32 scene_time = 12;
}


// CmdId: 276
// EnetChannelId: 0
// EnetIsReliable: true
message EntityForceSyncRsp {
  uint32 scene_time = 14;
  uint32 entity_id = 6;
  MotionInfo fail_motion = 8;
  int32 retcode = 4;
}


// CmdId: 222
// EnetChannelId: 0
// EnetIsReliable: true
message EntityJumpNotify {
  Type jump_type = 9;
  Vector rot = 8;
  Vector pos = 10;
  uint32 entity_id = 12;
  enum Type {
    TYPE_NULL = 0;
    TYPE_ACTIVE = 1;
    TYPE_PASSIVE = 2;
  }
}


message EntityMoveFailInfo {
  int32 retcode = 12;
  uint32 scene_time = 9;
  MotionInfo fail_motion = 14;
  uint32 reliable_seq = 4;
  uint32 entity_id = 10;
}


message EntityMoveInfo {
  uint32 entity_id = 1;
  MotionInfo motion_info = 2;
  uint32 scene_time = 3;
  uint32 reliable_seq = 4;
  bool is_reliable = 5;
}

// CmdId: 3178
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EntityMoveRoomNotify {
  uint32 entity_id = 11;
  uint32 dest_room_id = 9;
}


// CmdId: 1272
// EnetChannelId: 0
// EnetIsReliable: true
message EntityPropNotify {
  map<uint32, PropValue> prop_map = 1;
  uint32 entity_id = 14;
}

message EntityRendererChangedInfo {
  map<string, uint32> changed_renderers = 1;
  uint32 visibility_count = 2;
  bool is_cached = 3;
}

// CmdId: 3316
// EnetChannelId: 0
// EnetIsReliable: true
message EntityTagChangeNotify {
  string tag = 2;
  uint32 entity_id = 8;
  bool is_add = 10;
}


message Equip {
  bool is_locked = 3;
  oneof detail {
    Reliquary reliquary = 1;
    Weapon weapon = 2;
  }
}

message EquipParam {
  uint32 item_id = 1;
  uint32 item_num = 2;
  uint32 item_level = 3;
  uint32 promote_level = 4;
}


message EquipParamList {
  repeated EquipParam item_list = 1;
}

// CmdId: 8306
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EquipRoguelikeRuneReq {
  repeated uint32 rune_list = 3;
}

// CmdId: 8705
// EnetChannelId: 0
// EnetIsReliable: true
message EquipRoguelikeRuneRsp {
  int32 retcode = 14;
  repeated uint32 rune_list = 1;
}

enum EventTriggerType {
  EVENT_TRIGGER_TYPE_NONE = 0;
  EVENT_TRIGGER_TYPE_ENTER_FORCE = 1;
}


// CmdId: 329
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtAiSyncCombatThreatInfoNotify {
  map<uint32, AiThreatInfo> combat_threat_info_map = 8;
}


// CmdId: 376
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtAiSyncSkillCdNotify {
  map<uint32, AiSkillCdInfo> ai_cd_map = 7;
}


message EvtAnimatorParameterInfo {
  uint32 entity_id = 4;
  bool is_server_cache = 5;
  AnimatorParameterValueInfo value = 7;
  int32 name_id = 15;
}


// CmdId: 398
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtAnimatorParameterNotify {
  EvtAnimatorParameterInfo animator_param_info = 12;
  ForwardType forward_type = 14;
}


message EvtAnimatorStateChangedInfo {
  int32 face_angle_compact = 14;
  uint32 to_state_hash = 5;
  uint32 normalized_time_compact = 9;
  uint32 Unk2700_HEMGNDKMAFO = 2;
  Vector pos = 13;
  float fade_duration = 3;
  bool Unk2700_CJCJLGHIBPK = 1;
  uint32 entity_id = 15;
  bool Unk2700_JECBLPNLJMJ = 7;
}


// CmdId: 331
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtAnimatorStateChangedNotify {
  ForwardType forward_type = 3;
  EvtAnimatorStateChangedInfo evt_animator_state_changed_info = 10;
}


// CmdId: 304
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtAvatarEnterFocusNotify {
  uint32 entity_id = 1;
  bool can_move = 10;
  bool enter_holding_focus_shoot = 13;
  bool Unk2700_GACKGHEHEIK = 6;
  bool use_auto_focus = 5;
  bool fast_focus = 3;
  bool show_cross_hair = 12;
  bool enter_normal_focus_shoot = 14;
  ForwardType forward_type = 8;
  Vector focus_forward = 7;
  bool disable_anim = 9;
  bool use_focus_sticky = 15;
  bool use_gyro = 11;
}


// CmdId: 393
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtAvatarExitFocusNotify {
  Vector finish_forward = 12;
  ForwardType forward_type = 11;
  uint32 entity_id = 14;
}


// CmdId: 318
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtAvatarLockChairReq {
  uint64 chair_id = 5;
  Vector position = 8;
}


// CmdId: 366
// EnetChannelId: 0
// EnetIsReliable: true
message EvtAvatarLockChairRsp {
  uint64 chair_id = 14;
  uint32 entity_id = 15;
  Vector position = 4;
  int32 retcode = 12;
}


// CmdId: 324
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtAvatarSitDownNotify {
  Vector position = 9;
  uint32 entity_id = 4;
  uint64 chair_id = 6;
}

// CmdId: 356
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtAvatarStandUpNotify {
  uint64 chair_id = 11;
  int32 perform_id = 6;
  int32 direction = 1;
  uint32 entity_id = 9;
}


// CmdId: 327
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtAvatarUpdateFocusNotify {
  ForwardType forward_type = 7;
  Vector focus_forward = 11;
  uint32 entity_id = 10;
}


message EvtBeingHitInfo {
  uint32 peer_id = 6;
  AttackResult attack_result = 7;
  uint32 frame_num = 4;
}


// CmdId: 372
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtBeingHitNotify {
  ForwardType forward_type = 6;
  EvtBeingHitInfo being_hit_info = 3;
}


// CmdId: 346
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtBeingHitsCombineNotify {
  ForwardType forward_type = 11;
  repeated EvtBeingHitInfo evt_being_hit_info_list = 7;
}


// CmdId: 397
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtBulletDeactiveNotify {
  ForwardType forward_type = 6;
  uint32 entity_id = 9;
  Vector disappear_pos = 4;
}


// CmdId: 348
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtBulletHitNotify {
  uint32 Unk2700_FEALLBIBHOL = 8;
  Vector hit_point = 15;
  Vector hit_normal = 11;
  int32 hit_box_index = 9;
  uint32 hit_entity_id = 3;
  uint32 entity_id = 5;
  uint32 forward_peer = 7;
  ForwardType forward_type = 2;
  HitColliderType hit_collider_type = 6;
}


// CmdId: 365
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtBulletMoveNotify {
  ForwardType forward_type = 14;
  Vector cur_pos = 1;
  uint32 entity_id = 11;
}


message EvtCombatForceSetPosInfo {
  uint32 ice_id = 9;
  uint32 collider_entity_id = 10;
  uint32 entity_id = 6;
  Vector target_pos = 1;
}


message EvtCombatSteerMotionInfo {
  Vector pos = 12;
  Vector velocity = 10;
  uint32 entity_id = 4;
  Vector face_dir = 1;
}


message EvtCompensatePosDiffInfo {
  Vector cur_pos = 14;
  uint32 entity_id = 11;
  int32 face_angle_compact = 10;
  uint32 cur_hash = 4;
  uint32 normalized_time_compact = 3;
}

// CmdId: 373
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtCostStaminaNotify {
  uint32 skill_id = 6;
  float cost_stamina = 11;
}


// CmdId: 307
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtCreateGadgetNotify {
  bool is_async_load = 8;
  uint32 camp_type = 5;
  bool sight_group_with_owner = 10;
  repeated uint32 Unk2700_BELOIHEIEAN = 889;
  ForwardType forward_type = 12;
  uint32 entity_id = 2;
  uint32 target_entity_id = 3;
  uint32 camp_id = 15;
  uint64 guid = 6;
  Vector init_euler_angles = 13;
  uint32 target_lock_point_index = 11;
  repeated uint32 Unk2700_JDNFLLGJBGA = 1920;
  Vector init_pos = 4;
  uint32 owner_entity_id = 9;
  uint32 room_id = 7;
  bool Unk2700_JBOPENAGGAF = 25;
  uint32 prop_owner_entity_id = 1;
  bool Unk2700_IHIDGKPHFME = 379;
  uint32 config_id = 14;
}


// CmdId: 321
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtDestroyGadgetNotify {
  ForwardType forward_type = 5;
  uint32 entity_id = 3;
}

// CmdId: 387
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtDestroyServerGadgetNotify {
  uint32 entity_id = 7;
}


// CmdId: 335
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtDoSkillSuccNotify {
  uint32 caster_id = 13;
  ForwardType forward_type = 10;
  Vector forward = 15;
  uint32 skill_id = 7;
}


// CmdId: 343
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtEntityRenderersChangedNotify {
  ForwardType forward_type = 8;
  bool is_server_cache = 3;
  EntityRendererChangedInfo renderer_changed_info = 5;
  uint32 entity_id = 15;
}


// CmdId: 381
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtEntityStartDieEndNotify {
  bool immediately = 15;
  uint32 die_state_flag = 12;
  uint32 entity_id = 8;
  ForwardType forward_type = 11;
}


message EvtFaceToDirInfo {
  uint32 entity_id = 12;
  Vector face_dir = 14;
}


// CmdId: 390
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtFaceToDirNotify {
  ForwardType forward_type = 13;
  EvtFaceToDirInfo evt_face_to_dir_info = 5;
}


// CmdId: 303
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtFaceToEntityNotify {
  uint32 face_entity_id = 5;
  ForwardType forward_type = 9;
  uint32 entity_id = 1;
}


message EvtFixedRushMove {
  uint32 entity_id = 15;
  float speed = 3;
  bool need_set_is_in_air = 7;
  repeated uint32 animator_state_id_list = 2;
  Vector target_pos = 9;
  bool check_animator_state_on_exit_only = 6;
  string override_collider = 13;
}


message EvtHittingOtherInfo {
  AttackResult attack_result = 2;
  uint32 peer_id = 8;
}


message EvtLightCoreMove {
  Vector target_pos = 15;
  float acelerate = 11;
  uint32 entity_id = 5;
  float max_absorb_time = 10;
  float speed = 14;
}


message EvtMonsterDoBlink {
  Vector target_rot = 3;
  Vector target_pos = 7;
  uint32 entity_id = 2;
}


message EvtMotionInfoDuringSteerAttack {
  Vector face_dir = 4;
  Vector velocity = 3;
  Vector pos = 1;
  uint32 entity_id = 6;
}


message EvtRushMoveInfo {
  int32 state_name_hash = 11;
  Vector rush_to_pos = 9;
  Vector rush_attack_target_pos = 8;
  uint32 entity_id = 4;
  float time_range = 15;
  Vector velocity = 6;
  Vector pos = 2;
  int32 face_angle_compact = 10;
}


// CmdId: 375
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtRushMoveNotify {
  ForwardType forward_type = 1;
  EvtRushMoveInfo evt_rush_move_info = 15;
}

message EvtSetAttackTargetInfo {
  uint32 entity_id = 11;
  uint32 Unk2700_MPONBCMPCIH = 6;
  uint32 attack_target_id = 7;
}


// CmdId: 399
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message EvtSetAttackTargetNotify {
  ForwardType forward_type = 1;
  EvtSetAttackTargetInfo evt_set_attack_target_info = 11;
}


message EvtSyncEntityPositionInfo {
  uint32 entity_id = 10;
  uint32 normalized_time_compact = 13;
  uint32 state_hash = 8;
  int32 face_angle_compact = 7;
  Vector pos = 15;
}


message EvtSyncTransform {
  uint32 entity_id = 15;
  Vector entity_pos = 6;
  Vector entity_rot = 1;
}

message ExclusiveRuleInfo {
  repeated uint32 object_id_list = 1;
  uint32 rule_type = 10;
}


// CmdId: 101
// EnetChannelId: 0
// EnetIsReliable: true
message ExclusiveRuleNotify {
  repeated ExclusiveRuleInfo rule_info_list = 5;
}

// CmdId: 269
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ExecuteGadgetLuaReq {
  uint32 source_entity_id = 12;
  int32 param_3 = 1;
  int32 param_1 = 5;
  int32 param_2 = 14;
}

// CmdId: 210
// EnetChannelId: 0
// EnetIsReliable: true
message ExecuteGadgetLuaRsp {
  int32 retcode = 12;
}

// CmdId: 257
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ExecuteGroupTriggerReq {
  string source_name = 15;
  uint32 target_entity_id = 12;
  int32 param_2 = 8;
  uint32 source_entity_id = 4;
  int32 param_3 = 10;
  int32 param_1 = 9;
}

// CmdId: 300
// EnetChannelId: 0
// EnetIsReliable: true
message ExecuteGroupTriggerRsp {
  int32 retcode = 13;
}

message ExhibitionDisplayInfo {
  uint32 id = 1;
  uint32 param = 2;
  uint32 detail_param = 3;
}

// CmdId: 5814
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ExitFishingReq {}

// CmdId: 5847
// EnetChannelId: 0
// EnetIsReliable: true
message ExitFishingRsp {
  int32 retcode = 9;
}

// CmdId: 242
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ExitSceneWeatherAreaNotify {
  uint32 weather_gadget_id = 2;
}

// CmdId: 282
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ExitTransPointRegionNotify {
  uint32 point_id = 1;
  uint32 scene_id = 7;
}


message ExpeditionActivityDetailInfo {
  uint32 cur_challenge_id = 5;
  repeated ExpeditionChallengeInfo challenge_info_list = 10;
  uint32 expedition_count = 2;
  uint32 content_close_time = 4;
  bool is_content_closed = 8;
  repeated ExpeditionPathInfo path_info_list = 15;
}

message ExpeditionAssistInfo {
  string online_id = 14;
  uint32 assist_time = 1;
  uint32 costume_id = 6;
  string target_nick_name = 4;
  uint32 avatar_id = 12;
}

// CmdId: 2154
// EnetChannelId: 0
// EnetIsReliable: true
message ExpeditionChallengeEnterRegionNotify {
  uint32 id = 5;
  bool is_puzzle_finished = 10;
}

// CmdId: 2091
// EnetChannelId: 0
// EnetIsReliable: true
message ExpeditionChallengeFinishedNotify {
  uint32 id = 13;
}

message ExpeditionChallengeInfo {
  bool is_finished = 5;
  uint32 id = 11;
  uint32 open_time = 9;
}


message ExpeditionPathInfo {
  uint32 mark_id = 12;
  uint32 start_time = 9;
  uint32 assist_avatar_id = 7;
  float bonus_probability = 4;
  ExpeditionState state = 15;
  repeated uint32 avatar_id_list = 2;
  uint32 assist_costume_id = 5;
  uint32 path_id = 8;
  uint32 challenge_id = 11;
  uint32 assist_uid = 10;
}

// CmdId: 2131
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ExpeditionRecallReq {
  uint32 path_id = 13;
}

// CmdId: 2129
// EnetChannelId: 0
// EnetIsReliable: true
message ExpeditionRecallRsp {
  uint32 path_id = 1;
  int32 retcode = 8;
}

// CmdId: 2087
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ExpeditionStartReq {
  repeated uint32 avatar_id_list = 1;
  uint32 assist_uid = 5;
  uint32 assist_avatar_id = 8;
  uint32 path_id = 7;
}

// CmdId: 2135
// EnetChannelId: 0
// EnetIsReliable: true
message ExpeditionStartRsp {
  uint32 assist_uid = 1;
  uint32 path_id = 7;
  repeated uint32 avatar_id_list = 4;
  int32 retcode = 12;
  uint32 assist_avatar_id = 2;
}

enum ExpeditionState {
  EXPEDITION_STATE_NONE = 0;
  EXPEDITION_STATE_STARTED = 1;
  EXPEDITION_STATE_FINISHED = 2;
  EXPEDITION_STATE_REWARDED = 3;
  EXPEDITION_STATE_LOCKED = 4;
}

// CmdId: 2149
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ExpeditionTakeRewardReq {
  uint32 path_id = 3;
}

// CmdId: 2080
// EnetChannelId: 0
// EnetIsReliable: true
message ExpeditionTakeRewardRsp {
  int32 retcode = 13;
  bool is_bonus = 11;
  uint32 reward_level = 1;
  uint32 path_id = 9;
}

message FallPlayerBrief {
  uint32 uid = 13;
  bool is_ground = 5;
  uint32 score = 10;
}

message FallPlayerInfo {
  uint32 time_cost = 11;
  uint32 uid = 9;
  map<uint32, uint32> ball_catch_count_map = 6;
  uint32 cur_score = 7;
  bool is_ground = 15;
}


message FallSettleInfo {
  uint32 catch_count = 15;
  OnlinePlayerInfo player_info = 13;
  uint32 uid = 14;
  map<uint32, uint32> flower_ring_catch_count_map = 3;
  uint32 remain_time = 10;
  uint32 final_score = 1;
}

message FeatureBlockInfo {
  uint32 feature_type = 1;
  uint32 end_time = 2;
}

message FetterData {
  uint32 fetter_id = 1;
  uint32 fetter_state = 2;
  repeated uint32 cond_index_list = 3;
}

message FightPropPair {
  uint32 prop_type = 1;
  float prop_value = 2;
}

// CmdId: 8659
// EnetChannelId: 0
// EnetIsReliable: true
message FindHilichurlAcceptQuestNotify {}

message FindHilichurlDayContentInfo {
  uint32 start_time = 1;
}


message FindHilichurlDetailInfo {
  repeated FindHilichurlDayContentInfo day_content_info_list = 1;
  uint32 min_open_player_level = 12;
  bool is_end_quest_accept = 7;
  uint32 content_close_time = 6;
  bool is_content_closed = 9;
  uint32 player_day_index = 4;
  uint32 day_index = 15;
}

// CmdId: 8901
// EnetChannelId: 0
// EnetIsReliable: true
message FindHilichurlFinishSecondQuestNotify {
  uint32 day_index = 11;
}

// CmdId: 2089
// EnetChannelId: 0
// EnetIsReliable: true
message FinishDeliveryNotify {
  uint32 finished_quest_index = 1;
  uint32 schedule_id = 10;
  uint32 day_index = 12;
}

// CmdId: 1952
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FinishMainCoopReq {
  uint32 id = 10;
  uint32 ending_save_point_id = 1;
}

// CmdId: 1981
// EnetChannelId: 0
// EnetIsReliable: true
message FinishMainCoopRsp {
  uint32 id = 2;
  uint32 ending_save_point_id = 6;
  int32 retcode = 4;
}


// CmdId: 435
// EnetChannelId: 0
// EnetIsReliable: true
message FinishedParentQuestNotify {
  repeated ParentQuest parent_quest_list = 2;
}


// CmdId: 407
// EnetChannelId: 0
// EnetIsReliable: true
message FinishedParentQuestUpdateNotify {
  repeated ParentQuest parent_quest_list = 9;
}


// CmdId: 5837
// EnetChannelId: 0
// EnetIsReliable: true
message FishAttractNotify {
  repeated uint32 fish_id_list = 3;
  Vector pos = 9;
  uint32 uid = 2;
}

// CmdId: 5823
// EnetChannelId: 0
// EnetIsReliable: true
message FishBaitGoneNotify {
  uint32 uid = 8;
}

// CmdId: 5820
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FishBattleBeginReq {}

// CmdId: 5845
// EnetChannelId: 0
// EnetIsReliable: true
message FishBattleBeginRsp {
  int32 retcode = 10;
}


// CmdId: 5841
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FishBattleEndReq {
  uint32 max_bonus_time = 3;
  FishBattleResult battle_result = 10;
  bool is_always_bonus = 11;
}


// CmdId: 5842
// EnetChannelId: 0
// EnetIsReliable: true
message FishBattleEndRsp {
  bool is_got_reward = 10;
  repeated ItemParam reward_item_list = 11;
  repeated ItemParam talent_item_list = 13;
  repeated ItemParam drop_item_list = 9;
  int32 retcode = 7;
  FishNoRewardReason no_reward_reason = 14;
  FishBattleResult battle_result = 6;
  enum FishNoRewardReason {
    FISH_NO_REWARD_REASON_NONE = 0;
    FISH_NO_REWARD_REASON_ACTIVITY_LIMIT = 1;
    FISH_NO_REWARD_REASON_BAG_LIMIT = 2;
    FISH_NO_REWARD_REASON_POOL_LIMIT = 3;
  }
}

enum FishBattleResult {
  FISH_BATTLE_RESULT_NONE = 0;
  FISH_BATTLE_RESULT_SUCC = 1;
  FISH_BATTLE_RESULT_FAIL = 2;
  FISH_BATTLE_RESULT_TIMEOUT = 3;
  FISH_BATTLE_RESULT_CANCEL = 4;
  FISH_BATTLE_RESULT_EXIT = 5;
}

// CmdId: 5844
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FishBiteReq {}

// CmdId: 5849
// EnetChannelId: 0
// EnetIsReliable: true
message FishBiteRsp {
  int32 retcode = 9;
}


// CmdId: 5802
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FishCastRodReq {
  uint32 bait_id = 14;
  uint32 rod_id = 4;
  uint32 rod_entity_id = 7;
  Vector pos = 12;
}

// CmdId: 5831
// EnetChannelId: 0
// EnetIsReliable: true
message FishCastRodRsp {
  int32 retcode = 12;
}

// CmdId: 5829
// EnetChannelId: 0
// EnetIsReliable: true
message FishChosenNotify {
  uint32 fish_id = 12;
}


// CmdId: 5822
// EnetChannelId: 0
// EnetIsReliable: true
message FishEscapeNotify {
  FishEscapeReason reason = 4;
  Vector pos = 7;
  uint32 uid = 14;
  repeated uint32 fish_id_list = 6;
}

enum FishEscapeReason {
  FISH_ESCAPE_REASON_FISN_ESCAPE_NONE = 0;
  FISH_ESCAPE_REASON_SHOCKED = 1;
  FISH_ESCAPE_REASON_UNHOOK = 2;
}

message FishInfo {
  uint32 free_count = 11;
  uint32 into_bag_count = 12;
}

// CmdId: 5848
// EnetChannelId: 0
// EnetIsReliable: true
message FishPoolDataNotify {
  uint32 entity_id = 6;
  uint32 today_fish_num = 2;
}

message FishPoolInfo {
  uint32 pool_id = 1;
  repeated uint32 fish_area_list = 2;
  uint32 today_fish_num = 3;
}


message FishingGallerySettleInfo {
  map<uint32, FishInfo> fish_map = 11;
  repeated FishingScore fishing_score_list = 15;
}


// CmdId: 8780
// EnetChannelId: 0
// EnetIsReliable: true
message FishingGallerySettleNotify {
  uint32 gallery_id = 6;
  uint32 level_id = 15;
  FishingGallerySettleInfo settle_info = 13;
}

message FishingScore {
  uint32 fishing_score_ = 2;
  bool is_new_record = 4;
}


message FleurFairActivityDetailInfo {
  bool is_content_closed = 4;
  uint32 dungeon_punish_over_time = 6;
  uint32 content_close_time = 15;
  uint32 obtained_token = 13;
  repeated FleurFairChapterInfo chapter_info_list = 14;
  map<uint32, FleurFairMinigameInfo> minigame_info_map = 9;
  map<uint32, FleurFairDungeonSectionInfo> dungeon_section_info_map = 3;
  bool is_dungeon_unlocked = 11;
}

message FleurFairBalloonInfo {
  uint32 best_score = 4;
}


message FleurFairBalloonSettleInfo {
  BalloonSettleInfo settle_info = 10;
  bool is_new_record = 7;
}


// CmdId: 2099
// EnetChannelId: 0
// EnetIsReliable: true
message FleurFairBalloonSettleNotify {
  uint32 minigame_id = 9;
  map<uint32, FleurFairBalloonSettleInfo> settle_info_map = 15;
}


message FleurFairBossSettleInfo {
  uint32 reward_token_num = 15;
  repeated FleurFairPlayerStatInfo stat_info_list = 1;
  bool is_success = 10;
  uint32 energy = 12;
  uint32 cost_time = 8;
}

// CmdId: 5324
// EnetChannelId: 0
// EnetIsReliable: true
message FleurFairBuffEnergyNotify {
  uint32 energy = 4;
}

message FleurFairChapterInfo {
  uint32 open_time = 15;
  uint32 chapter_id = 11;
}

message FleurFairDungeonSectionInfo {
  uint32 section_id = 10;
  uint32 open_time = 13;
  bool is_open = 1;
}

message FleurFairFallInfo {
  uint32 best_score = 10;
}


message FleurFairFallSettleInfo {
  FallSettleInfo settle_info = 4;
  bool is_new_record = 10;
}


// CmdId: 2017
// EnetChannelId: 0
// EnetIsReliable: true
message FleurFairFallSettleNotify {
  uint32 minigame_id = 15;
  map<uint32, FleurFairFallSettleInfo> settle_info_map = 11;
}

// CmdId: 5342
// EnetChannelId: 0
// EnetIsReliable: true
message FleurFairFinishGalleryStageNotify {}

message FleurFairGallerySettleInfo {
  uint32 energy = 2;
  uint32 gallery_stage_index = 11;
  map<uint32, int32> energy_stat_map = 6;
  uint32 gallery_stage_count = 9;
  bool is_success = 1;
}


message FleurFairMinigameInfo {
  uint32 minigame_id = 13;
  bool is_open = 8;
  uint32 open_time = 15;
  oneof detail {
    FleurFairBalloonInfo balloon_info = 12;
    FleurFairFallInfo fall_info = 11;
    FleurFairMusicGameInfo music_info = 9;
  }
}


message FleurFairMusicGameInfo {
  map<uint32, FleurFairMusicRecord> music_record_map = 10;
}

// CmdId: 2194
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FleurFairMusicGameSettleReq {
  uint32 score = 3;
  uint32 combo = 6;
  uint32 correct_hit = 10;
  uint32 music_basic_id = 11;
}

// CmdId: 2113
// EnetChannelId: 0
// EnetIsReliable: true
message FleurFairMusicGameSettleRsp {
  bool is_unlock_next_level = 4;
  bool is_new_record = 12;
  int32 retcode = 5;
  uint32 music_basic_id = 9;
}

// CmdId: 2167
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FleurFairMusicGameStartReq {
  uint32 music_basic_id = 2;
}

// CmdId: 2079
// EnetChannelId: 0
// EnetIsReliable: true
message FleurFairMusicGameStartRsp {
  int32 retcode = 3;
  uint32 music_basic_id = 7;
}

message FleurFairMusicRecord {
  uint32 max_combo = 1;
  uint32 max_score = 11;
  bool is_unlock = 12;
}


message FleurFairPlayerStatInfo {
  string online_id = 11;
  uint32 uid = 8;
  ProfilePicture profile_picture = 1;
  uint32 stat_id = 3;
  uint32 head_image = 6;
  string nick_name = 15;
  int32 param = 5;
}

// CmdId: 2181
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FleurFairReplayMiniGameReq {
  uint32 minigame_id = 5;
}

// CmdId: 2052
// EnetChannelId: 0
// EnetIsReliable: true
message FleurFairReplayMiniGameRsp {
  int32 retcode = 14;
  uint32 minigame_id = 8;
}


// CmdId: 5356
// EnetChannelId: 0
// EnetIsReliable: true
message FleurFairStageSettleNotify {
  uint32 stage_type = 10;
  oneof detail {
    FleurFairGallerySettleInfo gallery_settle_info = 13;
    FleurFairBossSettleInfo boss_settle_info = 14;
  }
}


message FlightActivityDetailInfo {
  uint32 preview_reward_id = 15;
  uint32 min_open_player_level = 11;
  repeated FlightDailyRecord daily_record_list = 1;
}

// CmdId: 2037
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FlightActivityRestartReq {
  uint32 group_id = 4;
  uint32 schedule_id = 10;
}

// CmdId: 2165
// EnetChannelId: 0
// EnetIsReliable: true
message FlightActivityRestartRsp {
  uint32 group_id = 11;
  uint32 schedule_id = 10;
  int32 retcode = 15;
}

// CmdId: 2195
// EnetChannelId: 0
// EnetIsReliable: true
message FlightActivitySettleNotify {
  bool is_new_record = 1;
  uint32 medal_level = 6;
  uint32 left_time = 13;
  uint32 collect_num = 9;
  uint32 total_num = 5;
  uint32 group_id = 8;
  uint32 score = 10;
  bool is_success = 4;
}

message FlightDailyRecord {
  uint32 group_id = 4;
  bool is_touched = 1;
  repeated uint32 watcher_id_list = 11;
  uint32 best_score = 7;
  uint32 start_time = 3;
}

// CmdId: 1654
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FocusAvatarReq {
  uint64 avatar_guid = 1;
  bool is_focus = 8;
}

// CmdId: 1681
// EnetChannelId: 0
// EnetIsReliable: true
message FocusAvatarRsp {
  int32 retcode = 5;
  bool is_focus = 11;
  uint64 avatar_guid = 4;
}

// CmdId: 4057
// EnetChannelId: 0
// EnetIsReliable: true
message ForceAddPlayerFriendReq {
  uint32 target_uid = 15;
}


// CmdId: 4100
// EnetChannelId: 0
// EnetIsReliable: true
message ForceAddPlayerFriendRsp {
  int32 retcode = 5;
  FriendBrief target_friend_brief = 2;
  uint32 target_uid = 9;
}


// CmdId: 3235
// EnetChannelId: 0
// EnetIsReliable: true
message ForceDragAvatarNotify {
  uint32 scene_time = 3;
  uint64 delta_time_ms = 1;
  uint32 entity_id = 2;
  MotionInfo motion_info = 10;
  bool is_first_valid = 8;
  uint64 last_move_time_ms = 12;
}

// CmdId: 3145
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ForceDragBackTransferNotify {}

message ForceUpdateInfo {
  string force_update_url = 1;
}


// CmdId: 680
// EnetChannelId: 0
// EnetIsReliable: true
message ForgeDataNotify {
  repeated uint32 forge_id_list = 5;
  map<uint32, ForgeQueueData> forge_queue_map = 8;
  uint32 max_queue_num = 14;
}

// CmdId: 689
// EnetChannelId: 0
// EnetIsReliable: true
message ForgeFormulaDataNotify {
  bool is_locked = 15;
  uint32 forge_id = 13;
}

// CmdId: 646
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ForgeGetQueueDataReq {}


// CmdId: 641
// EnetChannelId: 0
// EnetIsReliable: true
message ForgeGetQueueDataRsp {
  map<uint32, ForgeQueueData> forge_queue_map = 2;
  int32 retcode = 15;
  uint32 max_queue_num = 6;
}

message ForgeQueueData {
  uint32 finish_count = 13;
  uint32 total_finish_timestamp = 14;
  uint32 avatar_id = 7;
  uint32 queue_id = 1;
  uint32 unfinish_count = 10;
  uint32 next_finish_timestamp = 11;
  uint32 forge_id = 15;
}


// CmdId: 676
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ForgeQueueDataNotify {
  map<uint32, ForgeQueueData> forge_queue_map = 7;
  repeated uint32 removed_forge_queue_list = 6;
}


// CmdId: 624
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ForgeQueueManipulateReq {
  uint32 forge_queue_id = 5;
  ForgeQueueManipulateType manipulate_type = 13;
}


// CmdId: 656
// EnetChannelId: 0
// EnetIsReliable: true
message ForgeQueueManipulateRsp {
  ForgeQueueManipulateType manipulate_type = 4;
  repeated ItemParam extra_output_item_list = 13;
  repeated ItemParam return_item_list = 10;
  int32 retcode = 1;
  repeated ItemParam output_item_list = 9;
}

enum ForgeQueueManipulateType {
  FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT = 0;
  FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE = 1;
}

// CmdId: 649
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ForgeStartReq {
  uint32 avatar_id = 7;
  uint32 forge_id = 4;
  uint32 forge_count = 6;
}

// CmdId: 691
// EnetChannelId: 0
// EnetIsReliable: true
message ForgeStartRsp {
  int32 retcode = 8;
}

enum ForwardType {
  FORWARD_TYPE_LOCAL = 0;
  FORWARD_TYPE_TO_ALL = 1;
  FORWARD_TYPE_TO_ALL_EXCEPT_CUR = 2;
  FORWARD_TYPE_TO_HOST = 3;
  FORWARD_TYPE_TO_ALL_GUEST = 4;
  FORWARD_TYPE_TO_PEER = 5;
  FORWARD_TYPE_TO_PEERS = 6;
  FORWARD_TYPE_ONLY_SERVER = 7;
  FORWARD_TYPE_TO_ALL_EXIST_EXCEPT_CUR = 8;
}


message FoundationInfo {
  FoundationStatus status = 1;
  repeated uint32 uid_list = 2;
  uint32 current_building_id = 3;
  uint32 begin_build_time_ms = 4;
}


// CmdId: 847
// EnetChannelId: 0
// EnetIsReliable: true
message FoundationNotify {
  FoundationInfo info = 7;
  uint32 gadget_entity_id = 9;
}

enum FoundationOpType {
  FOUNDATION_OP_TYPE_NONE = 0;
  FOUNDATION_OP_TYPE_BUILD = 1;
  FOUNDATION_OP_TYPE_DEMOLITION = 2;
  FOUNDATION_OP_TYPE_REBUILD = 3;
  FOUNDATION_OP_TYPE_ROTATE = 4;
  FOUNDATION_OP_TYPE_LOCK = 5;
  FOUNDATION_OP_TYPE_UNLOCK = 6;
}


// CmdId: 805
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FoundationReq {
  uint32 gadget_entity_id = 14;
  uint32 point_config_id = 12;
  uint32 building_id = 13;
  FoundationOpType op_type = 10;
}


// CmdId: 882
// EnetChannelId: 0
// EnetIsReliable: true
message FoundationRsp {
  FoundationOpType op_type = 13;
  uint32 gadget_entity_id = 10;
  uint32 building_id = 11;
  uint32 point_config_id = 12;
  int32 retcode = 7;
}

enum FoundationStatus {
  FOUNDATION_STATUS_NONE = 0;
  FOUNDATION_STATUS_INIT = 1;
  FOUNDATION_STATUS_BUILDING = 2;
  FOUNDATION_STATUS_BUILT = 3;
}



message FriendBrief {
  uint32 uid = 1;
  string nickname = 2;
  uint32 level = 3;
  uint32 avatar_id = 4;
  uint32 world_level = 5;
  string signature = 6;
  FriendOnlineState online_state = 7;
  uint32 param = 8;
  bool is_mp_mode_available = 10;
  string online_id = 11;
  uint32 last_active_time = 12;
  uint32 name_card_id = 13;
  uint32 mp_player_num = 14;
  bool is_chat_no_disturb = 15;
  uint32 chat_sequence = 16;
  string remark_name = 17;
  repeated SocialShowAvatarInfo show_avatar_info_list = 22;
  FriendEnterHomeOption friend_enter_home_option = 23;
  ProfilePicture profile_picture = 24;
  bool is_game_source = 25;
  bool is_psn_source = 26;
  PlatformType platform_type = 27;
}

enum FriendEnterHomeOption {
  FRIEND_ENTER_HOME_OPTION_NEED_CONFIRM = 0;
  FRIEND_ENTER_HOME_OPTION_REFUSE = 1;
  FRIEND_ENTER_HOME_OPTION_DIRECT = 2;
}

// CmdId: 4032
// EnetChannelId: 0
// EnetIsReliable: true
message FriendInfoChangeNotify {
  uint32 uid = 1;
  string online_id = 9;
}

enum FriendOnlineState {
  FRIEND_ONLINE_STATE_FREIEND_DISCONNECT = 0;
  FRIEND_ONLINE_STATE_ONLINE = 1;
}


// CmdId: 4898
// EnetChannelId: 0
// EnetIsReliable: true
message FunitureMakeMakeInfoChangeNotify {
  FurnitureMakeMakeInfo make_info = 1;
}

message Furniture {
  uint32 count = 1;
}


// CmdId: 4498
// EnetChannelId: 0
// EnetIsReliable: true
message FurnitureCurModuleArrangeCountNotify {
  repeated Uint32Pair furniture_arrange_count_list = 13;
}


message FurnitureMakeBeHelpedData {
  fixed32 time = 12;
  uint32 icon = 11;
  uint32 uid = 7;
  string player_name = 10;
  ProfilePicture profile_picture = 1;
}


// CmdId: 4578
// EnetChannelId: 0
// EnetIsReliable: true
message FurnitureMakeBeHelpedNotify {
  FurnitureMakeSlot furniture_make_slot = 7;
  FurnitureMakeBeHelpedData furniture_make_helped_data = 2;
}

// CmdId: 4555
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FurnitureMakeCancelReq {
  uint32 index = 4;
  uint32 make_id = 15;
}


// CmdId: 4683
// EnetChannelId: 0
// EnetIsReliable: true
message FurnitureMakeCancelRsp {
  int32 retcode = 3;
  uint32 make_id = 2;
  FurnitureMakeSlot furniture_make_slot = 15;
}

message FurnitureMakeData {
  uint32 index = 15;
  uint32 dur_time = 1;
  fixed32 begin_time = 11;
  fixed32 accelerate_time = 6;
  uint32 avatar_id = 2;
  uint32 make_id = 5;
}

// CmdId: 4841
// EnetChannelId: 0
// EnetIsReliable: true
message FurnitureMakeFinishNotify {}

message FurnitureMakeHelpData {
  uint32 times = 2;
  uint32 uid = 13;
}

// CmdId: 4865
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FurnitureMakeHelpReq {}


// CmdId: 4756
// EnetChannelId: 0
// EnetIsReliable: true
message FurnitureMakeHelpRsp {
  int32 retcode = 10;
  repeated FurnitureMakeHelpData help_data_list = 6;
}

message FurnitureMakeMakeInfo {
  uint32 furniture_id = 13;
  uint32 make_count = 9;
}

// CmdId: 4477
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FurnitureMakeReq {}



// CmdId: 4782
// EnetChannelId: 0
// EnetIsReliable: true
message FurnitureMakeRsp {
  repeated FurnitureMakeBeHelpedData helped_data_list = 13;
  repeated FurnitureMakeMakeInfo make_info_list = 4;
  FurnitureMakeSlot furniture_make_slot = 1;
  int32 retcode = 3;
  repeated FurnitureMakeHelpData help_data_list = 2;
}


message FurnitureMakeSlot {
  repeated FurnitureMakeData furniture_make_data_list = 14;
}

// CmdId: 4633
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message FurnitureMakeStartReq {
  uint32 avatar_id = 9;
  uint32 make_id = 1;
}


// CmdId: 4729
// EnetChannelId: 0
// EnetIsReliable: true
message FurnitureMakeStartRsp {
  FurnitureMakeSlot furniture_make_slot = 5;
  int32 retcode = 8;
}


// CmdId: 2357
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GMShowNavMeshReq {
  Vector center = 1;
  Vector extent = 5;
}


// CmdId: 2400
// EnetChannelId: 0
// EnetIsReliable: true
message GMShowNavMeshRsp {
  repeated PBNavMeshTile tiles = 11;
  int32 retcode = 5;
}

// CmdId: 2361
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GMShowObstacleReq {}


// CmdId: 2329
// EnetChannelId: 0
// EnetIsReliable: true
message GMShowObstacleRsp {
  int32 retcode = 5;
  repeated ObstacleInfo obstacles = 6;
}


message GachaActivityDetailInfo {
  repeated uint32 Unk2700_PIDHKNLDALB = 6;
  repeated GachaStage gacha_stage_list = 4;
  map<uint32, uint32> Unk2700_KOHKBCABICD = 8;
  uint32 Unk2700_CDPAPBIOPCA = 3;
  map<uint32, uint32> Unk2700_DACHHINLDDJ = 5;
  uint32 Unk2700_FGFGLDIJJEK = 12;
}


message GachaInfo {
  string gacha_preview_prefab_path = 4;
  uint32 cost_item_id = 9;
  bool is_new_wish = 733;
  string gacha_prob_url = 8;
  string gacha_record_url_oversea = 1854;
  uint32 cost_item_num = 3;
  repeated GachaUpInfo gacha_up_info_list = 1233;
  repeated uint32 display_up_4_item_list = 1875;
  uint32 wish_progress = 1819;
  uint32 schedule_id = 10;
  uint32 gacha_sort_id = 7;
  uint32 left_gacha_times = 5;
  string gacha_prefab_path = 15;
  string title_textmap = 736;
  uint32 ten_cost_item_num = 6;
  uint32 gacha_type = 13;
  uint32 wish_max_progress = 1222;
  uint32 end_time = 14;
  uint32 ten_cost_item_id = 2;
  string gacha_record_url = 12;
  uint32 wish_item_id = 1637;
  uint32 begin_time = 1;
  string gacha_prob_url_oversea = 1481;
  uint32 gacha_times_limit = 11;
  repeated uint32 display_up_5_item_list = 2006;
}


message GachaItem {
  ItemParam gacha_item_ = 7;
  bool is_gacha_item_new = 6;
  bool is_flash_card = 8;
  repeated ItemParam token_item_list = 9;
  repeated GachaTransferItem transfer_items = 12;
}

// CmdId: 1503
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GachaOpenWishNotify {
  uint32 gacha_type = 2;
  uint32 gacha_schedule_id = 9;
}

// CmdId: 1590
// EnetChannelId: 0
// EnetIsReliable: true
message GachaSimpleInfoNotify {
  bool is_new = 5;
}

message GachaStage {
  uint32 stage_id = 15;
  map<uint32, uint32> Unk2700_DNMNEMKIELD = 14;
  bool is_open = 13;
}


message GachaTransferItem {
  ItemParam item = 3;
  bool is_transfer_item_new = 1;
}

message GachaUpInfo {
  uint32 item_parent_type = 7;
  repeated uint32 item_id_list = 15;
}

// CmdId: 1507
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GachaWishReq {
  uint32 gacha_schedule_id = 14;
  uint32 gacha_type = 13;
  uint32 item_id = 4;
}

// CmdId: 1521
// EnetChannelId: 0
// EnetIsReliable: true
message GachaWishRsp {
  uint32 gacha_type = 8;
  uint32 gacha_schedule_id = 7;
  uint32 wish_max_progress = 2;
  uint32 wish_progress = 5;
  uint32 wish_item_id = 3;
  int32 retcode = 14;
}


// CmdId: 897
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetAutoPickDropInfoNotify {
  repeated Item item_list = 11;
}

enum GadgetBornType {
  GADGET_BORN_TYPE_NONE = 0;
  GADGET_BORN_TYPE_IN_AIR = 1;
  GADGET_BORN_TYPE_PLAYER = 2;
  GADGET_BORN_TYPE_MONSTER_HIT = 3;
  GADGET_BORN_TYPE_MONSTER_DIE = 4;
  GADGET_BORN_TYPE_GADGET = 5;
  GADGET_BORN_TYPE_GROUND = 6;
}

// CmdId: 822
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetChainLevelChangeNotify {
  map<uint32, uint32> gadget_chain_level_map = 2;
}

// CmdId: 853
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetChainLevelUpdateNotify {
  map<uint32, uint32> gadget_chain_level_map = 12;
}

message GadgetCrucibleInfo {
  uint32 mp_play_id = 1;
  uint32 prepare_end_time = 2;
}


// CmdId: 850
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetCustomTreeInfoNotify {
  CustomGadgetTreeInfo custom_gadget_tree_info = 5;
  uint32 gadget_entity_id = 12;
}


message GadgetGeneralRewardInfo {
  uint32 resin = 1;
  uint32 dead_time = 2;
  repeated uint32 remain_uid_list = 3;
  repeated uint32 qualify_uid_list = 4;
  ItemParam item_param = 5;
}


// CmdId: 848
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetGeneralRewardInfoNotify {
  uint32 entity_id = 13;
  GadgetGeneralRewardInfo general_reward_info = 9;
}


// CmdId: 872
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GadgetInteractReq {
  uint32 gadget_id = 8;
  bool is_use_condense_resin = 15;
  InterOpType op_type = 5;
  ResinCostType resin_cost_type = 1;
  uint32 Unk2700_DCPBGMKCHGJ = 2;
  uint32 gadget_entity_id = 4;
}


// CmdId: 898
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetInteractRsp {
  uint32 gadget_entity_id = 10;
  InteractType interact_type = 2;
  InterOpType op_type = 3;
  int32 retcode = 7;
  uint32 gadget_id = 15;
}

// CmdId: 831
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetPlayDataNotify {
  uint32 play_type = 12;
  uint32 progress = 9;
  uint32 entity_id = 6;
}


message GadgetPlayInfo {
  uint32 play_type = 1;
  uint32 duration = 2;
  repeated uint32 progress_stage_list = 3;
  uint32 start_cd = 4;
  uint32 start_time = 5;
  uint32 progress = 6;
  oneof play_info {
    GadgetCrucibleInfo crucible_info = 21;
  }
}

// CmdId: 873
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetPlayStartNotify {
  uint32 start_time = 14;
  uint32 entity_id = 15;
  uint32 play_type = 8;
}


// CmdId: 899
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetPlayStopNotify {
  bool is_win = 14;
  uint32 entity_id = 7;
  uint32 play_type = 4;
  repeated GadgetPlayUidInfo uid_info_list = 8;
  uint32 score = 5;
  uint32 cost_time = 6;
}


message GadgetPlayUidInfo {
  ProfilePicture profile_picture = 2;
  uint32 battle_watcher_id = 6;
  uint32 uid = 7;
  uint32 icon = 14;
  uint32 score = 4;
  string nickname = 3;
  string online_id = 8;
}

// CmdId: 875
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetPlayUidOpNotify {
  uint32 entity_id = 11;
  repeated uint32 uid_list = 2;
  uint32 play_type = 6;
  string param_str = 1;
  uint32 op = 7;
  repeated uint32 param_list = 4;
}

// CmdId: 812
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetStateNotify {
  uint32 gadget_entity_id = 5;
  uint32 gadget_state = 3;
  bool is_enable_interact = 11;
}

// CmdId: 839
// EnetChannelId: 0
// EnetIsReliable: true
message GadgetTalkChangeNotify {
  uint32 gadget_entity_id = 5;
  uint32 cur_gadget_talk_state = 15;
}

// CmdId: 5512
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryBalloonScoreNotify {
  uint32 gallery_id = 9;
  map<uint32, uint32> uid_score_map = 7;
}

// CmdId: 5598
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryBalloonShootNotify {
  uint32 trigger_entity_id = 12;
  uint32 gallery_id = 5;
  uint32 combo = 14;
  uint64 combo_disable_time = 6;
  int32 add_score = 11;
  uint32 cur_score = 13;
}

// CmdId: 5505
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryBounceConjuringHitNotify {
  uint32 add_score = 8;
  bool is_perfect = 5;
  uint32 gallery_id = 10;
}

// CmdId: 5575
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryBrokenFloorFallNotify {
  uint32 fall_count = 3;
  uint32 gallery_id = 5;
}

// CmdId: 5531
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryBulletHitNotify {
  uint32 hit_count = 14;
  uint32 gallery_id = 12;
}

// CmdId: 5507
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryFallCatchNotify {
  uint32 cur_score = 6;
  uint32 time_cost = 11;
  map<uint32, uint32> ball_catch_count_map = 15;
  uint32 add_score = 1;
  bool is_ground = 12;
  uint32 gallery_id = 10;
}


// CmdId: 5521
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryFallScoreNotify {
  uint32 gallery_id = 7;
  map<uint32, FallPlayerBrief> uid_brief_map = 1;
}

// CmdId: 5573
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryFlowerCatchNotify {
  uint32 cur_score = 12;
  uint32 add_score = 14;
  uint32 gallery_id = 5;
}

message GalleryFlowerStartParam {
  uint32 target_score = 5;
}

// CmdId: 5599
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryPreStartNotify {
  uint32 gallery_id = 10;
  uint32 pre_start_end_time = 9;
}

enum GalleryStageType {
  GALLERY_STAGE_TYPE_NONE = 0;
  GALLERY_STAGE_TYPE_PRESTART = 1;
  GALLERY_STAGE_TYPE_START = 2;
}


// CmdId: 5572
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryStartNotify {
  uint32 gallery_id = 13;
  uint32 end_time = 6;
  uint32 player_count = 11;
  uint32 owner_uid = 9;
  oneof detail {
    GalleryFlowerStartParam flower_start_param = 15;
  }
}

// CmdId: 5535
// EnetChannelId: 0
// EnetIsReliable: true
message GalleryStopNotify {
  uint32 gallery_id = 8;
}

// CmdId: 5582
// EnetChannelId: 0
// EnetIsReliable: true
message GallerySumoKillMonsterNotify {
  uint32 kill_normal_mosnter_num = 4;
  uint32 score = 7;
  uint32 kill_elite_monster_num = 14;
  uint32 gallery_id = 11;
}

message GatherGadgetInfo {
  uint32 item_id = 1;
  bool is_forbid_guest = 2;
}


message GearActivityDetailInfo {
  repeated Unk2800_BPOJIIDEADD Unk2800_GBAPCBPMHNJ = 14;
  Unk2800_JIPMJPAKIKE Unk2800_IHEHGOBCINC = 8;
}


message GeneralMatchInfo {
  uint32 match_param = 1;
  uint32 match_id = 9;
  repeated MatchPlayerInfo player_list = 5;
}

// CmdId: 2095
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetActivityInfoReq {
  repeated uint32 activity_id_list = 4;
}


// CmdId: 2041
// EnetChannelId: 0
// EnetIsReliable: true
message GetActivityInfoRsp {
  int32 retcode = 13;
  repeated ActivityInfo activity_info_list = 5;
  repeated uint32 activated_sale_id_list = 11;
  repeated Uint32Pair disable_transfer_point_interaction_list = 10;
}

// CmdId: 2136
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetActivityScheduleReq {}


// CmdId: 2107
// EnetChannelId: 0
// EnetIsReliable: true
message GetActivityScheduleRsp {
  repeated ActivityScheduleInfo activity_schedule_list = 9;
  int32 retcode = 13;
  uint32 remain_fly_sea_lamp_num = 4;
}

// CmdId: 703
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetActivityShopSheetInfoReq {
  uint32 shop_type = 7;
}


// CmdId: 790
// EnetChannelId: 0
// EnetIsReliable: true
message GetActivityShopSheetInfoRsp {
  repeated ActivityShopSheetInfo sheet_info_list = 6;
  uint32 shop_type = 8;
  int32 retcode = 13;
}

// CmdId: 463
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetAllActivatedBargainDataReq {}


// CmdId: 495
// EnetChannelId: 0
// EnetIsReliable: true
message GetAllActivatedBargainDataRsp {
  repeated BargainSnapshot snapshot_list = 5;
  int32 retcode = 9;
}

// CmdId: 5668
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetAllH5ActivityInfoReq {}


// CmdId: 5676
// EnetChannelId: 0
// EnetIsReliable: true
message GetAllH5ActivityInfoRsp {
  repeated H5ActivityInfo h_5_activity_info_list = 15;
  int32 retcode = 5;
  uint32 client_red_dot_timestamp = 12;
}

// CmdId: 1431
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetAllMailReq {
  bool Unk2700_OPEHLDAGICF = 7;
}


// CmdId: 1475
// EnetChannelId: 0
// EnetIsReliable: true
message GetAllMailRsp {
  int32 retcode = 8;
  repeated MailData mail_list = 14;
  bool Unk2700_OPEHLDAGICF = 1;
  bool is_truncated = 2;
}

// CmdId: 5503
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetAllSceneGalleryInfoReq {}


// CmdId: 5590
// EnetChannelId: 0
// EnetIsReliable: true
message GetAllSceneGalleryInfoRsp {
  repeated SceneGalleryInfo gallery_info_list = 12;
  int32 retcode = 2;
}

// CmdId: 4027
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetAllUnlockNameCardReq {}

// CmdId: 4094
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetAllUnlockNameCardRsp {
  int32 retcode = 4;
  repeated uint32 name_card_list = 14;
}

// CmdId: 241
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetAreaExplorePointReq {
  repeated uint32 area_id_list = 14;
}

// CmdId: 249
// EnetChannelId: 0
// EnetIsReliable: true
message GetAreaExplorePointRsp {
  int32 retcode = 8;
  repeated uint32 area_id_list = 11;
  repeated uint32 explore_point_list = 4;
}

// CmdId: 2070
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetAuthSalesmanInfoReq {
  uint32 schedule_id = 8;
}

// CmdId: 2004
// EnetChannelId: 0
// EnetIsReliable: true
message GetAuthSalesmanInfoRsp {
  uint32 day_reward_id = 5;
  int32 retcode = 6;
  uint32 schedule_id = 11;
}

// CmdId: 1490
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetAuthkeyReq {
  string auth_appid = 14;
  uint32 sign_type = 7;
  uint32 authkey_ver = 13;
}

// CmdId: 1473
// EnetChannelId: 0
// EnetIsReliable: true
message GetAuthkeyRsp {
  string auth_appid = 4;
  uint32 sign_type = 15;
  int32 retcode = 6;
  uint32 authkey_ver = 9;
  string game_biz = 11;
  string authkey = 3;
}

// CmdId: 488
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetBargainDataReq {
  uint32 bargain_id = 12;
}


// CmdId: 426
// EnetChannelId: 0
// EnetIsReliable: true
message GetBargainDataRsp {
  int32 retcode = 1;
  uint32 bargain_id = 14;
  BargainSnapshot snapshot = 13;
}

// CmdId: 2644
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetBattlePassProductReq {
  uint32 battle_pass_product_play_type = 10;
}

// CmdId: 2649
// EnetChannelId: 0
// EnetIsReliable: true
message GetBattlePassProductRsp {
  int32 retcode = 14;
  string price_tier = 6;
  uint32 battle_pass_product_play_type = 2;
  string product_id = 1;
  uint32 cur_schedule_id = 11;
}

// CmdId: 2772
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetBlossomBriefInfoListReq {
  repeated uint32 city_id_list = 4;
}


// CmdId: 2798
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetBlossomBriefInfoListRsp {
  int32 retcode = 12;
  repeated BlossomBriefInfo brief_info_list = 11;
}

// CmdId: 2581
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetBonusActivityRewardReq {
  uint32 bonus_activity_id = 14;
}


// CmdId: 2505
// EnetChannelId: 0
// EnetIsReliable: true
message GetBonusActivityRewardRsp {
  BonusActivityInfo bonus_activity_info_list = 4;
  int32 retcode = 13;
}

// CmdId: 4068
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetChatEmojiCollectionReq {}


// CmdId: 4033
// EnetChannelId: 0
// EnetIsReliable: true
message GetChatEmojiCollectionRsp {
  int32 retcode = 15;
  ChatEmojiCollectionData chat_emoji_collection_data = 8;
}

// CmdId: 4325
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetCityHuntingOfferReq {
  uint32 city_id = 9;
}


// CmdId: 4307
// EnetChannelId: 0
// EnetIsReliable: true
message GetCityHuntingOfferRsp {
  int32 retcode = 9;
  repeated HuntingOfferData hunting_offer_list = 13;
  uint32 city_id = 2;
  HuntingPair ongoing_hunting_pair = 8;
  uint32 cur_week_finished_count = 1;
  uint32 next_refresh_time = 4;
}

// CmdId: 2872
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetCityReputationInfoReq {
  uint32 city_id = 7;
}


// CmdId: 2898
// EnetChannelId: 0
// EnetIsReliable: true
message GetCityReputationInfoRsp {
  uint32 city_id = 1;
  int32 retcode = 4;
  CityReputationInfo city_reputation_info = 9;
}

// CmdId: 2875
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetCityReputationMapInfoReq {}

// CmdId: 2848
// EnetChannelId: 0
// EnetIsReliable: true
message GetCityReputationMapInfoRsp {
  int32 retcode = 11;
  bool is_new_hunting = 10;
  bool is_new_request = 2;
  repeated uint32 unlock_hunting_city_list = 9;
  repeated uint32 reward_city_list = 3;
}

// CmdId: 141
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetCompoundDataReq {}


// CmdId: 149
// EnetChannelId: 0
// EnetIsReliable: true
message GetCompoundDataRsp {
  int32 retcode = 3;
  repeated uint32 unlock_compound_list = 11;
  repeated CompoundQueueData compound_que_data_list = 7;
}

// CmdId: 930
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetDailyDungeonEntryInfoReq {
  uint32 scene_id = 15;
}


// CmdId: 967
// EnetChannelId: 0
// EnetIsReliable: true
message GetDailyDungeonEntryInfoRsp {
  repeated DailyDungeonEntryInfo daily_dungeon_info_list = 2;
  int32 retcode = 14;
}

// CmdId: 3165
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetDungeonEntryExploreConditionReq {
  uint32 scene_id = 6;
  uint32 dungeon_entry_config_id = 2;
  uint32 dungeon_entry_scene_point_id = 4;
}


// CmdId: 3269
// EnetChannelId: 0
// EnetIsReliable: true
message GetDungeonEntryExploreConditionRsp {
  DungeonEntryCond dungeon_entry_cond = 5;
  int32 retcode = 3;
}

// CmdId: 2150
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetExpeditionAssistInfoListReq {}


// CmdId: 2035
// EnetChannelId: 0
// EnetIsReliable: true
message GetExpeditionAssistInfoListRsp {
  repeated ExpeditionAssistInfo assist_info_list = 6;
  int32 retcode = 7;
}

// CmdId: 4070
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetFriendShowAvatarInfoReq {
  uint32 uid = 15;
}


// CmdId: 4017
// EnetChannelId: 0
// EnetIsReliable: true
message GetFriendShowAvatarInfoRsp {
  uint32 uid = 6;
  int32 retcode = 3;
  repeated ShowAvatarInfo show_avatar_info_list = 9;
}

// CmdId: 4061
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetFriendShowNameCardInfoReq {
  uint32 uid = 3;
}

// CmdId: 4029
// EnetChannelId: 0
// EnetIsReliable: true
message GetFriendShowNameCardInfoRsp {
  int32 retcode = 15;
  uint32 uid = 7;
  repeated uint32 show_name_card_id_list = 10;
}

// CmdId: 4711
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetFurnitureCurModuleArrangeCountReq {}

// CmdId: 1572
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetGachaInfoReq {}


// CmdId: 1598
// EnetChannelId: 0
// EnetIsReliable: true
message GetGachaInfoRsp {
  bool Unk2700_LEEPELHDING = 2;
  int32 retcode = 10;
  uint32 gacha_random = 9;
  uint32 Unk2700_OJKKHDLEDCI = 5;
  repeated GachaInfo gacha_info_list = 13;
}

// CmdId: 4557
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetHomeLevelUpRewardReq {
  uint32 level = 15;
}

// CmdId: 4603
// EnetChannelId: 0
// EnetIsReliable: true
message GetHomeLevelUpRewardRsp {
  uint32 level = 1;
  int32 retcode = 6;
}


// CmdId: 4302
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetHuntingOfferRewardReq {
  uint32 city_id = 6;
  HuntingPair hunting_pair = 4;
}


// CmdId: 4331
// EnetChannelId: 0
// EnetIsReliable: true
message GetHuntingOfferRewardRsp {
  HuntingPair hunting_pair = 14;
  uint32 city_id = 3;
  int32 retcode = 12;
}

// CmdId: 1901
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetInvestigationMonsterReq {
  repeated uint32 city_id_list = 3;
  bool Unk2700_DEMFDHNFBBJ = 4;
}


// CmdId: 1910
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetInvestigationMonsterRsp {
  repeated InvestigationMonster monster_list = 10;
  int32 retcode = 1;
  bool Unk2700_DEMFDHNFBBJ = 2;
}

// CmdId: 1435
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetMailItemReq {
  repeated uint32 mail_id_list = 6;
}


// CmdId: 1407
// EnetChannelId: 0
// EnetIsReliable: true
message GetMailItemRsp {
  int32 retcode = 7;
  repeated uint32 mail_id_list = 3;
  repeated EquipParam item_list = 2;
}

// CmdId: 3108
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetMapAreaReq {}


// CmdId: 3328
// EnetChannelId: 0
// EnetIsReliable: true
message GetMapAreaRsp {
  int32 retcode = 14;
  repeated MapAreaInfo map_area_info_list = 9;
}

// CmdId: 3463
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetMapMarkTipsReq {}


// CmdId: 3327
// EnetChannelId: 0
// EnetIsReliable: true
message GetMapMarkTipsRsp {
  int32 retcode = 7;
  repeated MapMarkTipsInfo mark_tips_list = 11;
}

// CmdId: 3972
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetMechanicusInfoReq {}


// CmdId: 3998
// EnetChannelId: 0
// EnetIsReliable: true
message GetMechanicusInfoRsp {
  int32 retcode = 14;
  MechanicusInfo mechanicus_info = 15;
}

// CmdId: 192
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetNextResourceInfoReq {}


// CmdId: 120
// EnetChannelId: 0
// EnetIsReliable: true
message GetNextResourceInfoRsp {
  string next_resource_url = 14;
  ResVersionConfig next_res_version_config = 2;
  int32 retcode = 12;
}

// CmdId: 82
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetOnlinePlayerInfoReq {
  bool is_online_id = 15;
  oneof player_id {
    uint32 target_uid = 9;
    string online_id = 7;
    string psn_id = 2;
  }
}


// CmdId: 47
// EnetChannelId: 0
// EnetIsReliable: true
message GetOnlinePlayerInfoRsp {
  int32 retcode = 11;
  uint32 target_uid = 7;
  uint32 param = 4;
  OnlinePlayerInfo target_player_info = 14;
}

// CmdId: 90
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetOnlinePlayerListReq {}


// CmdId: 73
// EnetChannelId: 0
// EnetIsReliable: true
message GetOnlinePlayerListRsp {
  int32 retcode = 7;
  uint32 param = 11;
  repeated OnlinePlayerInfo player_info_list = 5;
}

// CmdId: 5172
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetOpActivityInfoReq {}


// CmdId: 5198
// EnetChannelId: 0
// EnetIsReliable: true
message GetOpActivityInfoRsp {
  int32 retcode = 10;
  repeated OpActivityInfo op_activity_info_list = 7;
}

// CmdId: 4018
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetPlayerAskFriendListReq {}


// CmdId: 4066
// EnetChannelId: 0
// EnetIsReliable: true
message GetPlayerAskFriendListRsp {
  int32 retcode = 13;
  repeated FriendBrief ask_friend_list = 15;
}

// CmdId: 4049
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetPlayerBlacklistReq {}


// CmdId: 4091
// EnetChannelId: 0
// EnetIsReliable: true
message GetPlayerBlacklistRsp {
  int32 retcode = 2;
  repeated FriendBrief blacklist = 3;
}

// CmdId: 4072
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetPlayerFriendListReq {}


// CmdId: 4098
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetPlayerFriendListRsp {
  int32 retcode = 9;
  repeated FriendBrief ask_friend_list = 8;
  repeated FriendBrief friend_list = 14;
}

// CmdId: 4597
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetPlayerHomeCompInfoReq {}

// CmdId: 1844
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetPlayerMpModeAvailabilityReq {}

// CmdId: 1849
// EnetChannelId: 0
// EnetIsReliable: true
message GetPlayerMpModeAvailabilityRsp {
  int32 mp_ret = 15;
  int32 retcode = 2;
  repeated uint32 param_list = 8;
}

// CmdId: 4073
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetPlayerSocialDetailReq {
  uint32 uid = 9;
}


// CmdId: 4099
// EnetChannelId: 0
// EnetIsReliable: true
message GetPlayerSocialDetailRsp {
  SocialDetail detail_data = 12;
  int32 retcode = 1;
}

// CmdId: 172
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetPlayerTokenReq {
  string account_token = 10;
  string account_uid = 11;
  string psn_region = 4;
  string online_id = 7;
  uint32 channel_id = 15;
  string account_ext = 9;
  string country_code = 5;
  string client_seed = 760;
  bool is_guest = 6;
  string birthday = 1718;
  uint32 sub_channel_id = 8;
  uint32 platform_type = 12;
  string client_ip_str = 3;
  string psn_id = 13;
  uint32 account_type = 1;
  uint32 Unk2700_NOJPEHIBDJH = 995;
  uint32 cloud_client_ip = 14;
  uint32 key_id = 1787;
  uint32 uid = 2;
}

// CmdId: 198
// EnetChannelId: 0
// EnetIsReliable: true
message GetPlayerTokenRsp {
  string birthday = 937;
  int32 retcode = 2;
  bytes security_cmd_buffer = 6;
  uint64 secret_key_seed = 13;
  string country_code = 2013;
  bytes extra_bin_data = 3;
  string secret_key = 15;
  uint32 Unk2700_NOJPEHIBDJH = 1561;
  uint32 black_uid_end_time = 14;
  uint32 tag = 1635;
  string token = 11;
  uint32 gm_uid = 10;
  uint32 channel_id = 896;
  string psn_id = 1811;
  string client_ip_str = 860;
  string msg = 7;
  uint32 account_type = 5;
  uint32 sub_channel_id = 1802;
  bool Unk2700_FLBKPCPGPDH = 2028;
  string encrypted_seed = 1493;
  bool is_proficient_player = 9;
  uint32 Unk2800_BPJOBLNCBEI = 1172;
  uint32 uid = 1;
  string account_uid = 12;
  bool is_guest = 4;
  string client_version_random_key = 1529;
  repeated uint32 Unk2800_NNBFCEAOEPB = 1640;
  uint32 platform_type = 8;
  uint32 reg_platform = 1112;
  bool is_login_white_list = 573;
  string seed_signature = 1140;
}

// CmdId: 2227
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetPushTipsRewardReq {
  repeated uint32 push_tips_id_list = 4;
}

// CmdId: 2294
// EnetChannelId: 0
// EnetIsReliable: true
message GetPushTipsRewardRsp {
  int32 retcode = 10;
  repeated uint32 push_tips_id_list = 9;
}

// CmdId: 490
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetQuestTalkHistoryReq {
  uint32 parent_quest_id = 6;
}

// CmdId: 473
// EnetChannelId: 0
// EnetIsReliable: true
message GetQuestTalkHistoryRsp {
  repeated uint32 talk_id_list = 13;
  uint32 parent_quest_id = 7;
  int32 retcode = 15;
}

// CmdId: 4034
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetRecentMpPlayerListReq {}


// CmdId: 4050
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetRecentMpPlayerListRsp {
  int32 retcode = 13;
  repeated FriendBrief recent_mp_player_brief_list = 14;
}

// CmdId: 5602
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetRegionSearchReq {}

// CmdId: 5094
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetReunionMissionInfoReq {
  uint32 mission_id = 14;
}


// CmdId: 5099
// EnetChannelId: 0
// EnetIsReliable: true
message GetReunionMissionInfoRsp {
  int32 retcode = 9;
  ReunionMissionInfo mission_info = 14;
}

// CmdId: 5097
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetReunionPrivilegeInfoReq {
  uint32 privilege_id = 10;
}


// CmdId: 5087
// EnetChannelId: 0
// EnetIsReliable: true
message GetReunionPrivilegeInfoRsp {
  int32 retcode = 3;
  ReunionPrivilegeInfo privilege_info = 1;
}

// CmdId: 5052
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetReunionSignInInfoReq {
  uint32 sign_in_config_id = 10;
}


// CmdId: 5081
// EnetChannelId: 0
// EnetIsReliable: true
message GetReunionSignInInfoRsp {
  ReunionSignInInfo sign_in_info = 5;
  int32 retcode = 15;
}

// CmdId: 265
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetSceneAreaReq {
  uint32 scene_id = 4;
  uint32 belong_uid = 7;
}


// CmdId: 204
// EnetChannelId: 0
// EnetIsReliable: true
message GetSceneAreaRsp {
  int32 retcode = 7;
  repeated CityInfo city_info_list = 13;
  uint32 scene_id = 15;
  repeated uint32 area_id_list = 9;
}

// CmdId: 535
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetSceneNpcPositionReq {
  repeated uint32 npc_id_list = 6;
  uint32 scene_id = 8;
}


// CmdId: 507
// EnetChannelId: 0
// EnetIsReliable: true
message GetSceneNpcPositionRsp {
  int32 retcode = 10;
  repeated NpcPositionInfo npc_info_list = 14;
  uint32 scene_id = 4;
}

// CmdId: 3419
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetScenePerformanceReq {}


// CmdId: 3137
// EnetChannelId: 0
// EnetIsReliable: true
message GetScenePerformanceRsp {
  uint32 monster_num = 9;
  uint32 gather_num_insight = 1;
  uint32 gadget_num = 6;
  int32 retcode = 7;
  uint32 dynamic_group_num = 12;
  uint32 group_num = 2;
  Vector pos = 4;
  uint32 entity_num = 8;
  uint32 gather_num = 13;
}

// CmdId: 297
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetScenePointReq {
  uint32 belong_uid = 10;
  uint32 scene_id = 4;
}

// CmdId: 281
// EnetChannelId: 0
// EnetIsReliable: true
message GetScenePointRsp {
  repeated uint32 not_explored_dungeon_entry_list = 11;
  repeated uint32 to_be_explore_dungeon_entry_list = 15;
  repeated uint32 locked_point_list = 2;
  repeated uint32 unhide_point_list = 5;
  int32 retcode = 9;
  uint32 belong_uid = 12;
  repeated uint32 unlocked_point_list = 13;
  repeated uint32 unlock_area_list = 1;
  repeated uint32 hide_point_list = 4;
  uint32 scene_id = 14;
  repeated uint32 not_interact_dungeon_entry_list = 6;
  repeated uint32 group_unlimit_point_list = 10;
}

// CmdId: 772
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetShopReq {
  uint32 shop_type = 13;
}


// CmdId: 798
// EnetChannelId: 0
// EnetIsReliable: true
message GetShopRsp {
  Shop shop = 11;
  int32 retcode = 2;
}

// CmdId: 707
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetShopmallDataReq {}

// CmdId: 721
// EnetChannelId: 0
// EnetIsReliable: true
message GetShopmallDataRsp {
  repeated uint32 shop_type_list = 15;
  int32 retcode = 3;
}

// CmdId: 2507
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetSignInRewardReq {
  uint32 schedule_id = 10;
  uint32 reward_day = 3;
}


// CmdId: 2521
// EnetChannelId: 0
// EnetIsReliable: true
message GetSignInRewardRsp {
  int32 retcode = 1;
  SignInInfo sign_in_info = 14;
}

// CmdId: 4253
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetWidgetSlotReq {}


// CmdId: 4254
// EnetChannelId: 0
// EnetIsReliable: true
message GetWidgetSlotRsp {
  repeated WidgetSlotData slot_list = 13;
  int32 retcode = 9;
}

// CmdId: 3391
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GetWorldMpInfoReq {}

// CmdId: 3320
// EnetChannelId: 0
// EnetIsReliable: true
message GetWorldMpInfoRsp {
  int32 retcode = 12;
  bool is_in_mp_mode = 1;
  uint32 quit_mp_valid_time = 9;
}

// CmdId: 8353
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GiveUpRoguelikeDungeonCardReq {}

// CmdId: 8497
// EnetChannelId: 0
// EnetIsReliable: true
message GiveUpRoguelikeDungeonCardRsp {
  int32 retcode = 8;
}

message GivingRecord {
  bool is_finished = 9;
  uint32 group_id = 5;
  bool Unk2800_JBPPNEHPACC = 8;
  uint32 giving_id = 3;
  uint32 last_group_id = 6;
  uint32 config_id = 2;
  map<uint32, uint32> Unk2800_BDKKENPEEGD = 15;
}


// CmdId: 187
// EnetChannelId: 0
// EnetIsReliable: true
message GivingRecordChangeNotify {
  bool is_deactive = 11;
  GivingRecord giving_record = 15;
}


// CmdId: 116
// EnetChannelId: 0
// EnetIsReliable: true
message GivingRecordNotify {
  repeated GivingRecord giving_record_list = 14;
}

// CmdId: 94
// EnetChannelId: 0
// EnetIsReliable: true
message GmTalkNotify {
  string msg = 5;
}

// CmdId: 98
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message GmTalkReq {
  string msg = 13;
}

// CmdId: 12
// EnetChannelId: 0
// EnetIsReliable: true
message GmTalkRsp {
  int32 retcode = 15;
  string retmsg = 3;
  string msg = 13;
}


// CmdId: 663
// EnetChannelId: 0
// EnetIsReliable: true
message GrantRewardNotify {
  Reward reward = 6;
}


// CmdId: 5776
// EnetChannelId: 0
// EnetIsReliable: true
message GroupLinkAllNotify {
  repeated GroupLinkBundle bundle_list = 5;
}


message GroupLinkBundle {
  Vector center = 4;
  bool is_activated = 12;
  uint32 bundle_id = 3;
  bool Unk2700_JKDNOPGKJAC = 14;
  uint32 scene_id = 5;
  uint32 radius = 1;
}


// CmdId: 5768
// EnetChannelId: 0
// EnetIsReliable: true
message GroupLinkChangeNotify {
  GroupLinkBundle bundle = 8;
}

// CmdId: 5775
// EnetChannelId: 0
// EnetIsReliable: true
message GroupLinkDeleteNotify {
  uint32 bundle_id = 12;
}

// CmdId: 3257
// EnetChannelId: 0
// EnetIsReliable: true
message GroupSuiteNotify {
  map<uint32, uint32> group_map = 3;
}

// CmdId: 3344
// EnetChannelId: 0
// EnetIsReliable: true
message GroupUnloadNotify {
  repeated uint32 group_list = 10;
}

// CmdId: 3031
// EnetChannelId: 0
// EnetIsReliable: true
message GuestBeginEnterSceneNotify {
  uint32 scene_id = 8;
  uint32 uid = 15;
}

// CmdId: 3144
// EnetChannelId: 0
// EnetIsReliable: true
message GuestPostEnterSceneNotify {
  uint32 scene_id = 5;
  uint32 uid = 4;
}

// CmdId: 5675
// EnetChannelId: 0
// EnetIsReliable: true
message H5ActivityIdsNotify {
  uint32 client_red_dot_timestamp = 1;
  map<uint32, uint32> h_5_activity_map = 12;
}

message H5ActivityInfo {
  uint32 h_5_activity_id = 3;
  string url = 4;
  bool is_entrance_open = 7;
  uint32 h_5_schedule_id = 8;
  uint32 end_time = 10;
  string prefab_path = 11;
  uint32 content_close_time = 2;
  uint32 begin_time = 13;
}


message HachiActivityDetailInfo {
  map<uint32, HachiStageData> stage_map = 6;
}

message HachiStageData {
  bool is_open = 8;
  bool is_finished = 12;
  uint32 open_time = 5;
  uint32 stage_id = 14;
}

message HashedString {
  uint32 hash = 1;
}


message HideAndSeekActivityDetailInfo {
  repeated Unk2700_LBOAEFMECCP Unk2700_JDMDOOHFNCA = 1;
  repeated uint32 chosen_hunter_skill_list = 4;
  repeated uint32 unlock_map_list = 13;
  repeated uint32 chosen_hider_skill_list = 6;
}

message HideAndSeekPlayerBattleInfo {
  uint32 costume_id = 3;
  repeated uint32 skill_list = 15;
  bool is_ready = 12;
  uint32 avatar_id = 6;
}

// CmdId: 5302
// EnetChannelId: 0
// EnetIsReliable: true
message HideAndSeekPlayerReadyNotify {
  repeated uint32 uid_list = 5;
}

// CmdId: 5319
// EnetChannelId: 0
// EnetIsReliable: true
message HideAndSeekPlayerSetAvatarNotify {
  uint32 avatar_id = 2;
  uint32 costume_id = 13;
  uint32 uid = 5;
}

// CmdId: 5330
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HideAndSeekSelectAvatarReq {
  uint32 avatar_id = 8;
}

// CmdId: 5367
// EnetChannelId: 0
// EnetIsReliable: true
message HideAndSeekSelectAvatarRsp {
  int32 retcode = 2;
  uint32 avatar_id = 3;
}

// CmdId: 8183
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HideAndSeekSelectSkillReq {
  repeated uint32 skill_list = 13;
}

// CmdId: 8088
// EnetChannelId: 0
// EnetIsReliable: true
message HideAndSeekSelectSkillRsp {
  int32 retcode = 4;
  repeated uint32 skill_list = 12;
}

// CmdId: 5358
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HideAndSeekSetReadyReq {}

// CmdId: 5370
// EnetChannelId: 0
// EnetIsReliable: true
message HideAndSeekSetReadyRsp {
  int32 retcode = 11;
}


message HideAndSeekSettleInfo {
  uint32 uid = 2;
  ProfilePicture profile_picture = 1;
  repeated ExhibitionDisplayInfo card_list = 8;
  string nickname = 3;
  uint32 head_image = 4;
  string online_id = 10;
}


// CmdId: 5317
// EnetChannelId: 0
// EnetIsReliable: true
message HideAndSeekSettleNotify {
  uint32 cost_time = 2;
  repeated HideAndSeekSettleInfo settle_info_list = 8;
  repeated uint32 winner_list = 15;
  SettleReason reason = 4;
  uint32 play_index = 13;
  bool is_record_score = 6;
  repeated ExhibitionDisplayInfo score_list = 9;
  uint32 stage_type = 14;
  enum SettleReason {
    SETTLE_REASON_TIME_OUT = 0;
    SETTLE_REASON_PLAY_END = 1;
    SETTLE_REASON_PLAYER_QUIT = 2;
  }
}


message HideAndSeekStageInfo {
  uint32 map_id = 8;
  bool is_record_score = 3;
  HideAndSeekStageType stage_type = 7;
  map<uint32, HideAndSeekPlayerBattleInfo> battle_info_map = 2;
  repeated uint32 hider_uid_list = 1;
  uint32 hunter_uid = 10;
}

enum HideAndSeekStageType {
  HIDE_AND_SEEK_STAGE_TYPE_PREPARE = 0;
  HIDE_AND_SEEK_STAGE_TYPE_PICK = 1;
  HIDE_AND_SEEK_STAGE_TYPE_GAME = 2;
  HIDE_AND_SEEK_STAGE_TYPE_HIDE = 3;
  HIDE_AND_SEEK_STAGE_TYPE_SEEK = 4;
  HIDE_AND_SEEK_STAGE_TYPE_SETTLE = 5;
}


// CmdId: 244
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HitClientTrivialNotify {
  Vector position = 11;
  uint32 owner_entity_id = 12;
}

enum HitColliderType {
  HIT_COLLIDER_TYPE_INVALID = 0;
  HIT_COLLIDER_TYPE_HIT_BOX = 1;
  HIT_COLLIDER_TYPE_WET_HIT_BOX = 2;
  HIT_COLLIDER_TYPE_HEAD_BOX = 3;
}


message HitCollision {
  HitColliderType hit_collider_type = 8;
  Vector hit_point = 7;
  float attackee_hit_force_angle = 2;
  Vector hit_dir = 13;
  float attackee_hit_entity_angle = 15;
  int32 hit_box_index = 4;
}


// CmdId: 3019
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HitTreeNotify {
  uint32 tree_type = 11;
  Vector tree_pos = 2;
  Vector drop_pos = 8;
}


message HomeAnimalData {
  Vector spawn_rot = 10;
  uint32 furniture_id = 5;
  Vector spawn_pos = 6;
}

// CmdId: 4741
// EnetChannelId: 0
// EnetIsReliable: true
message HomeAvatarAllFinishRewardNotify {
  repeated uint32 event_id_list = 7;
}

// CmdId: 4748
// EnetChannelId: 0
// EnetIsReliable: true
message HomeAvatarCostumeChangeNotify {
  uint32 costume_id = 4;
  uint32 avatar_id = 10;
}

// CmdId: 4551
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeAvatarRewardEventGetReq {
  uint32 event_id = 9;
  uint32 avatar_id = 7;
}


// CmdId: 4833
// EnetChannelId: 0
// EnetIsReliable: true
message HomeAvatarRewardEventGetRsp {
  repeated ItemParam item_list = 4;
  int32 retcode = 14;
  uint32 event_id = 8;
}

message HomeAvatarRewardEventInfo {
  uint32 avatar_id = 1;
  uint32 guid = 12;
  uint32 event_id = 2;
  uint32 suite_id = 14;
  uint32 random_position = 9;
}


// CmdId: 4852
// EnetChannelId: 0
// EnetIsReliable: true
message HomeAvatarRewardEventNotify {
  bool is_event_trigger = 4;
  HomeAvatarRewardEventInfo reward_event = 2;
  repeated HomeAvatarRewardEventInfo pending_list = 8;
}


// CmdId: 4808
// EnetChannelId: 0
// EnetIsReliable: true
message HomeAvatarSummonAllEventNotify {
  repeated HomeAvatarSummonEventInfo summon_event_list = 1;
}

message HomeAvatarSummonEventInfo {
  uint32 avatar_id = 3;
  uint32 guid = 8;
  uint32 event_id = 9;
  uint32 suit_id = 12;
  uint32 event_over_time = 2;
  uint32 random_position = 10;
}

// CmdId: 4806
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeAvatarSummonEventReq {
  uint32 avatar_id = 7;
  uint32 suit_id = 9;
  uint32 guid = 12;
}

// CmdId: 4817
// EnetChannelId: 0
// EnetIsReliable: true
message HomeAvatarSummonEventRsp {
  uint32 event_id = 11;
  int32 retcode = 14;
}

// CmdId: 4629
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeAvatarSummonFinishReq {
  uint32 event_id = 12;
}

// CmdId: 4696
// EnetChannelId: 0
// EnetIsReliable: true
message HomeAvatarSummonFinishRsp {
  uint32 event_id = 8;
  int32 retcode = 3;
}

message HomeAvatarTalkFinishInfo {
  uint32 avatar_id = 9;
  repeated uint32 finish_talk_id_list = 3;
}


// CmdId: 4896
// EnetChannelId: 0
// EnetIsReliable: true
message HomeAvatarTalkFinishInfoNotify {
  repeated HomeAvatarTalkFinishInfo avatar_talk_info_list = 9;
}

// CmdId: 4688
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeAvatarTalkReq {
  uint32 talk_id = 12;
  uint32 avatar_id = 15;
}


// CmdId: 4464
// EnetChannelId: 0
// EnetIsReliable: true
message HomeAvatarTalkRsp {
  int32 retcode = 8;
  HomeAvatarTalkFinishInfo avatar_talk_info = 3;
}

// CmdId: 4453
// EnetChannelId: 0
// EnetIsReliable: true
message HomeAvtarAllFinishRewardNotify {
  repeated uint32 event_id_list = 13;
}


message HomeBasicInfo {
  uint32 level = 10;
  uint32 cur_room_scene_id = 13;
  uint32 cur_module_id = 9;
  bool is_in_edit_mode = 5;
  uint32 home_owner_uid = 3;
  uint64 exp = 14;
  HomeLimitedShopInfo limited_shop_info = 15;
  string owner_nick_name = 4;
}


// CmdId: 4885
// EnetChannelId: 0
// EnetIsReliable: true
message HomeBasicInfoNotify {
  HomeBasicInfo basic_info = 15;
}




message HomeBlockArrangementInfo {
  bool is_unlocked = 1;
  uint32 comfort_value = 2;
  repeated HomeAnimalData deploy_animal_list = 4;
  repeated Unk2700_GOHMLAFNBGF Unk2700_HGIECHILOJL = 5;
  repeated WeekendDjinnInfo weekend_djinn_info_list = 13;
  repeated HomeFurnitureSuiteData furniture_suite_list = 15;
  repeated HomeBlockFieldData field_list = 3;
  repeated HomeNpcData deploy_npc_list = 11;
  repeated HomeBlockDotPattern dot_pattern_list = 7;
  repeated HomeFurnitureData persistent_furniture_list = 9;
  repeated HomeFurnitureData deploy_furniure_list = 12;
  uint32 block_id = 6;
  repeated Unk2700_BIEMCDLIFOD Unk2700_KJGLLEEHBPF = 14;
}


message HomeBlockArrangementMuipData {
  uint32 block_id = 1;
  repeated HomeFurnitureArrangementMuipData furniture_data_list = 2;
}

message HomeBlockDotPattern {
  uint32 width = 8;
  uint32 height = 11;
  bytes data = 9;
}


message HomeBlockFieldData {
  Vector rot = 15;
  Vector pos = 4;
  uint32 guid = 9;
  uint32 furniture_id = 1;
  repeated HomeBlockSubFieldData sub_field_list = 7;
}

// CmdId: 4543
// EnetChannelId: 0
// EnetIsReliable: true
message HomeBlockNotify {
  uint32 end_time = 3;
}


message HomeBlockSubFieldData {
  Vector rot = 3;
  Vector pos = 1;
}

// CmdId: 4564
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeChangeEditModeReq {
  bool is_enter_edit_mode = 12;
}

// CmdId: 4559
// EnetChannelId: 0
// EnetIsReliable: true
message HomeChangeEditModeRsp {
  int32 retcode = 10;
  bool is_enter_edit_mode = 5;
}

// CmdId: 4809
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeChangeModuleReq {
  uint32 target_module_id = 5;
}

// CmdId: 4596
// EnetChannelId: 0
// EnetIsReliable: true
message HomeChangeModuleRsp {
  int32 retcode = 3;
  uint32 target_module_id = 2;
}

// CmdId: 4524
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeChooseModuleReq {
  uint32 module_id = 9;
}

// CmdId: 4648
// EnetChannelId: 0
// EnetIsReliable: true
message HomeChooseModuleRsp {
  int32 retcode = 2;
  uint32 module_id = 8;
}


// CmdId: 4699
// EnetChannelId: 0
// EnetIsReliable: true
message HomeComfortInfoNotify {
  repeated HomeModuleComfortInfo module_info_list = 6;
}


message HomeCustomFurnitureInfo {
  repeated CustomCommonNodeInfo sub_furniture_list = 12;
  uint32 guid = 6;
}


// CmdId: 4712
// EnetChannelId: 0
// EnetIsReliable: true
message HomeCustomFurnitureInfoNotify {
  repeated uint32 delete_custom_furniture_list = 4;
  map<uint32, uint32> used_sub_furniture_count_map = 15;
  repeated HomeCustomFurnitureInfo custom_furniture_info_list = 11;
}


// CmdId: 4724
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeEditCustomFurnitureReq {
  HomeCustomFurnitureInfo custom_furniture_info = 15;
}


// CmdId: 4496
// EnetChannelId: 0
// EnetIsReliable: true
message HomeEditCustomFurnitureRsp {
  HomeCustomFurnitureInfo custom_furniture_info = 11;
  int32 retcode = 14;
}

message HomeFishFarmingInfo {
  repeated uint32 fish_id_list = 11;
  uint32 fishpond_guid = 14;
}


// CmdId: 4677
// EnetChannelId: 0
// EnetIsReliable: true
message HomeFishFarmingInfoNotify {
  repeated HomeFishFarmingInfo fish_farming_info_list = 15;
}


message HomeFurnitureArrangementMuipData {
  uint32 furniture_id = 1;
  Vector spawn_pos = 2;
  Vector spawn_rot = 3;
}


message HomeFurnitureData {
  uint32 version = 6;
  int32 parent_furniture_index = 3;
  uint32 furniture_id = 4;
  uint32 guid = 9;
  Vector spawn_rot = 10;
  Vector spawn_pos = 8;
}


message HomeFurnitureSuiteData {
  bool is_allow_summon = 10;
  uint32 suite_id = 6;
  Vector spawn_pos = 8;
  uint32 guid = 13;
  repeated int32 included_furniture_index_list = 1;
}

// CmdId: 4848
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeGetArrangementInfoReq {
  repeated uint32 scene_id_list = 13;
}


// CmdId: 4844
// EnetChannelId: 0
// EnetIsReliable: true
message HomeGetArrangementInfoRsp {
  int32 retcode = 6;
  repeated HomeSceneArrangementInfo scene_arrangement_info_list = 14;
}

// CmdId: 4655
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeGetBasicInfoReq {}

// CmdId: 4476
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeGetFishFarmingInfoReq {}


// CmdId: 4678
// EnetChannelId: 0
// EnetIsReliable: true
message HomeGetFishFarmingInfoRsp {
  repeated HomeFishFarmingInfo fish_farming_info_list = 7;
  int32 retcode = 4;
}

// CmdId: 4820
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeGetOnlineStatusReq {}


// CmdId: 4705
// EnetChannelId: 0
// EnetIsReliable: true
message HomeGetOnlineStatusRsp {
  repeated OnlinePlayerInfo player_info_list = 13;
  int32 retcode = 7;
}

// CmdId: 4870
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeKickPlayerReq {
  uint32 target_uid = 12;
  bool is_kick_all = 13;
}

// CmdId: 4691
// EnetChannelId: 0
// EnetIsReliable: true
message HomeKickPlayerRsp {
  uint32 target_uid = 4;
  int32 retcode = 8;
  bool is_kick_all = 10;
}


message HomeLimitedShop {
  repeated HomeLimitedShopGoods goods_list = 8;
}


// CmdId: 4760
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeLimitedShopBuyGoodsReq {
  HomeLimitedShopGoods goods = 3;
  uint32 buy_count = 10;
}


// CmdId: 4750
// EnetChannelId: 0
// EnetIsReliable: true
message HomeLimitedShopBuyGoodsRsp {
  repeated HomeLimitedShopGoods goods_list = 13;
  int32 retcode = 14;
  HomeLimitedShopGoods goods = 5;
  uint32 buy_count = 8;
}


message HomeLimitedShopGoods {
  uint32 buy_limit = 8;
  repeated ItemParam cost_item_list = 15;
  uint32 bought_num = 1;
  ItemParam goods_item = 6;
  uint32 goods_id = 13;
  uint32 disable_type = 3;
}

// CmdId: 4552
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeLimitedShopGoodsListReq {}


// CmdId: 4546
// EnetChannelId: 0
// EnetIsReliable: true
message HomeLimitedShopGoodsListRsp {
  int32 retcode = 6;
  HomeLimitedShop shop = 12;
}


message HomeLimitedShopInfo {
  fixed32 next_close_time = 9;
  fixed32 next_guest_open_time = 11;
  Vector djinn_rot = 7;
  uint32 uid = 4;
  fixed32 next_open_time = 6;
  Vector djinn_pos = 2;
}


// CmdId: 4790
// EnetChannelId: 0
// EnetIsReliable: true
message HomeLimitedShopInfoChangeNotify {
  repeated HomeLimitedShopGoods goods_list = 5;
}


// CmdId: 4887
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeLimitedShopInfoNotify {
  HomeLimitedShopInfo shop_info = 2;
}

// CmdId: 4825
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeLimitedShopInfoReq {}


// CmdId: 4796
// EnetChannelId: 0
// EnetIsReliable: true
message HomeLimitedShopInfoRsp {
  HomeLimitedShopInfo shop_info = 10;
  int32 retcode = 7;
}


message HomeMarkPointFurnitureData {
  uint32 guid = 1;
  uint32 furniture_id = 2;
  uint32 furniture_type = 3;
  Vector pos = 4;
  oneof extra {
    HomeMarkPointNPCData npc_data = 6;
    HomeMarkPointSuiteData suite_data = 7;
  }
}

message HomeMarkPointNPCData {
  uint32 avatar_id = 1;
  uint32 costume_id = 2;
}


// CmdId: 4474
// EnetChannelId: 0
// EnetIsReliable: true
message HomeMarkPointNotify {
  repeated HomeMarkPointSceneData mark_point_data_list = 12;
}


message HomeMarkPointSceneData {
  repeated HomeMarkPointFurnitureData furniture_list = 6;
  uint32 module_id = 5;
  uint32 scene_id = 2;
  Vector teapot_spirit_pos = 4;
}

message HomeMarkPointSuiteData {
  uint32 suite_id = 1;
}

message HomeModuleComfortInfo {
  uint32 module_id = 13;
  uint32 room_scene_comfort_value = 9;
  repeated uint32 world_scene_block_comfort_value_list = 3;
}

// CmdId: 4499
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeModuleSeenReq {
  repeated uint32 seen_module_id_list = 5;
}

// CmdId: 4821
// EnetChannelId: 0
// EnetIsReliable: true
message HomeModuleSeenRsp {
  repeated uint32 seen_module_id_list = 13;
  int32 retcode = 8;
}

// CmdId: 4560
// EnetChannelId: 0
// EnetIsReliable: true
message HomeModuleUnlockNotify {
  uint32 module_id = 8;
}


message HomeNpcData {
  uint32 avatar_id = 14;
  Vector spawn_pos = 15;
  uint32 costume_id = 3;
  Vector spawn_rot = 13;
}


message HomePlantFieldData {
  repeated HomePlantSubFieldData sub_field_list = 13;
  uint32 furniture_id = 9;
  uint32 scene_id = 1;
  uint32 field_guid = 10;
  Vector spawn_pos = 12;
}


// CmdId: 4549
// EnetChannelId: 0
// EnetIsReliable: true
message HomePlantFieldNotify {
  HomePlantFieldData field = 13;
}

enum HomePlantFieldStatus {
  HOME_PLANT_FIELD_STATUS_STATUE_NONE = 0;
  HOME_PLANT_FIELD_STATUS_STATUE_SEED = 1;
  HOME_PLANT_FIELD_STATUS_STATUE_SPROUT = 2;
  HOME_PLANT_FIELD_STATUS_STATUE_GATHER = 3;
}


// CmdId: 4587
// EnetChannelId: 0
// EnetIsReliable: true
message HomePlantInfoNotify {
  repeated HomePlantFieldData field_list = 4;
}

// CmdId: 4647
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomePlantInfoReq {}


// CmdId: 4701
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomePlantInfoRsp {
  int32 retcode = 7;
  repeated HomePlantFieldData field_list = 15;
}

// CmdId: 4804
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomePlantSeedReq {
  uint32 index = 4;
  uint32 field_guid = 14;
  repeated uint32 seed_id_list = 13;
}

// CmdId: 4556
// EnetChannelId: 0
// EnetIsReliable: true
message HomePlantSeedRsp {
  int32 retcode = 9;
}


message HomePlantSubFieldData {
  repeated uint32 entity_id_list = 15;
  HomePlantFieldStatus field_status = 14;
  uint32 home_gather_id = 9;
  uint32 seed_id = 8;
  fixed32 end_time = 4;
}

// CmdId: 4640
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomePlantWeedReq {
  uint32 field_guid = 9;
  uint32 index = 3;
}

// CmdId: 4527
// EnetChannelId: 0
// EnetIsReliable: true
message HomePlantWeedRsp {
  int32 retcode = 10;
}

// CmdId: 4599
// EnetChannelId: 0
// EnetIsReliable: true
message HomePriorCheckNotify {
  fixed32 end_time = 7;
}

message HomeResource {
  fixed32 next_refresh_time = 15;
  uint32 store_limit = 3;
  uint32 store_value = 12;
}


// CmdId: 4892
// EnetChannelId: 0
// EnetIsReliable: true
message HomeResourceNotify {
  HomeResource home_coin = 9;
  HomeResource fetter_exp = 8;
}

// CmdId: 4768
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeResourceTakeFetterExpReq {}


// CmdId: 4645
// EnetChannelId: 0
// EnetIsReliable: true
message HomeResourceTakeFetterExpRsp {
  HomeResource fetter_exp = 4;
  int32 retcode = 15;
}

// CmdId: 4479
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeResourceTakeHomeCoinReq {}


// CmdId: 4541
// EnetChannelId: 0
// EnetIsReliable: true
message HomeResourceTakeHomeCoinRsp {
  HomeResource home_coin = 7;
  int32 retcode = 10;
}


message HomeSceneArrangementInfo {
  Vector born_rot = 4;
  Vector born_pos = 1;
  repeated HomeFurnitureData stair_list = 11;
  repeated HomeFurnitureData door_list = 13;
  bool is_set_born_pos = 10;
  repeated HomeBlockArrangementInfo block_arrangement_info_list = 8;
  uint32 scene_id = 2;
  uint32 Unk2700_BJHAMKKECEI = 12;
  Vector djinn_pos = 9;
  HomeFurnitureData main_house = 14;
  uint32 comfort_value = 7;
  uint32 tmp_version = 5;
}


message HomeSceneArrangementMuipData {
  uint32 module_id = 1;
  uint32 scene_id = 2;
  bool is_room = 3;
  repeated HomeBlockArrangementMuipData block_data_list = 4;
}

// CmdId: 4674
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeSceneInitFinishReq {}

// CmdId: 4505
// EnetChannelId: 0
// EnetIsReliable: true
message HomeSceneInitFinishRsp {
  int32 retcode = 6;
}

// CmdId: 4528
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeSceneJumpReq {
  bool is_enter_room_scene = 9;
}

// CmdId: 4698
// EnetChannelId: 0
// EnetIsReliable: true
message HomeSceneJumpRsp {
  int32 retcode = 11;
  bool is_enter_room_scene = 8;
}


message HomeTransferData {
  uint32 guid = 15;
  Vector spawn_pos = 7;
}

// CmdId: 4726
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeTransferReq {
  uint32 guid = 1;
}

// CmdId: 4616
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeTransferRsp {
  int32 retcode = 10;
}


// CmdId: 4510
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeUpdateArrangementInfoReq {
  HomeSceneArrangementInfo scene_arrangement_info = 6;
}

// CmdId: 4757
// EnetChannelId: 0
// EnetIsReliable: true
message HomeUpdateArrangementInfoRsp {
  int32 retcode = 2;
}


// CmdId: 4544
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HomeUpdateFishFarmingInfoReq {
  HomeFishFarmingInfo fish_farming_info = 5;
}

// CmdId: 4857
// EnetChannelId: 0
// EnetIsReliable: true
message HomeUpdateFishFarmingInfoRsp {
  int32 retcode = 4;
}

message HomeVerifyBlockData {
  uint32 block_id = 10;
  uint32 furnitures = 9;
}


message HomeVerifyData {
  string Unk2700_OAKBDKKBFHP = 7;
  fixed32 timestamp = 15;
  uint32 uid = 5;
  HomeSceneArrangementMuipData Unk2700_CDELDBLKLDO = 9;
  string region = 3;
  string token = 1;
  HomeVerifySceneData home_info = 6;
  LanguageType lang = 8;
}

message HomeVerifyFurnitureData {
  repeated uint32 type = 7;
  uint32 id = 5;
  uint32 num = 9;
}


message HomeVerifySceneData {
  repeated HomeVerifyBlockData blocks = 6;
  uint32 module_id = 11;
  uint32 scene_id = 4;
  uint32 version = 14;
  uint32 is_room = 2;
}

// CmdId: 312
// EnetChannelId: 0
// EnetIsReliable: true
message HostPlayerNotify {
  uint32 host_peer_id = 13;
  uint32 host_uid = 10;
}


// CmdId: 4320
// EnetChannelId: 0
// EnetIsReliable: true
message HuntingFailNotify {
  HuntingPair hunting_pair = 12;
}


// CmdId: 4341
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message HuntingGiveUpReq {
  HuntingPair hunting_pair = 1;
}


// CmdId: 4342
// EnetChannelId: 0
// EnetIsReliable: true
message HuntingGiveUpRsp {
  int32 retcode = 3;
  HuntingPair hunting_pair = 4;
}


message HuntingOfferData {
  HuntingPair hunting_pair = 4;
  uint32 city_id = 8;
  HuntingOfferState state = 1;
}

enum HuntingOfferState {
  HUNTING_OFFER_STATE_NONE = 0;
  HUNTING_OFFER_STATE_STARTED = 1;
  HUNTING_OFFER_STATE_UNSTARTED = 2;
  HUNTING_OFFER_STATE_SUCC = 3;
}


// CmdId: 4345
// EnetChannelId: 0
// EnetIsReliable: true
message HuntingOngoingNotify {
  HuntingPair hunting_pair = 15;
  bool is_started = 8;
  Vector next_position = 3;
  uint32 finish_clue_count = 10;
  bool is_final = 14;
  uint32 fail_time = 7;
}

message HuntingPair {
  uint32 refresh_id = 9;
  uint32 monster_config_id = 4;
}


// CmdId: 4322
// EnetChannelId: 0
// EnetIsReliable: true
message HuntingRevealClueNotify {
  uint32 finish_clue_count = 5;
  Vector clue_position = 4;
  HuntingPair hunting_pair = 12;
  uint32 finished_group_id = 7;
}


// CmdId: 4344
// EnetChannelId: 0
// EnetIsReliable: true
message HuntingRevealFinalNotify {
  uint32 finished_group_id = 5;
  HuntingPair hunting_pair = 11;
  Vector final_position = 2;
}


// CmdId: 4329
// EnetChannelId: 0
// EnetIsReliable: true
message HuntingStartNotify {
  Vector clue_position = 4;
  uint32 fail_time = 15;
  HuntingPair hunting_pair = 3;
  bool is_final = 8;
}


// CmdId: 4349
// EnetChannelId: 0
// EnetIsReliable: true
message HuntingSuccessNotify {
  HuntingPair hunting_pair = 4;
}


message InBattleChessInfo {
  repeated uint32 ban_card_tag_list = 2;
  uint32 round = 4;
  repeated ChessCardInfo selected_card_info_list = 9;
  ChessMysteryInfo mystery_info = 1;
  map<uint32, ChessPlayerInfo> player_info_map = 8;
  uint32 max_escapable_monsters = 6;
  uint32 escaped_monsters = 12;
  uint32 total_round = 14;
  uint32 left_monsters = 15;
}


message InBattleChessSettleInfo {
  bool is_success = 7;
  uint32 chess_exp = 11;
  uint32 chess_level = 13;
  uint32 old_chess_level = 10;
  repeated ExhibitionDisplayInfo score_list = 1;
  uint64 scene_time_ms = 14;
  uint32 old_chess_exp = 2;
}

message InBattleFleurFairInfo {
  repeated uint32 gallery_id_list = 5;
  uint32 gallery_stage_index = 6;
  uint32 preview_stage_index = 8;
  repeated uint32 ability_group_id_list = 2;
  uint32 preview_display_duration = 12;
}

message InBattleMechanicusBuildingInfo {
  uint32 building_id = 8;
  uint32 level = 7;
  uint32 cost_points = 2;
  uint32 refund_points = 11;
}

// CmdId: 5303
// EnetChannelId: 0
// EnetIsReliable: true
message InBattleMechanicusBuildingPointsNotify {
  map<uint32, uint32> player_building_points_map = 4;
}

enum InBattleMechanicusCardChallengeState {
  IN_BATTLE_MECHANICUS_CARD_CHALLENGE_STATE_NONE = 0;
  IN_BATTLE_MECHANICUS_CARD_CHALLENGE_STATE_ON_GOING = 1;
  IN_BATTLE_MECHANICUS_CARD_CHALLENGE_STATE_FAIL = 2;
  IN_BATTLE_MECHANICUS_CARD_CHALLENGE_STATE_SUCCESS = 3;
}


message InBattleMechanicusCardInfo {
  uint32 rand_effect_id = 12;
  uint32 end_round = 3;
  InBattleMechanicusCardChallengeState challenge_state = 5;
  uint32 cost_points = 1;
  uint32 card_id = 11;
  uint32 begin_round = 8;
}


// CmdId: 5397
// EnetChannelId: 0
// EnetIsReliable: true
message InBattleMechanicusCardResultNotify {
  uint32 wait_seconds = 6;
  uint32 group_id = 2;
  repeated InBattleMechanicusCardInfo card_list = 9;
  uint64 wait_begin_time_us = 7;
  map<uint32, uint32> player_confirmed_card_map = 12;
  uint32 play_index = 8;
}

// CmdId: 5348
// EnetChannelId: 0
// EnetIsReliable: true
message InBattleMechanicusConfirmCardNotify {
  uint32 play_index = 11;
  uint32 card_id = 13;
  uint32 group_id = 10;
  uint32 player_uid = 2;
}

// CmdId: 5331
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message InBattleMechanicusConfirmCardReq {
  uint32 play_index = 6;
  uint32 card_id = 1;
  uint32 group_id = 3;
}

// CmdId: 5375
// EnetChannelId: 0
// EnetIsReliable: true
message InBattleMechanicusConfirmCardRsp {
  uint32 play_index = 2;
  uint32 card_id = 14;
  int32 retcode = 11;
  uint32 group_id = 6;
}

// CmdId: 5307
// EnetChannelId: 0
// EnetIsReliable: true
message InBattleMechanicusEscapeMonsterNotify {
  uint32 escaped_monster_num = 4;
}



message InBattleMechanicusInfo {
  uint32 left_monster = 5;
  uint32 wait_seconds = 13;
  repeated uint32 entrance_list = 410;
  repeated uint32 exit_list = 115;
  repeated InBattleMechanicusCardInfo history_card_list = 11;
  uint32 max_escape_monster_num = 10;
  uint32 building_stage_duration = 4;
  uint64 duration_ms = 8;
  InBattleMechanicusStageType stage = 9;
  uint32 total_round = 12;
  repeated InBattleMechanicusMonsterInfo monster_list = 14;
  uint32 escaped_monster_num = 6;
  uint32 round = 3;
  repeated InBattleMechanicusCardInfo pick_card_list = 15;
  repeated InBattleMechanicusPlayerInfo player_list = 7;
  uint64 wait_begin_time_us = 1;
  uint64 begin_time_ms = 2;
}

// CmdId: 5321
// EnetChannelId: 0
// EnetIsReliable: true
message InBattleMechanicusLeftMonsterNotify {
  uint32 left_monster = 14;
}

message InBattleMechanicusMonsterInfo {
  uint32 monster_id = 1;
  uint32 level = 14;
  uint32 count = 13;
}

// CmdId: 5399
// EnetChannelId: 0
// EnetIsReliable: true
message InBattleMechanicusPickCardNotify {
  uint32 player_uid = 6;
  uint32 group_id = 7;
  uint32 play_index = 8;
  uint32 card_id = 10;
}

// CmdId: 5390
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message InBattleMechanicusPickCardReq {
  uint32 group_id = 11;
  uint32 play_index = 7;
  uint32 card_id = 1;
}

// CmdId: 5373
// EnetChannelId: 0
// EnetIsReliable: true
message InBattleMechanicusPickCardRsp {
  int32 retcode = 11;
  uint32 card_id = 2;
  uint32 play_index = 4;
  uint32 group_id = 9;
}


message InBattleMechanicusPlayerInfo {
  uint32 pick_card_id = 5;
  uint32 uid = 14;
  repeated InBattleMechanicusBuildingInfo building_list = 4;
  bool is_card_confirmed = 13;
  uint32 building_points = 3;
}


message InBattleMechanicusSettleInfo {
  uint64 scene_time_ms = 15;
  uint32 total_token = 4;
  uint32 real_token = 8;
  repeated MultistageSettleWatcherInfo watcher_list = 7;
  bool is_success = 6;
  uint32 play_index = 3;
  uint32 difficulty_percentage = 10;
  uint32 group_id = 13;
}


// CmdId: 5305
// EnetChannelId: 0
// EnetIsReliable: true
message InBattleMechanicusSettleNotify {
  uint32 group_id = 15;
  uint64 scene_time_ms = 11;
  uint32 difficulty_percentage = 6;
  uint32 total_token = 7;
  repeated MultistageSettleWatcherInfo watcher_list = 3;
  uint32 real_token = 13;
  bool is_success = 2;
  uint32 play_index = 14;
}

enum InBattleMechanicusStageType {
  IN_BATTLE_MECHANICUS_STAGE_TYPE_NONE = 0;
  IN_BATTLE_MECHANICUS_STAGE_TYPE_BUILD = 1;
  IN_BATTLE_MECHANICUS_STAGE_TYPE_CARD_FLIP = 2;
  IN_BATTLE_MECHANICUS_STAGE_TYPE_KILL = 3;
}

enum InterOpType {
  INTER_OP_TYPE_FINISH = 0;
  INTER_OP_TYPE_START = 1;
}

// CmdId: 919
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message InteractDailyDungeonInfoNotify {}

enum InteractType {
  INTERACT_TYPE_NONE = 0;
  INTERACT_TYPE_PICK_ITEM = 1;
  INTERACT_TYPE_GATHER = 2;
  INTERACT_TYPE_OPEN_CHEST = 3;
  INTERACT_TYPE_OPEN_STATUE = 4;
  INTERACT_TYPE_CONSUM = 5;
  INTERACT_TYPE_MP_PLAY_REWARD = 6;
  INTERACT_TYPE_VIEW = 7;
  INTERACT_TYPE_GENERAL_REWARD = 8;
  INTERACT_TYPE_MIRACLE_RING = 9;
  INTERACT_TYPE_FOUNDATION = 10;
  INTERACT_TYPE_ECHO_SHELL = 11;
  INTERACT_TYPE_HOME_GATHER = 12;
  INTERACT_TYPE_ENV_ANIMAL = 13;
  INTERACT_TYPE_QUEST_GADGET = 14;
  INTERACT_TYPE_Unk2700_LIEIKFDFMGF = 15;
}

// CmdId: 5548
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message InterruptGalleryReq {
  uint32 gallery_id = 13;
}

// CmdId: 5597
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message InterruptGalleryRsp {
  int32 retcode = 12;
  uint32 gallery_id = 9;
}

message Investigation {
  uint32 total_progress = 5;
  State state = 2;
  uint32 progress = 13;
  uint32 id = 9;
  enum State {
    STATE_INVALID = 0;
    STATE_IN_PROGRESS = 1;
    STATE_COMPLETE = 2;
    STATE_REWARD_TAKEN = 3;
  }
}


message InvestigationMonster {
  bool is_alive = 9;
  uint32 refresh_interval = 3;
  uint32 id = 13;
  uint32 level = 5;
  uint32 boss_chest_num = 1;
  WeeklyBossResinDiscountInfo weekly_boss_resin_discount_info = 12;
  uint32 monster_id = 301;
  Vector pos = 14;
  uint32 resin = 8;
  uint32 max_boss_chest_num = 4;
  uint32 next_refresh_time = 11;
  uint32 group_id = 285;
  uint32 scene_id = 10;
  bool is_area_locked = 15;
  LockState lock_state = 2;
  uint32 next_boss_chest_refresh_time = 7;
  uint32 city_id = 6;
  enum LockState {
    LOCK_STATE_NONE = 0;
    LOCK_STATE_QUEST = 1;
  }
}


// CmdId: 1906
// EnetChannelId: 0
// EnetIsReliable: true
message InvestigationMonsterUpdateNotify {
  InvestigationMonster investigation_monster = 5;
}

message InvestigationTarget {
  uint32 quest_id = 15;
  State state = 2;
  uint32 progress = 8;
  uint32 total_progress = 7;
  uint32 investigation_id = 3;
  enum State {
    STATE_INVALID = 0;
    STATE_IN_PROGRESS = 1;
    STATE_COMPLETE = 2;
    STATE_REWARD_TAKEN = 3;
  }
}



message IrodoriActivityDetailInfo {
  repeated Unk2700_JACACCPGMGC Unk2700_KLDGOEPJGNC = 11;
  Unk2700_GCPNGHFNGDP Unk2700_BFPBLJAAPAL = 6;
  Unk2700_AIGECAPPCKK Unk2700_AGGJBDLONGC = 8;
  Unk2700_AMJFIJNNGHC Unk2700_MCMCCIEFMPD = 14;
}


message IrodoriChessInfo {
  Unk2700_IBEKDNOGMLA mystery_info = 3;
  uint32 left_monsters = 12;
  repeated uint32 Unk2700_MABMPAAGHCJ = 13;
  uint32 building_points = 7;
  uint32 Unk2700_CDOKENJJJMH = 4;
}

message IrodoriChessSettleInfo {
  bool is_new_record = 5;
  bool Unk2700_PFEDPLKKLGH = 2;
  uint64 scene_time_ms = 1;
  uint32 Unk2700_CDOKENJJJMH = 3;
  bool is_perfect = 12;
  uint32 kill_monster_num = 7;
}


message IslandPartyActivityDetailInfo {
  repeated Unk2800_MBKLJLMLIKF Unk2800_PDBHCBCLFBM = 15;
}


message Item {
  uint32 item_id = 1;
  uint64 guid = 2;
  oneof detail {
    Material material = 5;
    Equip equip = 6;
    Furniture furniture = 7;
  }
}


// CmdId: 607
// EnetChannelId: 0
// EnetIsReliable: true
message ItemAddHintNotify {
  bool is_position_valid = 14;
  uint32 quest_id = 3;
  uint32 reason = 6;
  bool is_general_reward_hiden = 15;
  repeated ItemHint item_list = 10;
  bool is_transfered_from_avatar_card = 12;
  Vector position = 9;
  repeated ItemHint overflow_transformed_item_list = 8;
}

// CmdId: 634
// EnetChannelId: 0
// EnetIsReliable: true
message ItemCdGroupTimeNotify {
  map<uint32, uint64> item_cd_map = 9;
}


// CmdId: 140
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ItemGivingReq {
  map<uint64, uint32> item_guid_count_map = 15;
  uint32 giving_id = 13;
  repeated ItemParam item_param_list = 4;
  Unk2800_LENCDFJACFN Unk2800_PHNIJJMECGN = 2;
  enum Unk2800_LENCDFJACFN {
    Unk2800_LENCDFJACFN_QUEST = 0;
    Unk2800_LENCDFJACFN_Unk2800_HHHOPEHIPFG = 1;
  }
}

// CmdId: 118
// EnetChannelId: 0
// EnetIsReliable: true
message ItemGivingRsp {
  uint32 Unk2700_MHIPHDFEOON = 1;
  uint32 giving_id = 13;
  int32 retcode = 3;
}

message ItemHint {
  uint32 item_id = 8;
  bool is_new = 2;
  uint32 count = 15;
  uint64 guid = 4;
}

message ItemParam {
  uint32 item_id = 1;
  uint32 count = 2;
}

// CmdId: 4530
// EnetChannelId: 0
// EnetIsReliable: true
message JoinHomeWorldFailNotify {
  uint32 target_uid = 6;
  int32 retcode = 13;
}

// CmdId: 236
// EnetChannelId: 0
// EnetIsReliable: true
message JoinPlayerFailNotify {
  int32 retcode = 11;
}

// CmdId: 292
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message JoinPlayerSceneReq {
  uint32 target_uid = 12;
}

// CmdId: 220
// EnetChannelId: 0
// EnetIsReliable: true
message JoinPlayerSceneRsp {
  int32 retcode = 10;
}

// CmdId: 72
// EnetChannelId: 0
// EnetIsReliable: true
message KeepAliveNotify {}

enum LanguageType {
  LANGUAGE_TYPE_NONE = 0;
  LANGUAGE_TYPE_EN = 1;
  LANGUAGE_TYPE_SC = 2;
  LANGUAGE_TYPE_TC = 3;
  LANGUAGE_TYPE_FR = 4;
  LANGUAGE_TYPE_DE = 5;
  LANGUAGE_TYPE_ES = 6;
  LANGUAGE_TYPE_PT = 7;
  LANGUAGE_TYPE_RU = 8;
  LANGUAGE_TYPE_JP = 9;
  LANGUAGE_TYPE_KR = 10;
  LANGUAGE_TYPE_TH = 11;
  LANGUAGE_TYPE_VN = 12;
  LANGUAGE_TYPE_ID = 13;
  LANGUAGE_TYPE_Unk2700_IBFJDMFLFII = 14;
  LANGUAGE_TYPE_Unk2700_PACIPAIFJCN = 15;
}


message LanternRiteActivityDetailInfo {
  Unk2700_JCNIPOJMFMH Unk2700_ONOHODJPIGK = 13;
  repeated Unk2700_LLGDCAKMCKL Unk2700_PHKHIPLDOOA = 5;
  Unk2700_MJGFEHOMKJE Unk2700_MPOCLGBFNAK = 8;
  bool Unk2700_KGGCKHBIOED = 2;
  bool is_content_closed = 14;
  bool Unk2700_EOGEAIHJPFD = 6;
}

// CmdId: 298
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message LeaveSceneReq {}

// CmdId: 212
// EnetChannelId: 0
// EnetIsReliable: true
message LeaveSceneRsp {
  int32 retcode = 3;
}

// CmdId: 3017
// EnetChannelId: 0
// EnetIsReliable: true
message LeaveWorldNotify {}

// CmdId: 216
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message LevelupCityReq {
  uint32 scene_id = 5;
  uint32 area_id = 3;
  uint32 item_num = 14;
}


// CmdId: 287
// EnetChannelId: 0
// EnetIsReliable: true
message LevelupCityRsp {
  uint32 area_id = 9;
  int32 retcode = 3;
  uint32 scene_id = 4;
  CityInfo city_info = 6;
}


// CmdId: 1298
// EnetChannelId: 0
// EnetIsReliable: true
message LifeStateChangeNotify {
  uint32 entity_id = 4;
  repeated ServerBuff server_buff_list = 6;
  string attack_tag = 7;
  uint32 move_reliable_seq = 15;
  PlayerDieType die_type = 14;
  uint32 life_state = 5;
  uint32 source_entity_id = 1;
}

// CmdId: 806
// EnetChannelId: 0
// EnetIsReliable: true
message LiveEndNotify {
  uint32 live_id = 5;
}

// CmdId: 826
// EnetChannelId: 0
// EnetIsReliable: true
message LiveStartNotify {
  uint32 live_id = 2;
}

// CmdId: 2029
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message LoadActivityTerrainNotify {
  uint32 activity_id = 3;
}

message LockedPersonallineData {
  LockReason lock_reason = 2;
  uint32 personal_line_id = 13;
  oneof param {
    uint32 chapter_id = 3;
    uint32 level = 1;
  }
  enum LockReason {
    LOCK_REASON_LEVEL = 0;
    LOCK_REASON_QUEST = 1;
  }
}

// CmdId: 3408
// EnetChannelId: 0
// EnetIsReliable: true
message LuaEnvironmentEffectNotify {
  uint32 type = 1;
  repeated int32 int_param_list = 12;
  string effect_alias = 3;
  repeated float float_param_list = 14;
}

// CmdId: 316
// EnetChannelId: 0
// EnetIsReliable: true
message LuaSetOptionNotify {
  string lua_set_param = 8;
  LuaOptionType option_type = 10;
  enum LuaOptionType {
    LUA_OPTION_TYPE_NONE = 0;
    LUA_OPTION_TYPE_PLAYER_INPUT = 1;
  }
}

message LuminanceStoneChallengeActivityDetailInfo {
  uint32 best_score = 11;
  bool is_content_closed = 6;
  bool Unk2700_CKGMNLPDFCI = 12;
  uint32 Unk2700_NNLBIAFMHPA = 15;
}

// CmdId: 8213
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message LunaRiteAreaFinishNotify {
  uint32 area_id = 2;
}


message LunaRiteAreaInfo {
  repeated uint32 sacrifice_list = 11;
  LunaRiteHintStatusType hint_status = 7;
  repeated uint32 sacrifice_reward_list = 4;
  uint32 area_id = 8;
  uint32 challenge_index = 6;
}


message LunaRiteDetailInfo {
  repeated LunaRiteHintPoint hint_point = 3;
  repeated LunaRiteAreaInfo area_info_list = 13;
}

// CmdId: 8465
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message LunaRiteGroupBundleRegisterNotify {
  uint32 group_link_bundle_id = 11;
}


message LunaRiteHintPoint {
  uint32 area_id = 11;
  uint32 index = 7;
  LunaRiteHintPointType type = 2;
  Vector pos = 10;
}

// CmdId: 8787
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message LunaRiteHintPointRemoveNotify {
  repeated uint32 hint_point_index = 14;
}

// CmdId: 8195
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message LunaRiteHintPointReq {
  uint32 area_id = 13;
}


// CmdId: 8765
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message LunaRiteHintPointRsp {
  LunaRiteHintStatusType hint_status = 4;
  uint32 area_id = 5;
  int32 retcode = 13;
  repeated LunaRiteHintPoint hint_point = 9;
}

enum LunaRiteHintPointType {
  LUNA_RITE_HINT_POINT_TYPE_NONE = 0;
  LUNA_RITE_HINT_POINT_TYPE_RUNE = 1;
  LUNA_RITE_HINT_POINT_TYPE_CHEST = 2;
}

enum LunaRiteHintStatusType {
  LUNA_RITE_HINT_STATUS_TYPE_DEFAULT = 0;
  LUNA_RITE_HINT_STATUS_TYPE_NO_COUNT = 1;
  LUNA_RITE_HINT_STATUS_TYPE_FINISH = 2;
}

// CmdId: 8805
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message LunaRiteSacrificeReq {
  uint32 area_id = 15;
  uint32 index = 14;
}

// CmdId: 8080
// EnetChannelId: 0
// EnetIsReliable: true
message LunaRiteSacrificeRsp {
  uint32 area_id = 13;
  repeated uint32 sacrifice_list = 14;
  uint32 index = 8;
  int32 retcode = 9;
}

// CmdId: 8045
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message LunaRiteTakeSacrificeRewardReq {
  uint32 area_id = 11;
  uint32 index = 3;
}

// CmdId: 8397
// EnetChannelId: 0
// EnetIsReliable: true
message LunaRiteTakeSacrificeRewardRsp {
  uint32 index = 11;
  repeated uint32 sacrifice_reward_list = 2;
  uint32 sacrifice_reward_index = 14;
  uint32 area_id = 6;
  int32 retcode = 12;
}

message LunchBoxData {
  map<uint32, uint32> slot_material_map = 3;
}


message MPLevelEntityInfo {
  AbilitySyncStateInfo ability_info = 2;
  uint32 entity_id = 11;
  uint32 authority_peer_id = 3;
}


// CmdId: 1498
// EnetChannelId: 0
// EnetIsReliable: true
message MailChangeNotify {
  repeated MailData mail_list = 14;
  repeated uint32 del_mail_id_list = 8;
}


message MailData {
  uint32 mail_id = 1;
  MailTextContent mail_text_content = 4;
  repeated MailItem item_list = 7;
  uint32 send_time = 8;
  uint32 expire_time = 9;
  uint32 importance = 10;
  bool is_read = 11;
  bool is_attachment_got = 12;
  uint32 config_id = 13;
  repeated string argument_list = 14;
  Unk2700_CBJEDMGOBPL Unk2700_NDPPGJKJOMH = 15;
}


message MailItem {
  EquipParam equip_param = 1;
  MaterialDeleteInfo delete_info = 2;
}

message MailTextContent {
  string title = 1;
  string content = 2;
  string sender = 3;
}

message MainCoop {
  map<uint32, uint32> seen_ending_map = 13;
  map<uint32, int32> normal_var_map = 4;
  uint32 self_confidence = 5;
  repeated uint32 save_point_id_list = 1;
  Status status = 6;
  map<uint32, int32> temp_var_map = 11;
  uint32 id = 9;
  enum Status {
    STATUS_INVALID = 0;
    STATUS_RUNNING = 1;
    STATUS_FINISHED = 2;
  }
}


// CmdId: 1968
// EnetChannelId: 0
// EnetIsReliable: true
message MainCoopUpdateNotify {
  repeated MainCoop main_coop_list = 5;
}


// CmdId: 3378
// EnetChannelId: 0
// EnetIsReliable: true
message MapAreaChangeNotify {
  repeated MapAreaInfo map_area_info_list = 3;
}

message MapAreaInfo {
  uint32 map_area_id = 1;
  bool is_open = 2;
}


message MapInfo {
  int32 minx = 1;
  int32 maxx = 2;
  int32 minz = 3;
  int32 maxz = 4;
  repeated CellInfo cells = 5;
}

enum MapMarkFromType {
  MAP_MARK_FROM_TYPE_NONE = 0;
  MAP_MARK_FROM_TYPE_MONSTER = 1;
  MAP_MARK_FROM_TYPE_QUEST = 2;
}


message MapMarkPoint {
  uint32 scene_id = 1;
  string name = 2;
  Vector pos = 3;
  MapMarkPointType point_type = 4;
  uint32 monster_id = 5;
  MapMarkFromType from_type = 6;
  uint32 quest_id = 7;
}

enum MapMarkPointType {
  MAP_MARK_POINT_TYPE_NPC = 0;
  MAP_MARK_POINT_TYPE_QUEST = 1;
  MAP_MARK_POINT_TYPE_SPECIAL = 2;
  MAP_MARK_POINT_TYPE_MINE = 3;
  MAP_MARK_POINT_TYPE_COLLECTION = 4;
  MAP_MARK_POINT_TYPE_MONSTER = 5;
  MAP_MARK_POINT_TYPE_FISH_POOL = 6;
}


message MapMarkTipsInfo {
  MapMarkTipsType tips_type = 1;
  repeated uint32 point_id_list = 2;
}

enum MapMarkTipsType {
  MAP_MARK_TIPS_TYPE_DUNGEON_ELEMENT_TRIAL = 0;
}


// CmdId: 202
// EnetChannelId: 0
// EnetIsReliable: true
message MarkEntityInMinMapNotify {
  Vector position = 4;
  uint32 monster_id = 7;
  uint32 entity_id = 14;
}


// CmdId: 3466
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MarkMapReq {
  MapMarkPoint mark = 8;
  MapMarkPoint old = 6;
  Operation op = 9;
  enum Operation {
    OPERATION_ADD = 0;
    OPERATION_MOD = 1;
    OPERATION_DEL = 2;
    OPERATION_GET = 3;
  }
}


// CmdId: 3079
// EnetChannelId: 0
// EnetIsReliable: true
message MarkMapRsp {
  repeated MapMarkPoint mark_list = 8;
  int32 retcode = 11;
}

// CmdId: 1275
// EnetChannelId: 0
// EnetIsReliable: true
message MarkNewNotify {
  repeated uint32 id_list = 7;
  uint32 mark_new_type = 11;
}

// CmdId: 1915
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MarkTargetInvestigationMonsterNotify {
  uint32 scene_id = 11;
  uint32 monster_id = 4;
  uint32 group_id = 5;
  uint32 investigation_monster_id = 12;
}


message MassiveBoxInfo {
  int32 id = 1;
  uint32 config_id = 2;
  Vector center = 3;
  Vector extents = 4;
  Vector up = 5;
  Vector forward = 6;
  Vector right = 7;
}


// CmdId: 357
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MassiveEntityElementOpBatchNotify {
  int32 entity_type = 6;
  uint32 op_idx = 9;
  uint32 user_id = 11;
  uint32 attacker_id = 3;
  int32 source_element_type = 12;
  int32 reaction_source_type = 4;
  float attack_element_durability = 7;
  oneof check_shape {
    ShapeSphere shape_sphere = 10;
    ShapeBox shape_box = 2;
  }
}

message MassiveEntityState {
  uint32 entity_type = 1;
  int64 obj_id = 2;
  uint32 element_state = 3;
}


// CmdId: 370
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MassiveEntityStateChangedNotify {
  repeated MassiveEntityState massive_entity_state_list = 4;
}


message MassiveGrassInfo {
  uint32 id = 1;
  Vector center = 2;
  Vector size = 3;
}

message MassivePropParam {
  int32 type = 1;
  repeated uint32 reaction_info_list = 2;
  repeated float param_list = 3;
  uint32 sync_flag = 4;
}


message MassivePropSyncInfo {
  int64 id = 1;
  repeated MassivePropParam prop_list = 2;
}

message MassiveWaterInfo {
  int64 id = 1;
}


message MatchPlayerInfo {
  bool is_agreed = 9;
  OnlinePlayerInfo player_info = 2;
}

enum MatchReason {
  MATCH_REASON_NONE = 0;
  MATCH_REASON_FINISH = 1;
  MATCH_REASON_PLAYER_CANCEL = 2;
  MATCH_REASON_TIMEOUT = 3;
  MATCH_REASON_PLAYER_CONFIRM = 4;
  MATCH_REASON_FAILED = 5;
  MATCH_REASON_SYSTEM_ERROR = 6;
  MATCH_REASON_INTERRUPTED = 7;
  MATCH_REASON_MP_UNAVAILABLE = 8;
  MATCH_REASON_CONFIRM_TIMEOUT = 9;
}

enum MatchType {
  MATCH_TYPE_NONE = 0;
  MATCH_TYPE_DUNGEON = 1;
  MATCH_TYPE_MP_PLAY = 2;
  MATCH_TYPE_MECHANICUS = 3;
  MATCH_TYPE_GENERAL = 4;
}


message Material {
  uint32 count = 1;
  MaterialDeleteInfo delete_info = 2;
}

message MaterialDeleteInfo {
  bool has_delete_config = 1;
  oneof delete_info {
    CountDownDelete count_down_delete = 2;
    DateTimeDelete date_delete = 3;
    DelayWeekCountDownDelete delay_week_count_down_delete = 4;
  }
  message CountDownDelete {
    map<uint32, uint32> delete_time_num_map = 1;
    uint32 config_count_down_time = 2;
  }
  message DateTimeDelete {
    uint32 delete_time = 1;
  }
  message DelayWeekCountDownDelete {
    map<uint32, uint32> delete_time_num_map = 1;
    uint32 config_delay_week = 2;
    uint32 config_count_down_time = 3;
  }
}


// CmdId: 661
// EnetChannelId: 0
// EnetIsReliable: true
message MaterialDeleteReturnNotify {
  map<uint32, uint32> return_item_map = 5;
  MaterialDeleteReturnType type = 8;
  map<uint32, uint32> delete_material_map = 6;
}

enum MaterialDeleteReturnType {
  MATERIAL_DELETE_RETURN_TYPE_BAG = 0;
  MATERIAL_DELETE_RETURN_TYPE_SEED = 1;
}

// CmdId: 700
// EnetChannelId: 0
// EnetIsReliable: true
message MaterialDeleteUpdateNotify {}

message MaterialInfo {
  uint32 count = 11;
  uint64 guid = 5;
}

message MathQuaternion {
  float x = 1;
  float y = 2;
  float z = 3;
  float w = 4;
}

// CmdId: 616
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message McoinExchangeHcoinReq {
  uint32 hcoin = 5;
  uint32 mcoin_cost = 1;
}

// CmdId: 687
// EnetChannelId: 0
// EnetIsReliable: true
message McoinExchangeHcoinRsp {
  uint32 mcoin_cost = 8;
  uint32 hcoin = 7;
  int32 retcode = 4;
}

// CmdId: 3981
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MechanicusCandidateTeamCreateReq {
  uint32 difficult_level = 6;
}

// CmdId: 3905
// EnetChannelId: 0
// EnetIsReliable: true
message MechanicusCandidateTeamCreateRsp {
  uint32 dungeon_id = 1;
  int32 retcode = 7;
  uint32 difficult_level = 10;
}

// CmdId: 3921
// EnetChannelId: 0
// EnetIsReliable: true
message MechanicusCloseNotify {
  uint32 mechanicus_id = 6;
}

// CmdId: 3935
// EnetChannelId: 0
// EnetIsReliable: true
message MechanicusCoinNotify {
  uint32 mechanicus_id = 7;
  uint32 coin = 4;
}


message MechanicusInfo {
  repeated Uint32Pair gear_level_pair_list = 14;
  repeated uint32 open_sequence_id_list = 7;
  uint32 coin = 8;
  uint32 punish_over_time = 12;
  uint32 mechanicus_id = 10;
  repeated uint32 finish_difficult_level_list = 13;
  bool is_finish_teach_dungeon = 4;
}

// CmdId: 3973
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MechanicusLevelupGearReq {
  uint32 gear_id = 14;
  uint32 mechanicus_id = 12;
}

// CmdId: 3999
// EnetChannelId: 0
// EnetIsReliable: true
message MechanicusLevelupGearRsp {
  uint32 gear_id = 7;
  uint32 mechanicus_id = 2;
  uint32 after_gear_level = 12;
  int32 retcode = 8;
}

// CmdId: 3907
// EnetChannelId: 0
// EnetIsReliable: true
message MechanicusOpenNotify {
  uint32 mechanicus_id = 2;
}

// CmdId: 3912
// EnetChannelId: 0
// EnetIsReliable: true
message MechanicusSequenceOpenNotify {
  uint32 mechanicus_id = 8;
  uint32 sequence_id = 7;
}

// CmdId: 3903
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MechanicusUnlockGearReq {
  uint32 mechanicus_id = 7;
  uint32 gear_id = 6;
}

// CmdId: 3990
// EnetChannelId: 0
// EnetIsReliable: true
message MechanicusUnlockGearRsp {
  int32 retcode = 3;
  uint32 mechanicus_id = 8;
  uint32 gear_id = 14;
}

// CmdId: 503
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MeetNpcReq {
  uint32 npc_id = 4;
}

// CmdId: 590
// EnetChannelId: 0
// EnetIsReliable: true
message MeetNpcRsp {
  int32 retcode = 14;
  uint32 npc_first_met_id = 8;
}

// CmdId: 521
// EnetChannelId: 0
// EnetIsReliable: true
message MetNpcIdListNotify {
  repeated uint32 npc_first_met_id_list = 9;
}


message MichiaeMatsuriActivityDetailInfo {
  repeated Unk2700_HGFFGMCODNC Unk2700_MPNNMCPOLAM = 6;
  uint32 Unk2700_MAOAHHBCKIA = 13;
  repeated uint32 Unk2700_BEHAAHHGCLK = 2;
  repeated Unk2700_NAFAIMHFEFG Unk2700_LEKHKNKHIPO = 10;
  repeated MichiaeMatsuriStage stage_list = 14;
}

message MichiaeMatsuriStage {
  bool is_open = 11;
  uint32 open_time = 5;
  uint32 stage_id = 12;
}

// CmdId: 5225
// EnetChannelId: 0
// EnetIsReliable: true
message MiracleRingDataNotify {
  bool is_gadget_created = 8;
  uint32 last_take_reward_time = 14;
  uint32 gadget_entity_id = 12;
  uint32 last_deliver_item_time = 10;
  uint32 miracle_ring_cd = 7;
}


// CmdId: 5229
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MiracleRingDeliverItemReq {
  InterOpType op_type = 9;
  repeated ItemParam item_param_list = 1;
  repeated uint64 food_weapon_guid_list = 4;
  uint32 gadget_id = 14;
  uint32 gadget_entity_id = 5;
}


// CmdId: 5222
// EnetChannelId: 0
// EnetIsReliable: true
message MiracleRingDeliverItemRsp {
  InteractType interact_type = 15;
  int32 retcode = 11;
  InterOpType op_type = 14;
  uint32 gadget_id = 4;
  uint32 gadget_entity_id = 9;
}

// CmdId: 5244
// EnetChannelId: 0
// EnetIsReliable: true
message MiracleRingDestroyNotify {
  uint32 entity_id = 7;
}

// CmdId: 5231
// EnetChannelId: 0
// EnetIsReliable: true
message MiracleRingDropResultNotify {
  int32 last_take_reward_time = 5;
  int32 drop_result = 9;
}

// CmdId: 5207
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MiracleRingTakeRewardReq {
  uint32 gadget_id = 11;
  uint32 gadget_entity_id = 7;
}

// CmdId: 5202
// EnetChannelId: 0
// EnetIsReliable: true
message MiracleRingTakeRewardRsp {
  int32 retcode = 14;
}


message MistTrialActivityDetailInfo {
  repeated MistTrialLevelData trial_level_data_list = 5;
}

// CmdId: 8135
// EnetChannelId: 0
// EnetIsReliable: true
message MistTrialDunegonFailNotify {
  int32 dungeon_id = 9;
}

// CmdId: 8893
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MistTrialGetChallengeMissionReq {
  uint32 trial_id = 9;
}


// CmdId: 8508
// EnetChannelId: 0
// EnetIsReliable: true
message MistTrialGetChallengeMissionRsp {
  uint32 trial_id = 1;
  repeated MistTrialMissionInfo mission_info_list = 15;
  int32 retcode = 11;
}

message MistTrialLevelData {
  uint32 open_time = 1;
  bool is_open = 12;
  uint32 level_id = 7;
}

message MistTrialMissionInfo {
  uint32 param = 9;
  uint32 watcher_list_id = 13;
}

// CmdId: 8666
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MistTrialSelectAvatarAndEnterDungeonReq {
  uint32 trial_id = 4;
  repeated uint32 select_trial_avatar_id_list = 10;
  uint32 enter_point_id = 7;
}

// CmdId: 8239
// EnetChannelId: 0
// EnetIsReliable: true
message MistTrialSelectAvatarAndEnterDungeonRsp {
  uint32 trial_id = 1;
  int32 retcode = 2;
}

enum ModifierAction {
  MODIFIER_ACTION_ADDED = 0;
  MODIFIER_ACTION_REMOVED = 1;
}

message ModifierDurability {
  float reduce_ratio = 1;
  float remaining_durability = 2;
}


message ModifierProperty {
  AbilityString key = 15;
  float value = 5;
}

// CmdId: 3039
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MonsterAIConfigHashNotify {
  uint32 job_id = 10;
  uint32 entity_id = 15;
  int32 hash_value = 11;
}

// CmdId: 363
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MonsterAlertChangeNotify {
  uint32 avatar_entity_id = 15;
  repeated uint32 monster_entity_list = 5;
  uint32 is_alert = 13;
}

enum MonsterBornType {
  MONSTER_BORN_TYPE_NONE = 0;
  MONSTER_BORN_TYPE_DEFAULT = 1;
  MONSTER_BORN_TYPE_RANDOM = 2;
}

// CmdId: 395
// EnetChannelId: 0
// EnetIsReliable: true
message MonsterForceAlertNotify {
  uint32 monster_entity_id = 13;
}


// CmdId: 3410
// EnetChannelId: 0
// EnetIsReliable: true
message MonsterPointArrayRouteUpdateNotify {
  uint32 entity_id = 7;
  MonsterRoute monster_route = 5;
}


message MonsterRoute {
  repeated RoutePoint route_points = 1;
  uint32 speed_level = 2;
  uint32 route_type = 3;
  float arrive_range = 4;
}

// CmdId: 1372
// EnetChannelId: 0
// EnetIsReliable: true
message MonsterSummonTagNotify {
  map<uint32, uint32> summon_tag_map = 1;
  uint32 monster_entity_id = 8;
}


message MoonfinTrialActivityDetailInfo {
  map<uint32, MoonfinTrialLevelInfo> level_info_map = 5;
  uint32 special_fish_count = 11;
}

message MoonfinTrialLevelInfo {
  uint32 best_record = 3;
  uint32 open_time = 1;
}


message MotionInfo {
  Vector pos = 1;
  Vector rot = 2;
  Vector speed = 3;
  MotionState state = 4;
  repeated Vector params = 5;
  Vector ref_pos = 6;
  uint32 ref_id = 7;
  uint32 scene_time = 8;
  uint64 interval_velocity = 9;
}

enum MotionState {
  MOTION_STATE_NONE = 0;
  MOTION_STATE_RESET = 1;
  MOTION_STATE_STANDBY = 2;
  MOTION_STATE_STANDBY_MOVE = 3;
  MOTION_STATE_WALK = 4;
  MOTION_STATE_RUN = 5;
  MOTION_STATE_DASH = 6;
  MOTION_STATE_CLIMB = 7;
  MOTION_STATE_CLIMB_JUMP = 8;
  MOTION_STATE_STANDBY_TO_CLIMB = 9;
  MOTION_STATE_FIGHT = 10;
  MOTION_STATE_JUMP = 11;
  MOTION_STATE_DROP = 12;
  MOTION_STATE_FLY = 13;
  MOTION_STATE_SWIM_MOVE = 14;
  MOTION_STATE_SWIM_IDLE = 15;
  MOTION_STATE_SWIM_DASH = 16;
  MOTION_STATE_SWIM_JUMP = 17;
  MOTION_STATE_SLIP = 18;
  MOTION_STATE_GO_UPSTAIRS = 19;
  MOTION_STATE_FALL_ON_GROUND = 20;
  MOTION_STATE_JUMP_UP_WALL_FOR_STANDBY = 21;
  MOTION_STATE_JUMP_OFF_WALL = 22;
  MOTION_STATE_POWERED_FLY = 23;
  MOTION_STATE_LADDER_IDLE = 24;
  MOTION_STATE_LADDER_MOVE = 25;
  MOTION_STATE_LADDER_SLIP = 26;
  MOTION_STATE_STANDBY_TO_LADDER = 27;
  MOTION_STATE_LADDER_TO_STANDBY = 28;
  MOTION_STATE_DANGER_STANDBY = 29;
  MOTION_STATE_DANGER_STANDBY_MOVE = 30;
  MOTION_STATE_DANGER_WALK = 31;
  MOTION_STATE_DANGER_RUN = 32;
  MOTION_STATE_DANGER_DASH = 33;
  MOTION_STATE_CROUCH_IDLE = 34;
  MOTION_STATE_CROUCH_MOVE = 35;
  MOTION_STATE_CROUCH_ROLL = 36;
  MOTION_STATE_NOTIFY = 37;
  MOTION_STATE_LAND_SPEED = 38;
  MOTION_STATE_MOVE_FAIL_ACK = 39;
  MOTION_STATE_WATERFALL = 40;
  MOTION_STATE_DASH_BEFORE_SHAKE = 41;
  MOTION_STATE_SIT_IDLE = 42;
  MOTION_STATE_FORCE_SET_POS = 43;
  MOTION_STATE_QUEST_FORCE_DRAG = 44;
  MOTION_STATE_FOLLOW_ROUTE = 45;
  MOTION_STATE_SKIFF_BOARDING = 46;
  MOTION_STATE_SKIFF_NORMAL = 47;
  MOTION_STATE_SKIFF_DASH = 48;
  MOTION_STATE_SKIFF_POWERED_DASH = 49;
  MOTION_STATE_DESTROY_VEHICLE = 50;
  MOTION_STATE_FLY_IDLE = 51;
  MOTION_STATE_FLY_SLOW = 52;
  MOTION_STATE_FLY_FAST = 53;
  MOTION_STATE_NUM = 54;
  MOTION_STATE_Unk2700_OOFNNHKLEFE = 55;
  MOTION_STATE_Unk2700_KMIGLMEGNOK = 56;
}

enum MovingPlatformType {
  MOVING_PLATFORM_TYPE_NONE = 0;
  MOVING_PLATFORM_TYPE_USE_CONFIG = 1;
  MOVING_PLATFORM_TYPE_ABILITY = 2;
  MOVING_PLATFORM_TYPE_ROUTE = 3;
}

// CmdId: 1801
// EnetChannelId: 0
// EnetIsReliable: true
message MpBlockNotify {
  uint32 end_time = 13;
}

// CmdId: 1848
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MpPlayGuestReplyInviteReq {
  uint32 mp_play_id = 3;
  bool is_agree = 15;
}

// CmdId: 1850
// EnetChannelId: 0
// EnetIsReliable: true
message MpPlayGuestReplyInviteRsp {
  int32 retcode = 4;
  uint32 mp_play_id = 10;
}

// CmdId: 1812
// EnetChannelId: 0
// EnetIsReliable: true
message MpPlayGuestReplyNotify {
  uint32 uid = 7;
  bool is_agree = 4;
  uint32 mp_play_id = 14;
}

// CmdId: 1815
// EnetChannelId: 0
// EnetIsReliable: true
message MpPlayInviteResultNotify {
  uint32 mp_play_id = 11;
  bool all_argee = 10;
}

// CmdId: 1814
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MpPlayOwnerCheckReq {
  uint32 mp_play_id = 9;
  bool is_skip_match = 3;
}

// CmdId: 1847
// EnetChannelId: 0
// EnetIsReliable: true
message MpPlayOwnerCheckRsp {
  uint32 wrong_uid = 4;
  bool is_skip_match = 15;
  uint32 mp_play_id = 10;
  int32 retcode = 12;
}

// CmdId: 1835
// EnetChannelId: 0
// EnetIsReliable: true
message MpPlayOwnerInviteNotify {
  uint32 cd = 12;
  uint32 mp_play_id = 13;
  bool is_remain_reward = 10;
}

// CmdId: 1837
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MpPlayOwnerStartInviteReq {
  uint32 mp_play_id = 3;
  bool is_skip_match = 6;
}

// CmdId: 1823
// EnetChannelId: 0
// EnetIsReliable: true
message MpPlayOwnerStartInviteRsp {
  int32 retcode = 14;
  uint32 mp_play_id = 3;
  bool is_skip_match = 9;
}

// CmdId: 1813
// EnetChannelId: 0
// EnetIsReliable: true
message MpPlayPrepareInterruptNotify {
  uint32 mp_play_id = 12;
}

// CmdId: 1833
// EnetChannelId: 0
// EnetIsReliable: true
message MpPlayPrepareNotify {
  uint32 mp_play_id = 9;
  uint32 prepare_end_time = 11;
}

message MpPlayRewardInfo {
  uint32 resin = 1;
  repeated uint32 remain_uid_list = 2;
  repeated uint32 qualify_uid_list = 3;
}

enum MpSettingType {
  MP_SETTING_TYPE_NO_ENTER = 0;
  MP_SETTING_TYPE_ENTER_FREELY = 1;
  MP_SETTING_TYPE_ENTER_AFTER_APPLY = 2;
}

message MsgParam {
  oneof param {
    uint32 int_param = 9;
    float flt_param = 7;
    string str_param = 4;
  }
}

// CmdId: 5355
// EnetChannelId: 0
// EnetIsReliable: true
message MultistagePlayEndNotify {
  uint32 group_id = 5;
  uint32 play_index = 13;
}

// CmdId: 5398
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MultistagePlayFinishStageReq {
  uint32 group_id = 12;
  uint32 play_index = 15;
}

// CmdId: 5381
// EnetChannelId: 0
// EnetIsReliable: true
message MultistagePlayFinishStageRsp {
  int32 retcode = 11;
  uint32 group_id = 12;
  uint32 play_index = 6;
}



message MultistagePlayInfo {
  uint32 play_index = 13;
  uint32 play_type = 11;
  uint32 stage_type = 10;
  uint32 duration = 8;
  uint32 group_id = 12;
  uint32 begin_time = 9;
  uint32 stage_index = 1;
  oneof detail {
    InBattleMechanicusInfo mechanicus_info = 1334;
    InBattleFleurFairInfo fleur_fair_info = 1064;
    HideAndSeekStageInfo hide_and_seek_info = 108;
    InBattleChessInfo chess_info = 1758;
    IrodoriChessInfo irodori_chess_info = 531;
  }
}


// CmdId: 5372
// EnetChannelId: 0
// EnetIsReliable: true
message MultistagePlayInfoNotify {
  MultistagePlayInfo info = 13;
}


// CmdId: 5313
// EnetChannelId: 0
// EnetIsReliable: true
message MultistagePlaySettleNotify {
  uint32 play_index = 14;
  uint32 group_id = 4;
  oneof detail {
    InBattleMechanicusSettleInfo mechanicus_settle_info = 1402;
    InBattleChessSettleInfo chess_settle_info = 1283;
    IrodoriChessSettleInfo irodori_chess_settle_info = 612;
  }
}

// CmdId: 5379
// EnetChannelId: 0
// EnetIsReliable: true
message MultistagePlayStageEndNotify {
  uint32 group_id = 15;
  uint32 play_index = 9;
}

message MultistageSettleWatcherInfo {
  uint32 total_progress = 13;
  uint32 cur_progress = 5;
  uint32 watcher_id = 7;
  bool is_inverse = 12;
}

message MusicBriefInfo {
  uint64 Unk2700_JNENCBCGPGO = 5;
  bool Unk2700_OJBPHCIDAEB = 8;
  bool Unk2700_FGCJEGHOKPG = 1;
  uint32 Unk2700_DFIBAIILJHN = 2;
  uint32 Unk2700_MKBNLEKMIMD = 1182;
  uint32 Unk2700_PINGIIAANMO = 12;
  string Unk2700_MONNIDCNDFI = 10;
  uint32 version = 15;
  uint32 Unk2700_GGHNLPMAGME = 3;
  repeated uint32 Unk2700_GDCGOMNBMEO = 1002;
  repeated uint32 Unk2700_JAEONBMBFJJ = 982;
  bool Unk2700_GBCGGDONMCD = 9;
  uint32 Unk2700_LPEKFJBNEJM = 1822;
  bool Unk2700_DNLEGADDHKM = 11;
  uint32 Unk2700_BFMNMPPNBHH = 13;
  uint32 max_score = 14;
  uint32 Unk2700_KAMOCHAKPGP = 576;
  uint32 Unk2700_KLPHBLCIOEC = 7;
  uint64 Unk2700_CEPGMKAHHCD = 4;
  uint32 Unk2700_PMCPLPMJCEC = 6;
}


message MusicGameActivityDetailInfo {
  repeated MusicBriefInfo Unk2700_HMNHCPMFDCP = 4;
  repeated MusicBriefInfo Unk2700_FOFAFGKAEJM = 7;
  map<uint32, MusicGameRecord> music_game_record_map = 8;
}

message MusicGameRecord {
  bool is_unlock = 9;
  uint32 max_score = 11;
  uint32 max_combo = 6;
}

// CmdId: 8892
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MusicGameSettleReq {
  repeated uint32 Unk2700_GDPKOANEDEB = 384;
  uint32 Unk2700_NMHGADLANMM = 795;
  repeated uint32 Unk2700_NNHGOCJLKFH = 4;
  uint32 Unk2700_NCHHEJNFECG = 15;
  uint32 score = 9;
  uint64 Unk2700_CEPGMKAHHCD = 6;
  uint32 Unk2700_MMHHGALFHGA = 13;
  bool Unk2700_CBLIJHDFKHA = 422;
  uint32 max_combo = 5;
  uint32 Unk2700_FBLBGPHMLAL = 1058;
  float speed = 409;
  bool Unk2700_IOKPIKJDEHG = 3;
  uint32 combo = 1;
  uint32 music_basic_id = 7;
  uint32 Unk2700_DIMBABOGNEM = 2;
  uint32 Unk2700_IOMOHEKJJLJ = 1953;
  uint32 correct_hit = 14;
  bool Unk2700_LKJNLDJAGGL = 1285;
}

// CmdId: 8673
// EnetChannelId: 0
// EnetIsReliable: true
message MusicGameSettleRsp {
  int32 retcode = 11;
  uint32 music_basic_id = 5;
  bool is_new_record = 6;
  bool is_unlock_next_level = 2;
  uint64 Unk2700_CEPGMKAHHCD = 10;
}

// CmdId: 8406
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message MusicGameStartReq {
  uint32 music_basic_id = 2;
  bool Unk2700_IOKPIKJDEHG = 11;
  uint64 Unk2700_CEPGMKAHHCD = 3;
}

// CmdId: 8326
// EnetChannelId: 0
// EnetIsReliable: true
message MusicGameStartRsp {
  uint32 music_basic_id = 4;
  int32 retcode = 1;
  uint64 Unk2700_CEPGMKAHHCD = 15;
}


message MusicRecord {
  repeated Unk2700_AAAMOFPACEA Unk2700_MBJFOAGKKDJ = 4;
  uint32 Unk2700_DFIBAIILJHN = 13;
}


// CmdId: 2316
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message NavMeshStatsNotify {
  repeated PbNavMeshStatsInfo infos = 4;
}

// CmdId: 5726
// EnetChannelId: 0
// EnetIsReliable: true
message NormalUidOpNotify {
  uint32 duration = 6;
  repeated uint32 param_list = 4;
  repeated uint32 param_uid_list = 5;
  uint32 param_index = 8;
}


message NpcPositionInfo {
  uint32 npc_id = 1;
  Vector pos = 2;
}

// CmdId: 572
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message NpcTalkReq {
  uint32 entity_id = 8;
  uint32 npc_entity_id = 9;
  uint32 talk_id = 7;
}

// CmdId: 598
// EnetChannelId: 0
// EnetIsReliable: true
message NpcTalkRsp {
  uint32 cur_talk_id = 9;
  uint32 npc_entity_id = 6;
  int32 retcode = 3;
  uint32 entity_id = 13;
}


message ObstacleInfo {
  MathQuaternion rotation = 4;
  int32 obstacle_id = 2;
  Vector center = 14;
  ShapeType shape = 6;
  Vector3Int extents = 12;
  enum ShapeType {
    SHAPE_TYPE_OBSTACLE_SHAPE_CAPSULE = 0;
    SHAPE_TYPE_OBSTACLE_SHAPE_BOX = 1;
  }
}


// CmdId: 2312
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ObstacleModifyNotify {
  repeated int32 remove_obstacle_ids = 9;
  repeated ObstacleInfo add_obstacles = 6;
  uint32 scene_id = 5;
}

message OfferingInfo {
  uint32 offering_id = 1;
}

// CmdId: 2918
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message OfferingInteractReq {
  uint32 offering_id = 9;
}


// CmdId: 2908
// EnetChannelId: 0
// EnetIsReliable: true
message OfferingInteractRsp {
  PlayerOfferingData offering_data = 11;
  int32 retcode = 12;
}


message OneofGatherPointDetectorData {
  Vector hint_center_pos = 7;
  uint32 hint_radius = 14;
  uint32 material_id = 10;
  uint32 config_id = 6;
  uint32 group_id = 13;
  bool is_all_collected = 4;
  bool is_hint_valid = 15;
}


// CmdId: 4297
// EnetChannelId: 0
// EnetIsReliable: true
message OneofGatherPointDetectorDataNotify {
  repeated OneofGatherPointDetectorData oneof_gather_point_detector_data_list = 3;
}


message OnlinePlayerInfo {
  uint32 uid = 1;
  string nickname = 2;
  uint32 player_level = 3;
  uint32 avatar_id = 4;
  MpSettingType mp_setting_type = 5;
  uint32 cur_player_num_in_world = 6;
  uint32 world_level = 7;
  string online_id = 8;
  uint32 name_card_id = 9;
  repeated uint32 blacklist_uid_list = 10;
  string signature = 11;
  ProfilePicture profile_picture = 12;
  string psn_id = 13;
}


// CmdId: 5112
// EnetChannelId: 0
// EnetIsReliable: true
message OpActivityDataNotify {
  repeated OpActivityInfo op_activity_info_list = 15;
}


message OpActivityInfo {
  uint32 activity_id = 2;
  uint32 end_time = 6;
  uint32 begin_time = 5;
  bool is_has_change = 1;
  uint32 schedule_id = 13;
  oneof detail {
    BonusOpActivityInfo bonus_info = 12;
  }
}


// CmdId: 2572
// EnetChannelId: 0
// EnetIsReliable: true
message OpActivityStateNotify {
  repeated uint32 finished_bonus_activity_id_list = 14;
  repeated OpActivityTagBriefInfo opened_op_activity_info_list = 13;
}

message OpActivityTagBriefInfo {
  uint32 config_id = 2;
  bool has_reward = 3;
  uint32 op_activity_type = 11;
}


// CmdId: 5135
// EnetChannelId: 0
// EnetIsReliable: true
message OpActivityUpdateNotify {
  OpActivityInfo op_activity_info = 6;
}

// CmdId: 2703
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message OpenBlossomCircleCampGuideNotify {
  uint32 refresh_id = 7;
  repeated uint32 circle_camp_id_list = 11;
}

// CmdId: 127
// EnetChannelId: 0
// EnetIsReliable: true
message OpenStateChangeNotify {
  map<uint32, uint32> open_state_map = 4;
}

// CmdId: 193
// EnetChannelId: 0
// EnetIsReliable: true
message OpenStateUpdateNotify {
  map<uint32, uint32> open_state_map = 6;
}

// CmdId: 4131
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message OrderDisplayNotify {
  uint32 order_id = 1;
}


// CmdId: 4125
// EnetChannelId: 0
// EnetIsReliable: true
message OrderFinishNotify {
  uint32 order_id = 3;
  uint32 card_product_remain_days = 15;
  repeated ItemParam item_list = 9;
  uint32 add_mcoin = 7;
  string product_id = 6;
}

// CmdId: 4628
// EnetChannelId: 0
// EnetIsReliable: true
message OtherPlayerEnterHomeNotify {
  string nickname = 7;
  Reason reason = 3;
  enum Reason {
    REASON_INVALID = 0;
    REASON_ENTER = 1;
    REASON_LEAVE = 2;
  }
}

message PBNavMeshPoly {
  repeated EdgeType edge_types = 10;
  int32 area = 6;
  repeated int32 vects = 7;
  enum EdgeType {
    EDGE_TYPE_INNER = 0;
    EDGE_TYPE_TILE_BOUND = 1;
    EDGE_TYPE_TILE_BOUND_UNCONNECT = 2;
    EDGE_TYPE_Unk2700_BFOKBOEBPJF = 3;
  }
}


message PBNavMeshTile {
  repeated Vector vecs = 4;
  repeated PBNavMeshPoly polys = 8;
}


// CmdId: 4040
// EnetChannelId: 0
// EnetIsReliable: true
message PSNBlackListNotify {
  repeated FriendBrief psn_blacklist = 11;
}


// CmdId: 4087
// EnetChannelId: 0
// EnetIsReliable: true
message PSNFriendListNotify {
  repeated FriendBrief psn_friend_list = 8;
}

// CmdId: 1841
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PSPlayerApplyEnterMpReq {
  string target_psn_id = 5;
}

// CmdId: 1842
// EnetChannelId: 0
// EnetIsReliable: true
message PSPlayerApplyEnterMpRsp {
  string target_psn_id = 2;
  int32 retcode = 6;
  uint32 param = 10;
}

message PacketHead {
  uint32 packet_id = 1;
  uint32 rpc_id = 2;
  uint32 client_sequence_id = 3;
  uint32 enet_channel_id = 4;
  uint32 enet_is_reliable = 5;
  uint64 sent_ms = 6;
  uint32 user_id = 11;
  uint32 user_ip = 12;
  uint32 user_session_id = 13;
  uint64 recv_time_ms = 21;
  uint32 rpc_begin_time_ms = 22;
  map<uint32, uint32> ext_map = 23;
  uint32 sender_app_id = 24;
  uint32 source_service = 31;
  uint32 target_service = 32;
  map<uint32, uint32> service_app_id_map = 33;
  bool is_set_game_thread = 34;
  uint32 game_thread_index = 35;
}

message ParamList {
  repeated uint32 param_list_ = 1;
}


message ParentQuest {
  ParentQuestRandomInfo random_info = 12;
  uint32 quest_var_seq = 11;
  repeated int32 quest_var = 14;
  uint64 Unk2700_KHDDIJNOICK = 6;
  bool is_random = 13;
  uint32 parent_quest_id = 3;
  bool is_finished = 7;
  map<uint32, uint32> time_var_map = 8;
  uint32 parent_quest_state = 1;
  repeated ChildQuest child_quest_list = 9;
}

message ParentQuestRandomInfo {
  repeated uint32 factor_list = 1;
  uint32 template_id = 8;
  uint32 entrance_id = 2;
}


message ParkourLevelInfo {
  uint32 best_record = 12;
  bool is_open = 9;
  uint32 open_time = 7;
  Vector pos = 2;
}


// CmdId: 2307
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PathfindingEnterSceneReq {
  uint32 scene_id = 12;
  repeated uint32 activity_id = 14;
  uint32 Unk2800_NCDFAFMGMIG = 15;
  uint32 version = 6;
  bool is_editor = 11;
  repeated ObstacleInfo obstacles = 13;
  uint32 Unk2800_MBDFGODMPFN = 4;
}

// CmdId: 2321
// EnetChannelId: 0
// EnetIsReliable: true
message PathfindingEnterSceneRsp {
  int32 retcode = 9;
}

// CmdId: 2335
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PathfindingPingNotify {}

message PbNavMeshStatsInfo {
  int32 authority_ai_in_combat = 10;
  int32 no_authority_ai_in_combat = 11;
  int32 total_authority_ai = 8;
  int32 total_no_authority_ai = 13;
}

// CmdId: 474
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PersonalLineAllDataReq {}


// CmdId: 476
// EnetChannelId: 0
// EnetIsReliable: true
message PersonalLineAllDataRsp {
  uint32 cur_finished_daily_task_count = 5;
  repeated uint32 can_be_unlocked_personal_line_list = 13;
  int32 retcode = 15;
  repeated uint32 ongoing_personal_line_list = 8;
  uint32 legendary_key_count = 11;
  repeated LockedPersonallineData locked_personal_line_list = 10;
}

// CmdId: 442
// EnetChannelId: 0
// EnetIsReliable: true
message PersonalLineNewUnlockNotify {
  repeated uint32 personal_line_id_list = 9;
}

// CmdId: 284
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PersonalSceneJumpReq {
  uint32 point_id = 4;
}


// CmdId: 280
// EnetChannelId: 0
// EnetIsReliable: true
message PersonalSceneJumpRsp {
  uint32 dest_scene_id = 5;
  int32 retcode = 8;
  Vector dest_pos = 11;
}


message PhotoActivityDetailInfo {
  bool is_content_closed = 4;
  repeated PhotoStage photo_stage_list = 12;
}


message PhotoStage {
  Vector center = 15;
  uint32 open_time = 2;
  bool Unk2700_DDOBNKLLLDF = 4;
  uint32 Unk2700_CKGJEOOKFIF = 9;
  bool is_open = 6;
}

// CmdId: 7
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PingReq {
  uint32 client_time = 12;
  float ue_time = 14;
  double total_tick_time = 6;
  bytes sc_data = 10;
  uint32 seq = 3;
}

// CmdId: 21
// EnetChannelId: 0
// EnetIsReliable: true
message PingRsp {
  uint32 client_time = 15;
  int32 retcode = 6;
  uint32 seq = 13;
}


message PlaceInfo {
  Vector pos = 1;
  Vector rot = 2;
}

// CmdId: 8808
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlantFlowerAcceptAllGiveFlowerReq {
  uint32 schedule_id = 11;
}


// CmdId: 8888
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerAcceptAllGiveFlowerRsp {
  uint32 schedule_id = 10;
  int32 retcode = 11;
  repeated PlantFlowerAcceptFlowerResultInfo accept_flower_result_info_list = 13;
}

message PlantFlowerAcceptFlowerResultInfo {
  map<uint32, uint32> unaccept_flower_num_map = 4;
  uint32 uid = 7;
  map<uint32, uint32> accept_flower_num_map = 10;
}

// CmdId: 8383
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlantFlowerAcceptGiveFlowerReq {
  uint32 schedule_id = 2;
  uint32 uid = 12;
}


// CmdId: 8567
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerAcceptGiveFlowerRsp {
  uint32 schedule_id = 1;
  PlantFlowerAcceptFlowerResultInfo accept_flower_result_info = 15;
  int32 retcode = 12;
}

message PlantFlowerActivityDetailInfo {
  bool is_content_closed = 3;
  map<uint32, uint32> wish_flower_num_map = 10;
  uint32 today_seed_reward_id = 11;
  uint32 day_index = 1;
  bool is_today_has_awarded = 13;
  map<uint32, uint32> used_flower_num_map = 7;
}


// CmdId: 8843
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlantFlowerEditFlowerCombinationReq {
  CustomGadgetTreeInfo flower_combination_info = 10;
  uint32 entity_id = 14;
  uint32 schedule_id = 9;
}

// CmdId: 8788
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerEditFlowerCombinationRsp {
  uint32 schedule_id = 13;
  int32 retcode = 6;
}


message PlantFlowerFriendFlowerWishData {
  ProfilePicture profile_picture = 3;
  uint32 uid = 5;
  string nickname = 14;
  map<uint32, uint32> flower_num_map = 12;
}

// CmdId: 8716
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlantFlowerGetCanGiveFriendFlowerReq {
  uint32 schedule_id = 15;
}

// CmdId: 8766
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerGetCanGiveFriendFlowerRsp {
  map<uint32, uint32> flower_num_map = 6;
  uint32 schedule_id = 4;
  int32 retcode = 3;
}

// CmdId: 8126
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlantFlowerGetFriendFlowerWishListReq {
  uint32 schedule_id = 7;
}


// CmdId: 8511
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerGetFriendFlowerWishListRsp {
  int32 retcode = 6;
  uint32 schedule_id = 2;
  repeated PlantFlowerFriendFlowerWishData friend_flower_wish_list = 9;
}

// CmdId: 8270
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlantFlowerGetRecvFlowerListReq {
  uint32 schedule_id = 1;
}


// CmdId: 8374
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerGetRecvFlowerListRsp {
  uint32 schedule_id = 6;
  int32 retcode = 1;
  repeated PlantFlowerRecvFlowerData recv_flower_list = 4;
}

// CmdId: 8560
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlantFlowerGetSeedInfoReq {
  uint32 schedule_id = 6;
}

// CmdId: 8764
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerGetSeedInfoRsp {
  int32 retcode = 15;
  uint32 schedule_id = 12;
  uint32 seed_reward_id = 5;
}

// CmdId: 8846
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlantFlowerGiveFriendFlowerReq {
  uint32 schedule_id = 11;
  uint32 uid = 13;
  map<uint32, uint32> flower_num_map = 12;
}

// CmdId: 8386
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerGiveFriendFlowerRsp {
  repeated uint32 limit_flower_list = 5;
  int32 retcode = 3;
  uint32 schedule_id = 14;
}

// CmdId: 8078
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerHaveRecvFlowerNotify {
  uint32 schedule_id = 10;
}


message PlantFlowerRecvFlowerData {
  ProfilePicture profile_picture = 13;
  string nickname = 5;
  uint32 uid = 9;
  map<uint32, uint32> flower_num_map = 14;
}

// CmdId: 8547
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlantFlowerSetFlowerWishReq {
  map<uint32, uint32> flower_num_map = 12;
  uint32 schedule_id = 5;
}

// CmdId: 8910
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerSetFlowerWishRsp {
  uint32 schedule_id = 7;
  int32 retcode = 8;
}

// CmdId: 8968
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlantFlowerTakeSeedRewardReq {
  uint32 schedule_id = 12;
}

// CmdId: 8860
// EnetChannelId: 0
// EnetIsReliable: true
message PlantFlowerTakeSeedRewardRsp {
  int32 retcode = 2;
  uint32 schedule_id = 13;
}


// CmdId: 268
// EnetChannelId: 0
// EnetIsReliable: true
message PlatformChangeRouteNotify {
  uint32 entity_id = 2;
  PlatformInfo platform = 1;
  uint32 scene_time = 8;
}



message PlatformInfo {
  uint32 route_id = 1;
  int32 start_index = 2;
  uint32 start_route_time = 3;
  uint32 start_scene_time = 4;
  Vector start_pos = 7;
  bool is_started = 8;
  MathQuaternion start_rot = 9;
  uint32 stop_scene_time = 10;
  Vector pos_offset = 11;
  MathQuaternion rot_offset = 12;
  MovingPlatformType moving_platform_type = 13;
  bool is_active = 14;
  Route route = 15;
  uint32 point_id = 16;
}


// CmdId: 218
// EnetChannelId: 0
// EnetIsReliable: true
message PlatformStartRouteNotify {
  PlatformInfo platform = 15;
  uint32 scene_time = 12;
  uint32 entity_id = 8;
}


// CmdId: 266
// EnetChannelId: 0
// EnetIsReliable: true
message PlatformStopRouteNotify {
  uint32 scene_time = 9;
  uint32 entity_id = 12;
  PlatformInfo platform = 8;
}

enum PlatformType {
  PLATFORM_TYPE_EDITOR = 0;
  PLATFORM_TYPE_IOS = 1;
  PLATFORM_TYPE_ANDROID = 2;
  PLATFORM_TYPE_PC = 3;
  PLATFORM_TYPE_PS_4 = 4;
  PLATFORM_TYPE_SERVER = 5;
  PLATFORM_TYPE_CLOUD_ANDROID = 6;
  PLATFORM_TYPE_CLOUD_IOS = 7;
  PLATFORM_TYPE_PS_5 = 8;
  PLATFORM_TYPE_CLOUD_WEB = 9;
  PLATFORM_TYPE_CLOUD_TV = 10;
  PLATFORM_TYPE_Unk2700_IBBEKBJLMAJ = 11;
  PLATFORM_TYPE_Unk2700_BCEICMDNIIG = 12;
  PLATFORM_TYPE_Unk2800_EFNGHFNPMKM = 13;
  PLATFORM_TYPE_Unk2800_FNFHGPABLFB = 14;
}

message PlayProduct {
  string product_id = 1;
  string price_tier = 2;
  uint32 schedule_id = 3;
}


message PlayTeamEntityInfo {
  uint32 entity_id = 1;
  uint32 player_uid = 2;
  uint32 authority_peer_id = 3;
  uint32 gadget_config_id = 5;
  AbilitySyncStateInfo ability_info = 6;
}

// CmdId: 4199
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerAllowEnterMpAfterAgreeMatchNotify {
  uint32 target_uid = 1;
}


// CmdId: 4533
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerApplyEnterHomeNotify {
  OnlinePlayerInfo src_player_info = 9;
  uint32 src_app_id = 10;
}

// CmdId: 4468
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerApplyEnterHomeResultNotify {
  string target_nickname = 7;
  Reason reason = 5;
  uint32 target_uid = 12;
  bool is_agreed = 9;
  enum Reason {
    REASON_PLAYER_JUDGE = 0;
    REASON_PLAYER_ENTER_OPTION_REFUSE = 1;
    REASON_PLAYER_ENTER_OPTION_DIRECT = 2;
    REASON_SYSTEM_JUDGE = 3;
    REASON_HOST_IN_MATCH = 4;
    REASON_PS_PLAYER_NOT_ACCEPT_OTHERS = 5;
    REASON_OPEN_STATE_NOT_OPEN = 6;
    REASON_HOST_IN_EDIT_MODE = 7;
    REASON_PRIOR_CHECK = 8;
  }
}

// CmdId: 4693
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerApplyEnterHomeResultReq {
  uint32 apply_uid = 14;
  bool is_agreed = 10;
}

// CmdId: 4706
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerApplyEnterHomeResultRsp {
  bool is_agreed = 2;
  uint32 apply_uid = 11;
  int32 retcode = 3;
  uint32 param = 10;
}


// CmdId: 4195
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerApplyEnterMpAfterMatchAgreedNotify {
  OnlinePlayerInfo src_player_info = 11;
  uint32 matchserver_id = 10;
  MatchType match_type = 3;
}


// CmdId: 1826
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerApplyEnterMpNotify {
  uint32 src_thread_index = 5;
  uint32 src_app_id = 6;
  OnlinePlayerInfo src_player_info = 2;
}

// CmdId: 1818
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerApplyEnterMpReq {
  uint32 target_uid = 4;
}

// CmdId: 1807
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerApplyEnterMpResultNotify {
  bool is_agreed = 2;
  string target_nickname = 12;
  Reason reason = 13;
  uint32 target_uid = 1;
  enum Reason {
    REASON_PLAYER_JUDGE = 0;
    REASON_SCENE_CANNOT_ENTER = 1;
    REASON_PLAYER_CANNOT_ENTER_MP = 2;
    REASON_SYSTEM_JUDGE = 3;
    REASON_ALLOW_ENTER_PLAYER_FULL = 4;
    REASON_WORLD_LEVEL_LOWER_THAN_HOST = 5;
    REASON_HOST_IN_MATCH = 6;
    REASON_PLAYER_IN_BLACKLIST = 7;
    REASON_PS_PLAYER_NOT_ACCEPT_OTHERS = 8;
    REASON_HOST_IS_BLOCKED = 9;
    REASON_OTHER_DATA_VERSION_NOT_LATEST = 10;
    REASON_DATA_VERSION_NOT_LATEST = 11;
    REASON_PLAYER_NOT_IN_PLAYER_WORLD = 12;
    REASON_MAX_PLAYER = 13;
  }
}

// CmdId: 1802
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerApplyEnterMpResultReq {
  uint32 apply_uid = 2;
  bool is_agreed = 12;
}

// CmdId: 1831
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerApplyEnterMpResultRsp {
  int32 retcode = 1;
  bool is_agreed = 3;
  uint32 apply_uid = 10;
  uint32 param = 12;
}

// CmdId: 1825
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerApplyEnterMpRsp {
  int32 retcode = 5;
  uint32 target_uid = 3;
  uint32 param = 4;
}


// CmdId: 4157
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerCancelMatchReq {
  MatchType match_type = 11;
}


// CmdId: 4152
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerCancelMatchRsp {
  int32 retcode = 6;
  MatchType match_type = 7;
}

// CmdId: 3367
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerChatCDNotify {
  uint32 over_time = 15;
}


// CmdId: 3010
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerChatNotify {
  ChatInfo chat_info = 3;
  uint32 channel_id = 6;
}


// CmdId: 3185
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerChatReq {
  uint32 channel_id = 13;
  ChatInfo chat_info = 15;
}

// CmdId: 3228
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerChatRsp {
  uint32 chat_forbidden_endtime = 15;
  int32 retcode = 2;
}

// CmdId: 150
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerCompoundMaterialReq {
  uint32 count = 11;
  uint32 compound_id = 3;
}


// CmdId: 143
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerCompoundMaterialRsp {
  CompoundQueueData compound_que_data = 5;
  int32 retcode = 12;
}


// CmdId: 4172
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerConfirmMatchReq {
  MatchType match_type = 12;
  bool is_agreed = 10;
}


// CmdId: 4194
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerConfirmMatchRsp {
  MatchType match_type = 9;
  uint32 match_id = 4;
  bool is_agreed = 11;
  int32 retcode = 10;
}

// CmdId: 166
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerCookArgsReq {
  uint32 assist_avatar = 10;
  uint32 recipe_id = 11;
}

// CmdId: 168
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerCookArgsRsp {
  int32 retcode = 4;
  float qte_range_ratio = 12;
}

// CmdId: 194
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerCookReq {
  uint32 cook_count = 1;
  uint32 qte_quality = 12;
  uint32 recipe_id = 8;
  uint32 assist_avatar = 14;
}


// CmdId: 188
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerCookRsp {
  repeated ItemParam extral_item_list = 15;
  uint32 cook_count = 12;
  repeated ItemParam item_list = 11;
  int32 retcode = 3;
  uint32 qte_quality = 5;
  CookRecipeData recipe_data = 7;
}


// CmdId: 190
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerDataNotify {
  uint64 server_time = 7;
  string nick_name = 8;
  bool is_first_login_today = 12;
  uint32 region_id = 6;
  map<uint32, PropValue> prop_map = 15;
}

enum PlayerDieOption {
  PLAYER_DIE_OPTION_OPT_NONE = 0;
  PLAYER_DIE_OPTION_OPT_REPLAY = 1;
  PLAYER_DIE_OPTION_OPT_CANCEL = 2;
  PLAYER_DIE_OPTION_OPT_REVIVE = 3;
}

enum PlayerDieType {
  PLAYER_DIE_TYPE_NONE = 0;
  PLAYER_DIE_TYPE_KILL_BY_MONSTER = 1;
  PLAYER_DIE_TYPE_KILL_BY_GEAR = 2;
  PLAYER_DIE_TYPE_FALL = 3;
  PLAYER_DIE_TYPE_DRAWN = 4;
  PLAYER_DIE_TYPE_ABYSS = 5;
  PLAYER_DIE_TYPE_GM = 6;
  PLAYER_DIE_TYPE_CLIMATE_COLD = 7;
  PLAYER_DIE_TYPE_STORM_LIGHTING = 8;
}


// CmdId: 912
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerEnterDungeonReq {
  Unk2800_JKLFAJKDLDG Unk2800_ANJAHBGBIFD = 2;
  uint32 point_id = 13;
  uint32 dungeon_id = 7;
}

// CmdId: 935
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerEnterDungeonRsp {
  uint32 dungeon_id = 2;
  uint32 point_id = 6;
  int32 retcode = 5;
}


// CmdId: 214
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerEnterSceneInfoNotify {
  TeamEnterSceneInfo team_enter_info = 8;
  uint32 enter_scene_token = 12;
  repeated AvatarEnterSceneInfo avatar_enter_info = 7;
  uint32 cur_avatar_entity_id = 6;
  MPLevelEntityInfo mp_level_entity_info = 5;
}


// CmdId: 272
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerEnterSceneNotify {
  uint32 prev_scene_id = 6;
  uint32 dungeon_id = 12;
  bool is_skip_ui = 1732;
  uint32 scene_id = 15;
  EnterType type = 13;
  uint64 scene_begin_time = 14;
  uint32 world_level = 11;
  uint32 world_type = 1490;
  uint32 target_uid = 4;
  bool is_first_login_enter_scene = 3;
  repeated uint32 scene_tag_id_list = 5;
  string scene_transaction = 1842;
  Vector prev_pos = 8;
  uint32 enter_reason = 1828;
  Vector pos = 7;
  uint32 enter_scene_token = 2;
}


// CmdId: 3051
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerEyePointStateNotify {
  uint32 region_entity_id = 15;
  Vector eye_point_pos = 1;
  bool is_use_eye_point = 3;
  uint32 region_config_id = 7;
  uint32 region_shape = 12;
  bool is_filter_stream_pos = 2;
  int32 Unk2800_GBBMMIGJFCF = 5;
  uint32 region_group_id = 4;
  oneof region_size {
    float sphere_radius = 255;
    Vector cubic_size = 1823;
    CylinderRegionSize cylinder_size = 1862;
    PolygonRegionSize polygon_size = 877;
  }
}

// CmdId: 5835
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerFishingDataNotify {
  uint32 last_fish_rod_id = 8;
}

// CmdId: 189
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerForceExitReq {}

// CmdId: 159
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerForceExitRsp {
  int32 retcode = 15;
}

// CmdId: 131
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerGameTimeNotify {
  uint32 uid = 7;
  uint32 game_time = 3;
  bool is_home = 13;
}

// CmdId: 4192
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerGeneralMatchConfirmNotify {
  uint32 match_id = 8;
  bool is_agree = 13;
  uint32 uid = 14;
}


// CmdId: 4191
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerGeneralMatchDismissNotify {
  repeated uint32 uid_list = 3;
  MatchReason reason = 13;
  uint32 match_id = 1;
}

// CmdId: 4164
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerGetForceQuitBanInfoReq {}

// CmdId: 4197
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerGetForceQuitBanInfoRsp {
  int32 retcode = 4;
  uint32 match_id = 8;
  uint32 expire_time = 13;
}


message PlayerHomeCompInfo {
  repeated uint32 unlocked_module_id_list = 4;
  repeated uint32 seen_module_id_list = 2;
  repeated uint32 levelup_reward_got_level_list = 7;
  FriendEnterHomeOption friend_enter_home_option = 8;
}


// CmdId: 4880
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerHomeCompInfoNotify {
  PlayerHomeCompInfo comp_info = 4;
}

// CmdId: 132
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerInjectFixNotify {
  uint32 id = 13;
  bytes inject_fix = 10;
}


// CmdId: 1928
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerInvestigationAllInfoNotify {
  repeated Investigation investigation_list = 15;
  repeated InvestigationTarget investigation_target_list = 12;
}


// CmdId: 1911
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerInvestigationNotify {
  repeated Investigation investigation_list = 1;
}


// CmdId: 1929
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerInvestigationTargetNotify {
  repeated InvestigationTarget investigation_target_list = 1;
}

// CmdId: 200
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerLevelRewardUpdateNotify {
  repeated uint32 level_list = 9;
}


message PlayerLocationInfo {
  uint32 uid = 15;
  Vector pos = 3;
  Vector rot = 13;
}


// CmdId: 112
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerLoginReq {
  uint32 language_type = 6;
  uint32 reg_platform = 615;
  TrackingIOInfo tracking_io_info = 1660;
  uint32 account_type = 13;
  string token = 15;
  bytes extra_bin_data = 1458;
  uint32 channel_id = 1314;
  uint32 client_data_version = 688;
  string account_uid = 2;
  string client_version = 12;
  string Unk2700_NGKCNPKKIKB = 772;
  string country_code = 2000;
  string psn_id = 1268;
  uint32 Unk2700_GPPBEMDGEHH = 431;
  string device_name = 9;
  string cps = 1163;
  uint64 login_rand = 3;
  uint32 target_home_param = 984;
  AdjustTrackingInfo adjust_tracking_info = 1816;
  bool is_transfer = 908;
  uint32 tag = 1787;
  bool is_guest = 5;
  bytes environment_error_code = 2026;
  string online_id = 903;
  bool is_editor = 8;
  string checksum_client_version = 861;
  bytes security_cmd_reply = 1995;
  string Unk2700_JNDKPBBCACB = 1213;
  string birthday = 1652;
  string device_uuid = 4;
  uint32 client_token = 1546;
  uint32 sub_channel_id = 23;
  uint32 target_uid = 11;
  string device_info = 1;
  string client_verison_hash = 1707;
  string checksum = 1532;
  uint32 platform_type = 14;
  uint32 target_home_owner_uid = 1864;
  uint32 cloud_client_ip = 1335;
  uint32 gm_uid = 612;
  string system_version = 10;
  string platform = 7;
}



// CmdId: 135
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerLoginRsp {
  map<string, int32> ability_hash_map = 11;
  bool is_audit = 1685;
  bool is_new_player = 8;
  ResVersionConfig res_version_config = 1969;
  bool is_enable_client_hash_debug = 932;
  string client_md_5 = 1830;
  uint32 client_data_version = 1;
  string country_code = 1900;
  bool is_relogin = 10;
  bytes player_data = 13;
  string game_biz = 5;
  map<uint32, BlockInfo> block_info_map = 571;
  string register_cps = 2040;
  ResVersionConfig next_res_version_config = 1573;
  bool is_transfer = 2018;
  uint32 target_home_owner_uid = 553;
  repeated ShortAbilityHashPair short_ability_hash_map = 250;
  int32 ability_hash_code = 12;
  bool is_sc_open = 1429;
  uint32 client_silence_data_version = 6;
  string birthday = 624;
  bool is_use_ability_hash = 2;
  string client_silence_version_suffix = 1299;
  uint32 player_data_version = 7;
  bool is_data_need_relogin = 951;
  repeated FeatureBlockInfo feature_block_info_list = 1352;
  string client_silence_md_5 = 1746;
  uint32 target_uid = 14;
  double total_tick_time = 125;
  uint64 login_rand = 4;
  bytes sc_info = 2024;
  string client_version_suffix = 1047;
  string next_resource_url = 621;
  int32 retcode = 15;
}

// CmdId: 103
// EnetChannelId: 0
// EnetIsReliable: false
message PlayerLogoutNotify {
  int32 retcode = 13;
}

// CmdId: 107
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerLogoutReq {
  Reason reason = 6;
  enum Reason {
    REASON_DISCONNECT = 0;
    REASON_CLIENT_REQ = 1;
    REASON_TIMEOUT = 2;
    REASON_ADMIN_REQ = 3;
    REASON_SERVER_CLOSE = 4;
    REASON_GM_CLEAR = 5;
    REASON_PLAYER_TRANSFER = 6;
    REASON_CLIENT_CHECKSUM_INVALID = 7;
  }
}

// CmdId: 121
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerLogoutRsp {
  int32 retcode = 12;
}


// CmdId: 133
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerLuaShellNotify {
  Unk2700_JOEPIGNPDGH Unk2700_JJMHFFHNJJO = 7;
  uint32 id = 5;
  bytes lua_shell = 12;
  uint32 use_type = 10;
}


// CmdId: 4170
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerMatchAgreedResultNotify {
  uint32 target_uid = 14;
  MatchType match_type = 3;
  Reason reason = 8;
  enum Reason {
    REASON_SUCC = 0;
    REASON_TARGET_SCENE_CANNOT_ENTER = 1;
    REASON_SELF_MP_UNAVAILABLE = 2;
    REASON_OTHER_DATA_VERSION_NOT_LATEST = 3;
    REASON_DATA_VERSION_NOT_LATEST = 4;
  }
}


// CmdId: 4175
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerMatchInfoNotify {
  uint32 mechanicus_difficult_level = 12;
  uint32 estimate_match_cost_time = 3;
  MatchType match_type = 11;
  uint32 mp_play_id = 5;
  uint32 match_id = 8;
  uint32 match_begin_time = 4;
  uint32 dungeon_id = 10;
  uint32 host_uid = 13;
}


// CmdId: 4181
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerMatchStopNotify {
  MatchReason reason = 1;
  uint32 host_uid = 12;
}


// CmdId: 4179
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerMatchSuccNotify {
  uint32 mechanicus_difficult_level = 1;
  uint32 dungeon_id = 6;
  MatchType match_type = 5;
  uint32 mp_play_id = 15;
  GeneralMatchInfo general_match_info = 7;
  uint32 host_uid = 3;
  uint32 confirm_end_time = 2;
}

message PlayerOfferingData {
  uint32 offering_id = 1;
  bool is_first_interact = 15;
  uint32 level = 12;
  repeated uint32 taken_level_reward_list = 8;
  bool is_new_max_level = 6;
}


// CmdId: 2923
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerOfferingDataNotify {
  repeated PlayerOfferingData offering_data_list = 2;
}

// CmdId: 2907
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerOfferingReq {
  uint32 offering_id = 6;
}


// CmdId: 2917
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerOfferingRsp {
  repeated ItemParam item_list = 7;
  int32 retcode = 4;
  PlayerOfferingData offering_data = 10;
}

// CmdId: 1822
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerPreEnterMpNotify {
  State state = 2;
  uint32 uid = 14;
  string nickname = 6;
  enum State {
    STATE_INVALID = 0;
    STATE_START = 1;
    STATE_TIMEOUT = 2;
  }
}

// CmdId: 139
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerPropChangeNotify {
  uint32 prop_delta = 13;
  uint32 prop_type = 12;
}


// CmdId: 1299
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerPropChangeReasonNotify {
  uint32 prop_type = 6;
  float old_value = 12;
  PropChangeReason reason = 1;
  float cur_value = 11;
}


// CmdId: 175
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerPropNotify {
  map<uint32, PropValue> prop_map = 13;
}

// CmdId: 907
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerQuitDungeonReq {
  bool is_quit_immediately = 10;
  uint32 point_id = 7;
}

// CmdId: 921
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerQuitDungeonRsp {
  uint32 point_id = 11;
  int32 retcode = 7;
}

// CmdId: 4656
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerQuitFromHomeNotify {
  QuitReason reason = 6;
  enum QuitReason {
    QUIT_REASON_INVALID = 0;
    QUIT_REASON_KICK_BY_HOST = 1;
    QUIT_REASON_BACK_TO_MY_WORLD = 2;
    QUIT_REASON_HOME_BLOCKED = 3;
    QUIT_REASON_HOME_IN_EDIT_MODE = 4;
    QUIT_REASON_BY_MUIP = 5;
    QUIT_REASON_CUR_MODULE_CLOSED = 6;
  }
}

// CmdId: 1829
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerQuitFromMpNotify {
  QuitReason reason = 11;
  enum QuitReason {
    QUIT_REASON_INVALID = 0;
    QUIT_REASON_HOST_NO_OTHER_PLAYER = 1;
    QUIT_REASON_KICK_BY_HOST = 2;
    QUIT_REASON_BACK_TO_MY_WORLD = 3;
    QUIT_REASON_KICK_BY_HOST_LOGOUT = 4;
    QUIT_REASON_KICK_BY_HOST_BLOCK = 5;
    QUIT_REASON_BE_BLOCKED = 6;
    QUIT_REASON_KICK_BY_HOST_ENTER_HOME = 7;
    QUIT_REASON_HOST_SCENE_INVALID = 8;
    QUIT_REASON_KICK_BY_PLAY = 9;
    QUIT_REASON_Unk2800_FDECHAHJFDA = 10;
  }
}

message PlayerRTTInfo {
  uint32 rtt = 2;
  uint32 uid = 1;
}


// CmdId: 126
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerRandomCookReq {
  repeated ItemParam material_list = 13;
}

// CmdId: 163
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerRandomCookRsp {
  int32 retcode = 4;
}


// CmdId: 4102
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerRechargeDataNotify {
  uint32 card_product_remain_days = 12;
  repeated ProductPriceTier product_price_tier_list = 11;
}


// CmdId: 4024
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerReportReq {
  ReportReasonType reason = 12;
  string content = 8;
  uint32 target_home_module_id = 5;
  string target_home_module_name = 6;
  uint32 target_uid = 14;
}

// CmdId: 4056
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerReportRsp {
  uint32 cd_time = 11;
  uint32 target_uid = 6;
  int32 retcode = 12;
}


// CmdId: 3526
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerRoutineDataNotify {
  repeated PlayerRoutineInfo routine_info_list = 11;
}

message PlayerRoutineInfo {
  uint32 routine_type = 8;
  uint32 finished_num = 15;
}

// CmdId: 142
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerSetLanguageReq {
  uint32 language_type = 5;
}

// CmdId: 130
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerSetLanguageRsp {
  int32 retcode = 11;
}

// CmdId: 1820
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerSetOnlyMPWithPSPlayerReq {
  bool is_only = 13;
}

// CmdId: 1845
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerSetOnlyMPWithPSPlayerRsp {
  int32 retcode = 5;
  bool is_only = 8;
}

// CmdId: 124
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerSetPauseReq {
  bool is_paused = 1;
}

// CmdId: 156
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerSetPauseRsp {
  int32 retcode = 15;
}


// CmdId: 4176
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PlayerStartMatchReq {
  MatchType match_type = 3;
  uint32 mechanicus_difficult_level = 12;
  repeated uint32 match_param_list = 11;
  uint32 dungeon_id = 1;
  uint32 mp_play_id = 15;
  uint32 match_id = 6;
}


// CmdId: 4168
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerStartMatchRsp {
  int32 retcode = 1;
  uint32 punish_end_time = 5;
  uint32 param = 4;
  uint32 mp_play_id = 13;
  uint32 mechanicus_difficult_level = 2;
  uint32 dungeon_id = 3;
  uint32 match_id = 8;
  MatchType match_type = 7;
}


// CmdId: 672
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerStoreNotify {
  repeated Item item_list = 15;
  uint32 weight_limit = 8;
  StoreType store_type = 2;
}

// CmdId: 191
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerTimeNotify {
  uint64 server_time = 5;
  uint64 player_time = 11;
  bool is_paused = 14;
}

message PlayerUidExtInfo {
  uint32 reg_platform = 1;
}


message PlayerWorldLocationInfo {
  uint32 scene_id = 1;
  PlayerLocationInfo player_loc = 12;
}

message PlayerWorldSceneInfo {
  uint32 scene_id = 11;
  repeated uint32 scene_tag_id_list = 8;
  bool is_locked = 12;
}


// CmdId: 3129
// EnetChannelId: 0
// EnetIsReliable: true
message PlayerWorldSceneInfoListNotify {
  repeated PlayerWorldSceneInfo info_list = 5;
}


message PolygonRegionSize {
  repeated VectorPlane point_list = 5;
  float height = 9;
}

// CmdId: 3312
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PostEnterSceneReq {
  uint32 enter_scene_token = 12;
}

// CmdId: 3184
// EnetChannelId: 0
// EnetIsReliable: true
message PostEnterSceneRsp {
  int32 retcode = 4;
  uint32 enter_scene_token = 12;
}


message PotionActivityDetailInfo {
  repeated PotionStage stage_list = 10;
}

message PotionDungeonResultInfo {
  uint32 final_score = 8;
  uint32 left_time = 9;
  uint32 Unk2700_FHEHGDABALE = 14;
  uint32 Unk2700_HKFEBBCMBHL = 11;
  uint32 level_id = 4;
  uint32 stage_id = 2;
}


message PotionStage {
  uint32 stage_id = 11;
  repeated uint32 Unk2700_HFHCCJFDOKA = 2;
  bool is_open = 15;
  repeated Unk2700_JLHKOLGFAMI level_list = 14;
  repeated uint32 Unk2700_LONIJGBDPIG = 13;
}


// CmdId: 4962
// EnetChannelId: 0
// EnetIsReliable: true
message PrivateChatNotify {
  ChatInfo chat_info = 7;
}

// CmdId: 5022
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PrivateChatReq {
  uint32 target_uid = 7;
  oneof content {
    string text = 3;
    uint32 icon = 4;
  }
}

// CmdId: 5048
// EnetChannelId: 0
// EnetIsReliable: true
message PrivateChatRsp {
  uint32 chat_forbidden_endtime = 12;
  int32 retcode = 14;
}

// CmdId: 4985
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PrivateChatSetSequenceReq {
  uint32 target_uid = 11;
  uint32 sequence = 15;
}

// CmdId: 4957
// EnetChannelId: 0
// EnetIsReliable: true
message PrivateChatSetSequenceRsp {
  int32 retcode = 13;
}

message ProductPriceTier {
  string product_id = 6;
  string price_tier = 12;
}

message ProfilePicture {
  uint32 avatar_id = 1;
  uint32 costume_id = 2;
}


// CmdId: 4016
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ProfilePictureChangeNotify {
  ProfilePicture profile_picture = 12;
}

// CmdId: 863
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ProjectorOptionReq {
  uint32 op_type = 7;
  uint32 entity_id = 10;
  enum ProjectorOpType {
    PROJECTOR_OP_TYPE_NONE = 0;
    PROJECTOR_OP_TYPE_CREATE = 1;
    PROJECTOR_OP_TYPE_DESTROY = 2;
  }
}

// CmdId: 895
// EnetChannelId: 0
// EnetIsReliable: true
message ProjectorOptionRsp {
  uint32 entity_id = 10;
  int32 retcode = 12;
  uint32 op_type = 13;
}

enum PropChangeReason {
  PROP_CHANGE_REASON_NONE = 0;
  PROP_CHANGE_REASON_STATUE_RECOVER = 1;
  PROP_CHANGE_REASON_ENERGY_BALL = 2;
  PROP_CHANGE_REASON_ABILITY = 3;
  PROP_CHANGE_REASON_LEVELUP = 4;
  PROP_CHANGE_REASON_ITEM = 5;
  PROP_CHANGE_REASON_AVATAR_CARD = 6;
  PROP_CHANGE_REASON_CITY_LEVELUP = 7;
  PROP_CHANGE_REASON_AVATAR_UPGRADE = 8;
  PROP_CHANGE_REASON_AVATAR_PROMOTE = 9;
  PROP_CHANGE_REASON_PLAYER_ADD_EXP = 10;
  PROP_CHANGE_REASON_FINISH_QUEST = 11;
  PROP_CHANGE_REASON_GM = 12;
  PROP_CHANGE_REASON_MANUAL_ADJUST_WORLD_LEVEL = 13;
}


message PropPair {
  uint32 type = 1;
  PropValue prop_value = 2;
}

message PropValue {
  uint32 type = 1;
  int64 val = 4;
  oneof value {
    int64 ival = 2;
    float fval = 3;
  }
}

enum ProtEntityType {
  PROT_ENTITY_TYPE_NONE = 0;
  PROT_ENTITY_TYPE_AVATAR = 1;
  PROT_ENTITY_TYPE_MONSTER = 2;
  PROT_ENTITY_TYPE_NPC = 3;
  PROT_ENTITY_TYPE_GADGET = 4;
  PROT_ENTITY_TYPE_REGION = 5;
  PROT_ENTITY_TYPE_WEAPON = 6;
  PROT_ENTITY_TYPE_WEATHER = 7;
  PROT_ENTITY_TYPE_SCENE = 8;
  PROT_ENTITY_TYPE_TEAM = 9;
  PROT_ENTITY_TYPE_MASSIVE_ENTITY = 10;
  PROT_ENTITY_TYPE_MP_LEVEL = 11;
  PROT_ENTITY_TYPE_PLAY_TEAM_ENTITY = 12;
  PROT_ENTITY_TYPE_EYE_POINT = 13;
  PROT_ENTITY_TYPE_MAX = 14;
}

// CmdId: 1031
// EnetChannelId: 0
// EnetIsReliable: true
message ProudSkillChangeNotify {
  uint64 avatar_guid = 11;
  uint32 entity_id = 4;
  uint32 skill_depot_id = 8;
  repeated uint32 proud_skill_list = 12;
}

// CmdId: 1081
// EnetChannelId: 0
// EnetIsReliable: true
message ProudSkillExtraLevelNotify {
  uint32 talent_type = 11;
  uint32 talent_index = 8;
  uint64 avatar_guid = 15;
  uint32 extra_level = 3;
}

// CmdId: 1073
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ProudSkillUpgradeReq {
  uint64 avatar_guid = 5;
  uint32 old_proud_skill_level = 4;
  uint32 proud_skill_id = 14;
}

// CmdId: 1099
// EnetChannelId: 0
// EnetIsReliable: true
message ProudSkillUpgradeRsp {
  uint64 avatar_guid = 6;
  uint32 proud_skill_id = 10;
  int32 retcode = 15;
}

// CmdId: 4971
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PullPrivateChatReq {
  uint32 target_uid = 5;
  uint32 pull_num = 7;
  uint32 from_sequence = 12;
}


// CmdId: 4953
// EnetChannelId: 0
// EnetIsReliable: true
message PullPrivateChatRsp {
  repeated ChatInfo chat_info = 15;
  int32 retcode = 11;
}

// CmdId: 5040
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PullRecentChatReq {
  uint32 pull_num = 6;
  uint32 begin_sequence = 15;
}


// CmdId: 5023
// EnetChannelId: 0
// EnetIsReliable: true
message PullRecentChatRsp {
  repeated ChatInfo chat_info = 15;
  int32 retcode = 3;
}


// CmdId: 2222
// EnetChannelId: 0
// EnetIsReliable: true
message PushTipsAllDataNotify {
  repeated PushTipsData push_tips_list = 4;
}


// CmdId: 2265
// EnetChannelId: 0
// EnetIsReliable: true
message PushTipsChangeNotify {
  repeated PushTipsData push_tips_list = 9;
}

message PushTipsData {
  uint32 push_tips_id = 13;
  uint32 state = 4;
}

// CmdId: 2204
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message PushTipsReadFinishReq {
  uint32 push_tips_id = 11;
}

// CmdId: 2293
// EnetChannelId: 0
// EnetIsReliable: true
message PushTipsReadFinishRsp {
  uint32 push_tips_id = 3;
  int32 retcode = 9;
}

// CmdId: 4203
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message QueryCodexMonsterBeKilledNumReq {
  repeated uint32 codex_id_list = 14;
}

// CmdId: 4209
// EnetChannelId: 0
// EnetIsReliable: true
message QueryCodexMonsterBeKilledNumRsp {
  repeated uint32 codex_id_list = 4;
  repeated uint32 Unk2700_MKOBMGGPNMI = 6;
  repeated uint32 be_killed_num_list = 12;
  int32 retcode = 5;
}


message QueryCurrRegionHttpRsp {
  int32 retcode = 1;
  string msg = 2;
  RegionInfo region_info = 3;
  bytes client_secret_key = 11;
  bytes region_custom_config_encrypted = 12;
  bytes client_region_custom_config_encrypted = 13;
  oneof detail {
    ForceUpdateInfo force_udpate = 4;
    StopServerInfo stop_server = 5;
  }
}

message QueryFilter {
  int32 type_id = 9;
  int32 area_mask = 13;
}


// CmdId: 2372
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message QueryPathReq {
  OptionType query_type = 13;
  Vector3Int source_extend = 6;
  Vector source_pos = 2;
  QueryFilter filter = 12;
  int32 query_id = 15;
  Vector3Int destination_extend = 4;
  repeated Vector destination_pos = 10;
  uint32 scene_id = 11;
  enum OptionType {
    OPTION_TYPE_NONE = 0;
    OPTION_TYPE_NORMAL = 1;
    OPTION_TYPE_FIRST_CAN_GO = 2;
  }
}


// CmdId: 2398
// EnetChannelId: 0
// EnetIsReliable: true
message QueryPathRsp {
  int32 query_id = 12;
  repeated Vector corners = 6;
  PathStatusType query_status = 8;
  int32 retcode = 1;
  enum PathStatusType {
    PATH_STATUS_TYPE_FAIL = 0;
    PATH_STATUS_TYPE_SUCC = 1;
    PATH_STATUS_TYPE_PARTIAL = 2;
  }
}


message QueryRegionListHttpRsp {
  int32 retcode = 1;
  repeated RegionSimpleInfo region_list = 2;
  bytes client_secret_key = 5;
  bytes client_custom_config_encrypted = 6;
  bool enable_login_pc = 7;
}

message Quest {
  uint32 quest_id = 1;
  uint32 state = 2;
  uint32 start_time = 4;
  bool is_random = 5;
  uint32 parent_quest_id = 6;
  uint32 quest_config_id = 7;
  uint32 start_game_time = 8;
  uint32 accept_time = 9;
  repeated uint32 lacked_npc_list = 10;
  repeated uint32 finish_progress_list = 11;
  repeated uint32 fail_progress_list = 12;
  map<uint32, uint32> lacked_npc_map = 13;
  repeated uint32 lacked_place_list = 14;
  map<uint32, uint32> lacked_place_map = 15;
}


// CmdId: 499
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message QuestCreateEntityReq {
  uint32 parent_quest_id = 9;
  bool is_rewind = 3;
  uint32 quest_id = 2;
  CreateEntityInfo entity = 13;
}


// CmdId: 431
// EnetChannelId: 0
// EnetIsReliable: true
message QuestCreateEntityRsp {
  uint32 quest_id = 13;
  int32 retcode = 8;
  uint32 entity_id = 7;
  CreateEntityInfo entity = 11;
  uint32 parent_quest_id = 1;
  bool is_rewind = 14;
}

// CmdId: 412
// EnetChannelId: 0
// EnetIsReliable: true
message QuestDelNotify {
  uint32 quest_id = 1;
}

// CmdId: 475
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message QuestDestroyEntityReq {
  uint32 scene_id = 2;
  uint32 entity_id = 9;
  uint32 quest_id = 8;
}

// CmdId: 448
// EnetChannelId: 0
// EnetIsReliable: true
message QuestDestroyEntityRsp {
  uint32 quest_id = 14;
  uint32 scene_id = 9;
  uint32 entity_id = 12;
  int32 retcode = 1;
}

// CmdId: 422
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message QuestDestroyNpcReq {
  uint32 npc_id = 1;
  uint32 parent_quest_id = 12;
}

// CmdId: 465
// EnetChannelId: 0
// EnetIsReliable: true
message QuestDestroyNpcRsp {
  uint32 npc_id = 12;
  uint32 parent_quest_id = 4;
  int32 retcode = 5;
}

message QuestGlobalVar {
  int32 value = 8;
  uint32 key = 4;
}


// CmdId: 434
// EnetChannelId: 0
// EnetIsReliable: true
message QuestGlobalVarNotify {
  repeated QuestGlobalVar var_list = 1;
}


// CmdId: 472
// EnetChannelId: 0
// EnetIsReliable: true
message QuestListNotify {
  repeated Quest quest_list = 1;
}


// CmdId: 498
// EnetChannelId: 0
// EnetIsReliable: true
message QuestListUpdateNotify {
  repeated Quest quest_list = 6;
}

// CmdId: 482
// EnetChannelId: 0
// EnetIsReliable: true
message QuestProgressUpdateNotify {
  uint32 quest_id = 12;
  repeated uint32 fail_progress_list = 6;
  repeated uint32 finish_progress_list = 13;
}

// CmdId: 450
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message QuestTransmitReq {
  uint32 point_id = 15;
  uint32 quest_id = 5;
}

// CmdId: 443
// EnetChannelId: 0
// EnetIsReliable: true
message QuestTransmitRsp {
  uint32 point_id = 12;
  int32 retcode = 5;
  uint32 quest_id = 3;
}

// CmdId: 456
// EnetChannelId: 0
// EnetIsReliable: true
message QuestUpdateQuestTimeVarNotify {
  map<uint32, uint32> time_var_map = 1;
  uint32 parent_quest_id = 3;
}

// CmdId: 453
// EnetChannelId: 0
// EnetIsReliable: true
message QuestUpdateQuestVarNotify {
  repeated int32 quest_var = 1;
  uint32 parent_quest_id = 12;
  uint32 parent_quest_var_seq = 8;
}


// CmdId: 447
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message QuestUpdateQuestVarReq {
  uint32 parent_quest_id = 9;
  repeated QuestVarOp quest_var_op_list = 4;
  uint32 quest_id = 11;
  uint32 parent_quest_var_seq = 1;
}

// CmdId: 439
// EnetChannelId: 0
// EnetIsReliable: true
message QuestUpdateQuestVarRsp {
  int32 retcode = 10;
  uint32 parent_quest_var_seq = 2;
  uint32 parent_quest_id = 8;
  uint32 quest_id = 15;
}

message QuestVarOp {
  uint32 index = 9;
  int32 value = 5;
  bool is_add = 6;
}



// CmdId: 4299
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message QuickUseWidgetReq {
  oneof param {
    WidgetCreateLocationInfo location_info = 676;
    WidgetCameraInfo camera_info = 478;
    WidgetCreatorInfo creator_info = 812;
    WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 1859;
  }
}


// CmdId: 4270
// EnetChannelId: 0
// EnetIsReliable: true
message QuickUseWidgetRsp {
  uint32 material_id = 6;
  int32 retcode = 5;
  oneof param {
    OneofGatherPointDetectorData detector_data = 3;
    ClientCollectorData client_collector_data = 15;
    SkyCrystalDetectorQuickUseResult sky_crystal_detector_quick_use_result = 168922;
  }
}


message RacingGalleryInfo {
  repeated Unk2700_OJJNGIHDJEH record_list = 7;
}

// CmdId: 1412
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReadMailNotify {
  repeated uint32 mail_id_list = 2;
}

// CmdId: 5049
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReadPrivateChatReq {
  uint32 target_uid = 1;
}

// CmdId: 4981
// EnetChannelId: 0
// EnetIsReliable: true
message ReadPrivateChatRsp {
  int32 retcode = 1;
}

// CmdId: 2130
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReceivedTrialAvatarActivityRewardReq {
  uint32 trial_avatar_index_id = 4;
}

// CmdId: 2076
// EnetChannelId: 0
// EnetIsReliable: true
message ReceivedTrialAvatarActivityRewardRsp {
  uint32 activity_id = 13;
  int32 retcode = 3;
  uint32 trial_avatar_index_id = 9;
}



// CmdId: 4126
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RechargeReq {
  PlayProduct play_product = 10;
  ShopCardProduct card_product = 8;
  ShopMcoinProduct mcoin_product = 14;
  ShopConcertProduct concert_product = 7;
}

// CmdId: 4118
// EnetChannelId: 0
// EnetIsReliable: true
message RechargeRsp {
  int32 retcode = 12;
  bool Unk2700_FGENAOBDIEA = 6;
  string product_id = 2;
}

message RedPointData {
  uint32 red_point_type = 1;
  bool is_show = 2;
  uint32 content_id = 3;
}

// CmdId: 446
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RedeemLegendaryKeyReq {}

// CmdId: 441
// EnetChannelId: 0
// EnetIsReliable: true
message RedeemLegendaryKeyRsp {
  uint32 legendary_key_count = 11;
  int32 retcode = 14;
}

// CmdId: 1743
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RefreshBackgroundAvatarReq {}

// CmdId: 1800
// EnetChannelId: 0
// EnetIsReliable: true
message RefreshBackgroundAvatarRsp {
  map<uint64, uint32> hp_full_time_map = 15;
  int32 retcode = 3;
}

// CmdId: 8279
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RefreshRoguelikeDungeonCardReq {}

// CmdId: 8349
// EnetChannelId: 0
// EnetIsReliable: true
message RefreshRoguelikeDungeonCardRsp {
  int32 retcode = 3;
  repeated uint32 res_card_list = 9;
}


message RegionInfo {
  string gateserver_ip = 1;
  uint32 gateserver_port = 2;
  string pay_callback_url = 3;
  string area_type = 7;
  string resource_url = 8;
  string data_url = 9;
  string feedback_url = 10;
  string bulletin_url = 11;
  string resource_url_bak = 12;
  string data_url_bak = 13;
  uint32 client_data_version = 14;
  string handbook_url = 16;
  uint32 client_silence_data_version = 18;
  string client_data_md_5 = 19;
  string client_silence_data_md_5 = 20;
  ResVersionConfig res_version_config = 22;
  bytes secret_key = 23;
  string official_community_url = 24;
  string client_version_suffix = 26;
  string client_silence_version_suffix = 27;
  bool use_gateserver_domain_name = 28;
  string gateserver_domain_name = 29;
  string user_center_url = 30;
  string account_bind_url = 31;
  string cdkey_url = 32;
  string privacy_policy_url = 33;
  string next_resource_url = 34;
  ResVersionConfig next_res_version_config = 35;
}


message RegionSearch {
  bool is_entered = 13;
  uint32 progress = 5;
  RegionSearchState state = 2;
  uint32 region_search_id = 8;
}

// CmdId: 5618
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RegionSearchChangeRegionNotify {
  RegionEvent event = 1;
  uint32 region_id = 10;
  enum RegionEvent {
    REGION_EVENT_NONE = 0;
    REGION_EVENT_ENTER = 1;
    REGION_EVENT_LEAVE = 2;
  }
}


message RegionSearchInfo {
  uint32 id = 5;
  repeated RegionSearch region_search_list = 1;
  bool is_entered = 7;
}


// CmdId: 5626
// EnetChannelId: 0
// EnetIsReliable: true
message RegionSearchNotify {
  repeated RegionSearchInfo region_search_list = 1;
  uint32 uid = 8;
}

enum RegionSearchState {
  REGION_SEARCH_STATE_NONE = 0;
  REGION_SEARCH_STATE_UNSTARTED = 1;
  REGION_SEARCH_STATE_STARTED = 2;
  REGION_SEARCH_STATE_WAIT_REWARD = 3;
  REGION_SEARCH_STATE_FINISHED = 4;
}

message RegionSimpleInfo {
  string name = 1;
  string title = 2;
  string type = 3;
  string dispatch_url = 4;
}

message Reliquary {
  uint32 level = 1;
  uint32 exp = 2;
  uint32 promote_level = 3;
  uint32 main_prop_id = 4;
  repeated uint32 append_prop_id_list = 5;
}

// CmdId: 638
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReliquaryDecomposeReq {
  uint32 config_id = 13;
  uint32 target_count = 9;
  repeated uint64 guid_list = 8;
}

// CmdId: 611
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReliquaryDecomposeRsp {
  int32 retcode = 3;
  repeated uint64 guid_list = 14;
}

// CmdId: 627
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReliquaryPromoteReq {
  uint64 item_guid = 10;
  uint64 target_guid = 13;
}

// CmdId: 694
// EnetChannelId: 0
// EnetIsReliable: true
message ReliquaryPromoteRsp {
  uint32 old_promote_level = 10;
  uint64 target_reliquary_guid = 6;
  repeated uint32 cur_append_prop_list = 9;
  int32 retcode = 12;
  uint32 cur_promote_level = 2;
  repeated uint32 old_append_prop_list = 8;
}

message ReliquaryRequest {
  uint32 equip_type = 6;
}


message ReliquaryResponse {
  repeated Unk2700_GBBDJMDIDEI Unk2700_DMDHDIHGPFA = 8;
  uint32 equip_type = 3;
}


// CmdId: 604
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReliquaryUpgradeReq {
  repeated ItemParam item_param_list = 11;
  uint64 target_reliquary_guid = 6;
  repeated uint64 food_reliquary_guid_list = 12;
}

// CmdId: 693
// EnetChannelId: 0
// EnetIsReliable: true
message ReliquaryUpgradeRsp {
  uint32 old_level = 4;
  uint32 cur_level = 13;
  uint64 target_reliquary_guid = 9;
  repeated uint32 cur_append_prop_list = 2;
  uint32 power_up_rate = 6;
  repeated uint32 old_append_prop_list = 15;
  int32 retcode = 5;
}

// CmdId: 4063
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RemoveBlacklistReq {
  uint32 target_uid = 13;
}

// CmdId: 4095
// EnetChannelId: 0
// EnetIsReliable: true
message RemoveBlacklistRsp {
  int32 retcode = 12;
  uint32 target_uid = 7;
}

// CmdId: 161
// EnetChannelId: 0
// EnetIsReliable: true
message RemoveRandTaskInfoNotify {
  bool is_succ = 9;
  FinishReason reason = 10;
  uint32 rand_task_id = 13;
  enum FinishReason {
    FINISH_REASON_DEFAULT = 0;
    FINISH_REASON_CLEAR = 1;
    FINISH_REASON_DISTANCE = 2;
    FINISH_REASON_FINISH = 3;
  }
}

// CmdId: 368
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReportFightAntiCheatNotify {
  uint32 cheat_count = 8;
  uint32 cheat_type = 12;
}

enum ReportReasonType {
  REPORT_REASON_TYPE_NONE = 0;
  REPORT_REASON_TYPE_DECEPTIVE_ADS = 1;
  REPORT_REASON_TYPE_ABUSING = 2;
  REPORT_REASON_TYPE_CHEAT = 3;
  REPORT_REASON_TYPE_POLITICAL = 4;
  REPORT_REASON_TYPE_OTHER = 5;
  REPORT_REASON_TYPE_HOME = 6;
}

// CmdId: 4129
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReportTrackingIOInfoNotify {
  string rydevicetype = 12;
  string deviceid = 1;
  string client_tz = 13;
  string appid = 14;
  string mac = 15;
}

// CmdId: 894
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RequestLiveInfoReq {
  uint32 live_id = 6;
}

// CmdId: 888
// EnetChannelId: 0
// EnetIsReliable: true
message RequestLiveInfoRsp {
  string spare_live_url = 14;
  int32 retcode = 9;
  string live_url = 12;
  uint32 live_id = 2;
}

message ResVersionConfig {
  uint32 version = 1;
  bool relogin = 2;
  string md_5 = 3;
  string release_total_size = 4;
  string version_suffix = 5;
  string branch = 6;
  string next_script_version = 7;
}

message ResinCardData {
  uint32 remain_reward_days = 3;
  uint32 expire_time = 12;
  uint32 last_daily_reward_time = 2;
  uint32 config_id = 7;
}


// CmdId: 4149
// EnetChannelId: 0
// EnetIsReliable: true
message ResinCardDataUpdateNotify {
  uint32 today_start_time = 6;
  repeated ResinCardData card_data_list = 2;
}

// CmdId: 642
// EnetChannelId: 0
// EnetIsReliable: true
message ResinChangeNotify {
  uint32 next_add_timestamp = 6;
  uint32 cur_buy_count = 4;
  uint32 cur_value = 12;
}

enum ResinCostType {
  RESIN_COST_TYPE_NONE = 0;
  RESIN_COST_TYPE_NORMAL = 1;
  RESIN_COST_TYPE_CONDENSE = 2;
  RESIN_COST_TYPE_REUNION_PRIVILEGE = 3;
  RESIN_COST_TYPE_OP_ACTIVITY = 4;
  RESIN_COST_TYPE_MATERIAL = 5;
}

// CmdId: 2148
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RestartEffigyChallengeReq {}

// CmdId: 2042
// EnetChannelId: 0
// EnetIsReliable: true
message RestartEffigyChallengeRsp {
  int32 retcode = 2;
}

enum Retcode {
  RETCODE_RET_SUCC = 0;
  RETCODE_RET_FAIL = -1;
  RETCODE_RET_SVR_ERROR = 1;
  RETCODE_RET_UNKNOWN_ERROR = 2;
  RETCODE_RET_FREQUENT = 3;
  RETCODE_RET_NODE_FORWARD_ERROR = 4;
  RETCODE_RET_NOT_FOUND_CONFIG = 5;
  RETCODE_RET_SYSTEM_BUSY = 6;
  RETCODE_RET_GM_UID_BIND = 7;
  RETCODE_RET_FORBIDDEN = 8;
  RETCODE_RET_STOP_REGISTER = 10;
  RETCODE_RET_STOP_SERVER = 11;
  RETCODE_RET_ACCOUNT_VEIRFY_ERROR = 12;
  RETCODE_RET_ACCOUNT_FREEZE = 13;
  RETCODE_RET_REPEAT_LOGIN = 14;
  RETCODE_RET_CLIENT_VERSION_ERROR = 15;
  RETCODE_RET_TOKEN_ERROR = 16;
  RETCODE_RET_ACCOUNT_NOT_EXIST = 17;
  RETCODE_RET_WAIT_OTHER_LOGIN = 18;
  RETCODE_RET_ANOTHER_LOGIN = 19;
  RETCODE_RET_CLIENT_FORCE_UPDATE = 20;
  RETCODE_RET_BLACK_UID = 21;
  RETCODE_RET_LOGIN_DB_FAIL = 22;
  RETCODE_RET_LOGIN_INIT_FAIL = 23;
  RETCODE_RET_MYSQL_DUPLICATE = 24;
  RETCODE_RET_MAX_PLAYER = 25;
  RETCODE_RET_ANTI_ADDICT = 26;
  RETCODE_RET_PS_PLAYER_WITHOUT_ONLINE_ID = 27;
  RETCODE_RET_ONLINE_ID_NOT_FOUND = 28;
  RETCODE_RET_ONLNE_ID_NOT_MATCH = 29;
  RETCODE_RET_REGISTER_IS_FULL = 30;
  RETCODE_RET_CHECKSUM_INVALID = 31;
  RETCODE_RET_BLACK_REGISTER_IP = 32;
  RETCODE_RET_EXCEED_REGISTER_RATE = 33;
  RETCODE_RET_UNKNOWN_PLATFORM = 34;
  RETCODE_RET_TOKEN_PARAM_ERROR = 35;
  RETCODE_RET_ANTI_OFFLINE_ERROR = 36;
  RETCODE_RET_BLACK_LOGIN_IP = 37;
  RETCODE_RET_GET_TOKEN_SESSION_HAS_UID = 38;
  RETCODE_RET_ENVIRONMENT_ERROR = 39;
  RETCODE_RET_CHECK_CLIENT_VERSION_HASH_FAIL = 40;
  RETCODE_RET_MINOR_REGISTER_FOBIDDEN = 41;
  RETCODE_RET_SECURITY_LIBRARY_ERROR = 42;
  RETCODE_RET_AVATAR_IN_CD = 101;
  RETCODE_RET_AVATAR_NOT_ALIVE = 102;
  RETCODE_RET_AVATAR_NOT_ON_SCENE = 103;
  RETCODE_RET_CAN_NOT_FIND_AVATAR = 104;
  RETCODE_RET_CAN_NOT_DEL_CUR_AVATAR = 105;
  RETCODE_RET_DUPLICATE_AVATAR = 106;
  RETCODE_RET_AVATAR_IS_SAME_ONE = 107;
  RETCODE_RET_AVATAR_LEVEL_LESS_THAN = 108;
  RETCODE_RET_AVATAR_CAN_NOT_CHANGE_ELEMENT = 109;
  RETCODE_RET_AVATAR_BREAK_LEVEL_LESS_THAN = 110;
  RETCODE_RET_AVATAR_ON_MAX_BREAK_LEVEL = 111;
  RETCODE_RET_AVATAR_ID_ALREADY_EXIST = 112;
  RETCODE_RET_AVATAR_NOT_DEAD = 113;
  RETCODE_RET_AVATAR_IS_REVIVING = 114;
  RETCODE_RET_AVATAR_ID_ERROR = 115;
  RETCODE_RET_REPEAT_SET_PLAYER_BORN_DATA = 116;
  RETCODE_RET_PLAYER_LEVEL_LESS_THAN = 117;
  RETCODE_RET_AVATAR_LIMIT_LEVEL_ERROR = 118;
  RETCODE_RET_CUR_AVATAR_NOT_ALIVE = 119;
  RETCODE_RET_CAN_NOT_FIND_TEAM = 120;
  RETCODE_RET_CAN_NOT_FIND_CUR_TEAM = 121;
  RETCODE_RET_AVATAR_NOT_EXIST_IN_TEAM = 122;
  RETCODE_RET_CAN_NOT_REMOVE_CUR_AVATAR_FROM_TEAM = 123;
  RETCODE_RET_CAN_NOT_USE_REVIVE_ITEM_FOR_CUR_AVATAR = 124;
  RETCODE_RET_TEAM_COST_EXCEED_LIMIT = 125;
  RETCODE_RET_TEAM_AVATAR_IN_EXPEDITION = 126;
  RETCODE_RET_TEAM_CAN_NOT_CHOSE_REPLACE_USE = 127;
  RETCODE_RET_AVATAR_IN_COMBAT = 128;
  RETCODE_RET_NICKNAME_UTF_8_ERROR = 130;
  RETCODE_RET_NICKNAME_TOO_LONG = 131;
  RETCODE_RET_NICKNAME_WORD_ILLEGAL = 132;
  RETCODE_RET_NICKNAME_TOO_MANY_DIGITS = 133;
  RETCODE_RET_NICKNAME_IS_EMPTY = 134;
  RETCODE_RET_NICKNAME_MONTHLY_LIMIT = 135;
  RETCODE_RET_NICKNAME_NOT_CHANGED = 136;
  RETCODE_RET_PLAYER_NOT_ONLINE = 140;
  RETCODE_RET_OPEN_STATE_NOT_OPEN = 141;
  RETCODE_RET_FEATURE_CLOSED = 142;
  RETCODE_RET_AVATAR_EXPEDITION_AVATAR_DIE = 152;
  RETCODE_RET_AVATAR_EXPEDITION_COUNT_LIMIT = 153;
  RETCODE_RET_AVATAR_EXPEDITION_MAIN_FORBID = 154;
  RETCODE_RET_AVATAR_EXPEDITION_TRIAL_FORBID = 155;
  RETCODE_RET_TEAM_NAME_ILLEGAL = 156;
  RETCODE_RET_IS_NOT_IN_STANDBY = 157;
  RETCODE_RET_IS_IN_DUNGEON = 158;
  RETCODE_RET_IS_IN_LOCK_AVATAR_QUEST = 159;
  RETCODE_RET_IS_USING_TRIAL_AVATAR = 160;
  RETCODE_RET_IS_USING_TEMP_AVATAR = 161;
  RETCODE_RET_NOT_HAS_FLYCLOAK = 162;
  RETCODE_RET_FETTER_REWARD_ALREADY_GOT = 163;
  RETCODE_RET_FETTER_REWARD_LEVEL_NOT_ENOUGH = 164;
  RETCODE_RET_WORLD_LEVEL_ADJUST_MIN_LEVEL = 165;
  RETCODE_RET_WORLD_LEVEL_ADJUST_CD = 166;
  RETCODE_RET_NOT_HAS_COSTUME = 167;
  RETCODE_RET_COSTUME_AVATAR_ERROR = 168;
  RETCODE_RET_FLYCLOAK_PLATFORM_TYPE_ERR = 169;
  RETCODE_RET_IN_TRANSFER = 170;
  RETCODE_RET_IS_IN_LOCK_AVATAR = 171;
  RETCODE_RET_FLOAT_ERROR = 201;
  RETCODE_RET_NPC_NOT_EXIST = 301;
  RETCODE_RET_NPC_TOO_FAR = 302;
  RETCODE_RET_NOT_CURRENT_TALK = 303;
  RETCODE_RET_NPC_CREATE_FAIL = 304;
  RETCODE_RET_NPC_MOVE_FAIL = 305;
  RETCODE_RET_QUEST_NOT_EXIST = 401;
  RETCODE_RET_QUEST_IS_FAIL = 402;
  RETCODE_RET_QUEST_CONTENT_ERROR = 403;
  RETCODE_RET_BARGAIN_NOT_ACTIVATED = 404;
  RETCODE_RET_BARGAIN_FINISHED = 405;
  RETCODE_RET_POINT_NOT_UNLOCKED = 501;
  RETCODE_RET_POINT_TOO_FAR = 502;
  RETCODE_RET_POINT_ALREAY_UNLOCKED = 503;
  RETCODE_RET_ENTITY_NOT_EXIST = 504;
  RETCODE_RET_ENTER_SCENE_FAIL = 505;
  RETCODE_RET_PLAYER_IS_ENTER_SCENE = 506;
  RETCODE_RET_CITY_MAX_LEVEL = 507;
  RETCODE_RET_AREA_LOCKED = 508;
  RETCODE_RET_JOIN_OTHER_WAIT = 509;
  RETCODE_RET_WEATHER_AREA_NOT_FOUND = 510;
  RETCODE_RET_WEATHER_IS_LOCKED = 511;
  RETCODE_RET_NOT_IN_SELF_SCENE = 512;
  RETCODE_RET_GROUP_NOT_EXIST = 513;
  RETCODE_RET_MARK_NAME_ILLEGAL = 514;
  RETCODE_RET_MARK_ALREADY_EXISTS = 515;
  RETCODE_RET_MARK_OVERFLOW = 516;
  RETCODE_RET_MARK_NOT_EXISTS = 517;
  RETCODE_RET_MARK_UNKNOWN_TYPE = 518;
  RETCODE_RET_MARK_NAME_TOO_LONG = 519;
  RETCODE_RET_DISTANCE_LONG = 520;
  RETCODE_RET_ENTER_SCENE_TOKEN_INVALID = 521;
  RETCODE_RET_NOT_IN_WORLD_SCENE = 522;
  RETCODE_RET_ANY_GALLERY_STARTED = 523;
  RETCODE_RET_GALLERY_NOT_START = 524;
  RETCODE_RET_GALLERY_INTERRUPT_ONLY_ON_SINGLE_MODE = 525;
  RETCODE_RET_GALLERY_CANNOT_INTERRUPT = 526;
  RETCODE_RET_GALLERY_WORLD_NOT_MEET = 527;
  RETCODE_RET_GALLERY_SCENE_NOT_MEET = 528;
  RETCODE_RET_CUR_PLAY_CANNOT_TRANSFER = 529;
  RETCODE_RET_CANT_USE_WIDGET_IN_HOME_SCENE = 530;
  RETCODE_RET_SCENE_GROUP_NOT_MATCH = 531;
  RETCODE_RET_POS_ROT_INVALID = 551;
  RETCODE_RET_MARK_INVALID_SCENE_ID = 552;
  RETCODE_RET_INVALID_SCENE_TO_USE_ANCHOR_POINT = 553;
  RETCODE_RET_ENTER_HOME_SCENE_FAIL = 554;
  RETCODE_RET_CUR_SCENE_IS_NULL = 555;
  RETCODE_RET_GROUP_ID_ERROR = 556;
  RETCODE_RET_GALLERY_INTERRUPT_NOT_OWNER = 557;
  RETCODE_RET_NO_SPRING_IN_AREA = 558;
  RETCODE_RET_AREA_NOT_IN_SCENE = 559;
  RETCODE_RET_INVALID_CITY_ID = 560;
  RETCODE_RET_INVALID_SCENE_ID = 561;
  RETCODE_RET_DEST_SCENE_IS_NOT_ALLOW = 562;
  RETCODE_RET_LEVEL_TAG_SWITCH_IN_CD = 563;
  RETCODE_RET_LEVEL_TAG_ALREADY_EXIST = 564;
  RETCODE_RET_INVALID_AREA_ID = 565;
  RETCODE_RET_ITEM_NOT_EXIST = 601;
  RETCODE_RET_PACK_EXCEED_MAX_WEIGHT = 602;
  RETCODE_RET_ITEM_NOT_DROPABLE = 603;
  RETCODE_RET_ITEM_NOT_USABLE = 604;
  RETCODE_RET_ITEM_INVALID_USE_COUNT = 605;
  RETCODE_RET_ITEM_INVALID_DROP_COUNT = 606;
  RETCODE_RET_ITEM_ALREADY_EXIST = 607;
  RETCODE_RET_ITEM_IN_COOLDOWN = 608;
  RETCODE_RET_ITEM_COUNT_NOT_ENOUGH = 609;
  RETCODE_RET_ITEM_INVALID_TARGET = 610;
  RETCODE_RET_RECIPE_NOT_EXIST = 611;
  RETCODE_RET_RECIPE_LOCKED = 612;
  RETCODE_RET_RECIPE_UNLOCKED = 613;
  RETCODE_RET_COMPOUND_QUEUE_FULL = 614;
  RETCODE_RET_COMPOUND_NOT_FINISH = 615;
  RETCODE_RET_MAIL_ITEM_NOT_GET = 616;
  RETCODE_RET_ITEM_EXCEED_LIMIT = 617;
  RETCODE_RET_AVATAR_CAN_NOT_USE = 618;
  RETCODE_RET_ITEM_NEED_PLAYER_LEVEL = 619;
  RETCODE_RET_RECIPE_NOT_AUTO_QTE = 620;
  RETCODE_RET_COMPOUND_BUSY_QUEUE = 621;
  RETCODE_RET_NEED_MORE_SCOIN = 622;
  RETCODE_RET_SKILL_DEPOT_NOT_FOUND = 623;
  RETCODE_RET_HCOIN_NOT_ENOUGH = 624;
  RETCODE_RET_SCOIN_NOT_ENOUGH = 625;
  RETCODE_RET_HCOIN_EXCEED_LIMIT = 626;
  RETCODE_RET_SCOIN_EXCEED_LIMIT = 627;
  RETCODE_RET_MAIL_EXPIRED = 628;
  RETCODE_RET_REWARD_HAS_TAKEN = 629;
  RETCODE_RET_COMBINE_COUNT_TOO_LARGE = 630;
  RETCODE_RET_GIVING_ITEM_WRONG = 631;
  RETCODE_RET_GIVING_IS_FINISHED = 632;
  RETCODE_RET_GIVING_NOT_ACTIVED = 633;
  RETCODE_RET_FORGE_QUEUE_FULL = 634;
  RETCODE_RET_FORGE_QUEUE_CAPACITY = 635;
  RETCODE_RET_FORGE_QUEUE_NOT_FOUND = 636;
  RETCODE_RET_FORGE_QUEUE_EMPTY = 637;
  RETCODE_RET_NOT_SUPPORT_ITEM = 638;
  RETCODE_RET_ITEM_EMPTY = 639;
  RETCODE_RET_VIRTUAL_EXCEED_LIMIT = 640;
  RETCODE_RET_MATERIAL_EXCEED_LIMIT = 641;
  RETCODE_RET_EQUIP_EXCEED_LIMIT = 642;
  RETCODE_RET_ITEM_SHOULD_HAVE_NO_LEVEL = 643;
  RETCODE_RET_WEAPON_PROMOTE_LEVEL_EXCEED_LIMIT = 644;
  RETCODE_RET_WEAPON_LEVEL_INVALID = 645;
  RETCODE_RET_UNKNOW_ITEM_TYPE = 646;
  RETCODE_RET_ITEM_COUNT_IS_ZERO = 647;
  RETCODE_RET_ITEM_IS_EXPIRED = 648;
  RETCODE_RET_ITEM_EXCEED_OUTPUT_LIMIT = 649;
  RETCODE_RET_EQUIP_LEVEL_HIGHER = 650;
  RETCODE_RET_EQUIP_CAN_NOT_WAKE_OFF_WEAPON = 651;
  RETCODE_RET_EQUIP_HAS_BEEN_WEARED = 652;
  RETCODE_RET_EQUIP_WEARED_CANNOT_DROP = 653;
  RETCODE_RET_AWAKEN_LEVEL_MAX = 654;
  RETCODE_RET_MCOIN_NOT_ENOUGH = 655;
  RETCODE_RET_MCOIN_EXCEED_LIMIT = 656;
  RETCODE_RET_RESIN_NOT_ENOUGH = 660;
  RETCODE_RET_RESIN_EXCEED_LIMIT = 661;
  RETCODE_RET_RESIN_OPENSTATE_OFF = 662;
  RETCODE_RET_RESIN_BOUGHT_COUNT_EXCEEDED = 663;
  RETCODE_RET_RESIN_CARD_DAILY_REWARD_HAS_TAKEN = 664;
  RETCODE_RET_RESIN_CARD_EXPIRED = 665;
  RETCODE_RET_AVATAR_CAN_NOT_COOK = 666;
  RETCODE_RET_ATTACH_AVATAR_CD = 667;
  RETCODE_RET_AUTO_RECOVER_OPENSTATE_OFF = 668;
  RETCODE_RET_AUTO_RECOVER_BOUGHT_COUNT_EXCEEDED = 669;
  RETCODE_RET_RESIN_GAIN_FAILED = 670;
  RETCODE_RET_WIDGET_ORNAMENTS_TYPE_ERROR = 671;
  RETCODE_RET_ALL_TARGET_SATIATION_FULL = 672;
  RETCODE_RET_FORGE_WORLD_LEVEL_NOT_MATCH = 673;
  RETCODE_RET_FORGE_POINT_NOT_ENOUGH = 674;
  RETCODE_RET_WIDGET_ANCHOR_POINT_FULL = 675;
  RETCODE_RET_WIDGET_ANCHOR_POINT_NOT_FOUND = 676;
  RETCODE_RET_ALL_BONFIRE_EXCEED_MAX_COUNT = 677;
  RETCODE_RET_BONFIRE_EXCEED_MAX_COUNT = 678;
  RETCODE_RET_LUNCH_BOX_DATA_ERROR = 679;
  RETCODE_RET_INVALID_QUICK_USE_WIDGET = 680;
  RETCODE_RET_INVALID_REPLACE_RESIN_COUNT = 681;
  RETCODE_RET_PREV_DETECTED_GATHER_NOT_FOUND = 682;
  RETCODE_RET_GOT_ALL_ONEOFF_GAHTER = 683;
  RETCODE_RET_INVALID_WIDGET_MATERIAL_ID = 684;
  RETCODE_RET_WIDGET_DETECTOR_NO_HINT_TO_CLEAR = 685;
  RETCODE_RET_WIDGET_ALREADY_WITHIN_NEARBY_RADIUS = 686;
  RETCODE_RET_WIDGET_CLIENT_COLLECTOR_NEED_POINTS = 687;
  RETCODE_RET_WIDGET_IN_COMBAT = 688;
  RETCODE_RET_WIDGET_NOT_SET_QUICK_USE = 689;
  RETCODE_RET_ALREADY_ATTACH_WIDGET = 690;
  RETCODE_RET_EQUIP_IS_LOCKED = 691;
  RETCODE_RET_FORGE_IS_LOCKED = 692;
  RETCODE_RET_COMBINE_IS_LOCKED = 693;
  RETCODE_RET_FORGE_OUTPUT_STACK_LIMIT = 694;
  RETCODE_RET_ALREADY_DETTACH_WIDGET = 695;
  RETCODE_RET_GADGET_BUILDER_EXCEED_MAX_COUNT = 696;
  RETCODE_RET_REUNION_PRIVILEGE_RESIN_TYPE_IS_NORMAL = 697;
  RETCODE_RET_BONUS_COUNT_EXCEED_DOUBLE_LIMIT = 698;
  RETCODE_RET_RELIQUARY_DECOMPOSE_PARAM_ERROR = 699;
  RETCODE_RET_ITEM_COMBINE_COUNT_NOT_ENOUGH = 700;
  RETCODE_RET_GOODS_NOT_EXIST = 701;
  RETCODE_RET_GOODS_MATERIAL_NOT_ENOUGH = 702;
  RETCODE_RET_GOODS_NOT_IN_TIME = 703;
  RETCODE_RET_GOODS_BUY_NUM_NOT_ENOUGH = 704;
  RETCODE_RET_GOODS_BUY_NUM_ERROR = 705;
  RETCODE_RET_SHOP_NOT_OPEN = 706;
  RETCODE_RET_SHOP_CONTENT_NOT_MATCH = 707;
  RETCODE_RET_CHAT_FORBIDDEN = 798;
  RETCODE_RET_CHAT_CD = 799;
  RETCODE_RET_CHAT_FREQUENTLY = 800;
  RETCODE_RET_GADGET_NOT_EXIST = 801;
  RETCODE_RET_GADGET_NOT_INTERACTIVE = 802;
  RETCODE_RET_GADGET_NOT_GATHERABLE = 803;
  RETCODE_RET_CHEST_IS_LOCKED = 804;
  RETCODE_RET_GADGET_CREATE_FAIL = 805;
  RETCODE_RET_WORKTOP_OPTION_NOT_EXIST = 806;
  RETCODE_RET_GADGET_STATUE_NOT_ACTIVE = 807;
  RETCODE_RET_GADGET_STATUE_OPENED = 808;
  RETCODE_RET_BOSS_CHEST_NO_QUALIFICATION = 809;
  RETCODE_RET_BOSS_CHEST_LIFE_TIME_OVER = 810;
  RETCODE_RET_BOSS_CHEST_WEEK_NUM_LIMIT = 811;
  RETCODE_RET_BOSS_CHEST_GUEST_WORLD_LEVEL = 812;
  RETCODE_RET_BOSS_CHEST_HAS_TAKEN = 813;
  RETCODE_RET_BLOSSOM_CHEST_NO_QUALIFICATION = 814;
  RETCODE_RET_BLOSSOM_CHEST_LIFE_TIME_OVER = 815;
  RETCODE_RET_BLOSSOM_CHEST_HAS_TAKEN = 816;
  RETCODE_RET_BLOSSOM_CHEST_GUEST_WORLD_LEVEL = 817;
  RETCODE_RET_MP_PLAY_REWARD_NO_QUALIFICATION = 818;
  RETCODE_RET_MP_PLAY_REWARD_HAS_TAKEN = 819;
  RETCODE_RET_GENERAL_REWARD_NO_QUALIFICATION = 820;
  RETCODE_RET_GENERAL_REWARD_LIFE_TIME_OVER = 821;
  RETCODE_RET_GENERAL_REWARD_HAS_TAKEN = 822;
  RETCODE_RET_GADGET_NOT_VEHICLE = 823;
  RETCODE_RET_VEHICLE_SLOT_OCCUPIED = 824;
  RETCODE_RET_NOT_IN_VEHICLE = 825;
  RETCODE_RET_CREATE_VEHICLE_IN_CD = 826;
  RETCODE_RET_CREATE_VEHICLE_POS_INVALID = 827;
  RETCODE_RET_VEHICLE_POINT_NOT_UNLOCK = 828;
  RETCODE_RET_GADGET_INTERACT_COND_NOT_MEET = 829;
  RETCODE_RET_GADGET_INTERACT_PARAM_ERROR = 830;
  RETCODE_RET_GADGET_CUSTOM_COMBINATION_INVALID = 831;
  RETCODE_RET_ACTIVITY_CLOSE = 860;
  RETCODE_RET_ACTIVITY_ITEM_ERROR = 861;
  RETCODE_RET_ACTIVITY_CONTRIBUTION_NOT_ENOUGH = 862;
  RETCODE_RET_SEA_LAMP_PHASE_NOT_FINISH = 863;
  RETCODE_RET_SEA_LAMP_FLY_NUM_LIMIT = 864;
  RETCODE_RET_SEA_LAMP_FLY_LAMP_WORD_ILLEGAL = 865;
  RETCODE_RET_ACTIVITY_WATCHER_REWARD_TAKEN = 866;
  RETCODE_RET_ACTIVITY_WATCHER_REWARD_NOT_FINISHED = 867;
  RETCODE_RET_SALESMAN_ALREADY_DELIVERED = 868;
  RETCODE_RET_SALESMAN_REWARD_COUNT_NOT_ENOUGH = 869;
  RETCODE_RET_SALESMAN_POSITION_INVALID = 870;
  RETCODE_RET_DELIVER_NOT_FINISH_ALL_QUEST = 871;
  RETCODE_RET_DELIVER_ALREADY_TAKE_DAILY_REWARD = 872;
  RETCODE_RET_ASTER_PROGRESS_EXCEED_LIMIT = 873;
  RETCODE_RET_ASTER_CREDIT_EXCEED_LIMIT = 874;
  RETCODE_RET_ASTER_TOKEN_EXCEED_LIMIT = 875;
  RETCODE_RET_ASTER_CREDIT_NOT_ENOUGH = 876;
  RETCODE_RET_ASTER_TOKEN_NOT_ENOUGH = 877;
  RETCODE_RET_ASTER_SPECIAL_REWARD_HAS_TAKEN = 878;
  RETCODE_RET_FLIGHT_GROUP_ACTIVITY_NOT_STARTED = 879;
  RETCODE_RET_ASTER_MID_PREVIOUS_BATTLE_NOT_FINISHED = 880;
  RETCODE_RET_DRAGON_SPINE_SHIMMERING_ESSENCE_EXCEED_LIMIT = 881;
  RETCODE_RET_DRAGON_SPINE_WARM_ESSENCE_EXCEED_LIMIT = 882;
  RETCODE_RET_DRAGON_SPINE_WONDROUS_ESSENCE_EXCEED_LIMIT = 883;
  RETCODE_RET_DRAGON_SPINE_SHIMMERING_ESSENCE_NOT_ENOUGH = 884;
  RETCODE_RET_DRAGON_SPINE_WARM_ESSENCE_NOT_ENOUGH = 885;
  RETCODE_RET_DRAGON_SPINE_WONDROUS_ESSENCE_NOT_ENOUGH = 886;
  RETCODE_RET_EFFIGY_FIRST_PASS_REWARD_HAS_TAKEN = 891;
  RETCODE_RET_EFFIGY_REWARD_HAS_TAKEN = 892;
  RETCODE_RET_TREASURE_MAP_ADD_TOKEN_EXCEED_LIMIT = 893;
  RETCODE_RET_TREASURE_MAP_TOKEN_NOT_ENOUGHT = 894;
  RETCODE_RET_SEA_LAMP_COIN_EXCEED_LIMIT = 895;
  RETCODE_RET_SEA_LAMP_COIN_NOT_ENOUGH = 896;
  RETCODE_RET_SEA_LAMP_POPULARITY_EXCEED_LIMIT = 897;
  RETCODE_RET_ACTIVITY_AVATAR_REWARD_NOT_OPEN = 898;
  RETCODE_RET_ACTIVITY_AVATAR_REWARD_HAS_TAKEN = 899;
  RETCODE_RET_ARENA_ACTIVITY_ALREADY_STARTED = 900;
  RETCODE_RET_TALENT_ALREAY_UNLOCKED = 901;
  RETCODE_RET_PREV_TALENT_NOT_UNLOCKED = 902;
  RETCODE_RET_BIG_TALENT_POINT_NOT_ENOUGH = 903;
  RETCODE_RET_SMALL_TALENT_POINT_NOT_ENOUGH = 904;
  RETCODE_RET_PROUD_SKILL_ALREADY_GOT = 905;
  RETCODE_RET_PREV_PROUD_SKILL_NOT_GET = 906;
  RETCODE_RET_PROUD_SKILL_MAX_LEVEL = 907;
  RETCODE_RET_CANDIDATE_SKILL_DEPOT_ID_NOT_FIND = 910;
  RETCODE_RET_SKILL_DEPOT_IS_THE_SAME = 911;
  RETCODE_RET_MONSTER_NOT_EXIST = 1001;
  RETCODE_RET_MONSTER_CREATE_FAIL = 1002;
  RETCODE_RET_DUNGEON_ENTER_FAIL = 1101;
  RETCODE_RET_DUNGEON_QUIT_FAIL = 1102;
  RETCODE_RET_DUNGEON_ENTER_EXCEED_DAY_COUNT = 1103;
  RETCODE_RET_DUNGEON_REVIVE_EXCEED_MAX_COUNT = 1104;
  RETCODE_RET_DUNGEON_REVIVE_FAIL = 1105;
  RETCODE_RET_DUNGEON_NOT_SUCCEED = 1106;
  RETCODE_RET_DUNGEON_CAN_NOT_CANCEL = 1107;
  RETCODE_RET_DEST_DUNGEON_SETTLED = 1108;
  RETCODE_RET_DUNGEON_CANDIDATE_TEAM_IS_FULL = 1109;
  RETCODE_RET_DUNGEON_CANDIDATE_TEAM_IS_DISMISS = 1110;
  RETCODE_RET_DUNGEON_CANDIDATE_TEAM_NOT_ALL_READY = 1111;
  RETCODE_RET_DUNGEON_CANDIDATE_TEAM_HAS_REPEAT_AVATAR = 1112;
  RETCODE_RET_DUNGEON_CANDIDATE_NOT_SINGEL_PASS = 1113;
  RETCODE_RET_DUNGEON_REPLAY_NEED_ALL_PLAYER_DIE = 1114;
  RETCODE_RET_DUNGEON_REPLAY_HAS_REVIVE_COUNT = 1115;
  RETCODE_RET_DUNGEON_OTHERS_LEAVE = 1116;
  RETCODE_RET_DUNGEON_ENTER_LEVEL_LIMIT = 1117;
  RETCODE_RET_DUNGEON_CANNOT_ENTER_PLOT_IN_MP = 1118;
  RETCODE_RET_DUNGEON_DROP_SUBFIELD_LIMIT = 1119;
  RETCODE_RET_DUNGEON_BE_INVITE_PLAYER_AVATAR_ALL_DIE = 1120;
  RETCODE_RET_DUNGEON_CANNOT_KICK = 1121;
  RETCODE_RET_DUNGEON_CANDIDATE_TEAM_SOMEONE_LEVEL_LIMIT = 1122;
  RETCODE_RET_DUNGEON_IN_FORCE_QUIT = 1123;
  RETCODE_RET_DUNGEON_GUEST_QUIT_DUNGEON = 1124;
  RETCODE_RET_DUNGEON_TICKET_FAIL = 1125;
  RETCODE_RET_MP_NOT_IN_MY_WORLD = 1201;
  RETCODE_RET_MP_IN_MP_MODE = 1202;
  RETCODE_RET_MP_SCENE_IS_FULL = 1203;
  RETCODE_RET_MP_MODE_NOT_AVAILABLE = 1204;
  RETCODE_RET_MP_PLAYER_NOT_ENTERABLE = 1205;
  RETCODE_RET_MP_QUEST_BLOCK_MP = 1206;
  RETCODE_RET_MP_IN_ROOM_SCENE = 1207;
  RETCODE_RET_MP_WORLD_IS_FULL = 1208;
  RETCODE_RET_MP_PLAYER_NOT_ALLOW_ENTER = 1209;
  RETCODE_RET_MP_PLAYER_DISCONNECTED = 1210;
  RETCODE_RET_MP_NOT_IN_MP_MODE = 1211;
  RETCODE_RET_MP_OWNER_NOT_ENTER = 1212;
  RETCODE_RET_MP_ALLOW_ENTER_PLAYER_FULL = 1213;
  RETCODE_RET_MP_TARGET_PLAYER_IN_TRANSFER = 1214;
  RETCODE_RET_MP_TARGET_ENTERING_OTHER = 1215;
  RETCODE_RET_MP_OTHER_ENTERING = 1216;
  RETCODE_RET_MP_ENTER_MAIN_PLAYER_IN_PLOT = 1217;
  RETCODE_RET_MP_NOT_PS_PLAYER = 1218;
  RETCODE_RET_MP_PLAY_NOT_ACTIVE = 1219;
  RETCODE_RET_MP_PLAY_REMAIN_REWARDS = 1220;
  RETCODE_RET_MP_PLAY_NO_REWARD = 1221;
  RETCODE_RET_MP_OPEN_STATE_FAIL = 1223;
  RETCODE_RET_MP_PLAYER_IN_BLACKLIST = 1224;
  RETCODE_RET_MP_REPLY_TIMEOUT = 1225;
  RETCODE_RET_MP_IS_BLOCK = 1226;
  RETCODE_RET_MP_ENTER_MAIN_PLAYER_IN_MP_PLAY = 1227;
  RETCODE_RET_MP_IN_MP_PLAY_BATTLE = 1228;
  RETCODE_RET_MP_GUEST_HAS_REWARD_REMAINED = 1229;
  RETCODE_RET_MP_QUIT_MP_INVALID = 1230;
  RETCODE_RET_MP_OTHER_DATA_VERSION_NOT_LATEST = 1231;
  RETCODE_RET_MP_DATA_VERSION_NOT_LATEST = 1232;
  RETCODE_RET_MP_CUR_WORLD_NOT_ENTERABLE = 1233;
  RETCODE_RET_MP_ANY_GALLERY_STARTED = 1234;
  RETCODE_RET_MP_HAS_ACTIVE_DRAFT = 1235;
  RETCODE_RET_MP_PLAYER_IN_DUNGEON = 1236;
  RETCODE_RET_MP_MATCH_FULL = 1237;
  RETCODE_RET_MP_MATCH_LIMIT = 1238;
  RETCODE_RET_MP_MATCH_IN_PUNISH = 1239;
  RETCODE_RET_MP_IS_IN_MULTISTAGE = 1240;
  RETCODE_RET_MP_MATCH_PLAY_NOT_OPEN = 1241;
  RETCODE_RET_MP_ONLY_MP_WITH_PS_PLAYER = 1242;
  RETCODE_RET_MP_GUEST_LOADING_FIRST_ENTER = 1243;
  RETCODE_RET_MP_SUMMER_TIME_SPRINT_BOAT_ONGOING = 1244;
  RETCODE_RET_MP_BLITZ_RUSH_PARKOUR_CHALLENGE_ONGOING = 1245;
  RETCODE_RET_MP_MUSIC_GAME_ONGOING = 1246;
  RETCODE_RET_MP_IN_MPING_MODE = 1247;
  RETCODE_RET_MP_OWNER_IN_SINGLE_SCENE = 1248;
  RETCODE_RET_MP_IN_SINGLE_SCENE = 1249;
  RETCODE_RET_MP_REPLY_NO_VALID_AVATAR = 1250;
  RETCODE_RET_MAIL_PARA_ERR = 1301;
  RETCODE_RET_MAIL_MAX_NUM = 1302;
  RETCODE_RET_MAIL_ITEM_NUM_EXCEED = 1303;
  RETCODE_RET_MAIL_TITLE_LEN_EXCEED = 1304;
  RETCODE_RET_MAIL_CONTENT_LEN_EXCEED = 1305;
  RETCODE_RET_MAIL_SENDER_LEN_EXCEED = 1306;
  RETCODE_RET_MAIL_PARSE_PACKET_FAIL = 1307;
  RETCODE_RET_OFFLINE_MSG_MAX_NUM = 1308;
  RETCODE_RET_OFFLINE_MSG_SAME_TICKET = 1309;
  RETCODE_RET_MAIL_EXCEL_MAIL_TYPE_ERROR = 1310;
  RETCODE_RET_MAIL_CANNOT_SEND_MCOIN = 1311;
  RETCODE_RET_MAIL_HCOIN_EXCEED_LIMIT = 1312;
  RETCODE_RET_MAIL_SCOIN_EXCEED_LIMIT = 1313;
  RETCODE_RET_MAIL_MATERIAL_ID_INVALID = 1314;
  RETCODE_RET_MAIL_AVATAR_EXCEED_LIMIT = 1315;
  RETCODE_RET_MAIL_GACHA_TICKET_ETC_EXCEED_LIMIT = 1316;
  RETCODE_RET_MAIL_ITEM_EXCEED_CEHUA_LIMIT = 1317;
  RETCODE_RET_MAIL_SPACE_OR_REST_NUM_NOT_ENOUGH = 1318;
  RETCODE_RET_MAIL_TICKET_IS_EMPTY = 1319;
  RETCODE_RET_MAIL_TRANSACTION_IS_EMPTY = 1320;
  RETCODE_RET_MAIL_DELETE_COLLECTED = 1321;
  RETCODE_RET_DAILY_TASK_NOT_FINISH = 1330;
  RETCODE_RET_DAILY_TAKS_HAS_TAKEN = 1331;
  RETCODE_RET_SOCIAL_OFFLINE_MSG_NUM_EXCEED = 1332;
  RETCODE_RET_DAILY_TASK_FILTER_CITY_NOT_OPEN = 1333;
  RETCODE_RET_GACHA_INAVAILABLE = 1401;
  RETCODE_RET_GACHA_RANDOM_NOT_MATCH = 1402;
  RETCODE_RET_GACHA_SCHEDULE_NOT_MATCH = 1403;
  RETCODE_RET_GACHA_INVALID_TIMES = 1404;
  RETCODE_RET_GACHA_COST_ITEM_NOT_ENOUGH = 1405;
  RETCODE_RET_GACHA_TIMES_LIMIT = 1406;
  RETCODE_RET_GACHA_WISH_SAME_ITEM = 1407;
  RETCODE_RET_GACHA_WISH_INVALID_ITEM = 1408;
  RETCODE_RET_GACHA_MINORS_TIMES_LIMIT = 1409;
  RETCODE_RET_INVESTIGAITON_NOT_IN_PROGRESS = 1501;
  RETCODE_RET_INVESTIGAITON_UNCOMPLETE = 1502;
  RETCODE_RET_INVESTIGAITON_REWARD_TAKEN = 1503;
  RETCODE_RET_INVESTIGAITON_TARGET_STATE_ERROR = 1504;
  RETCODE_RET_PUSH_TIPS_NOT_FOUND = 1505;
  RETCODE_RET_SIGN_IN_RECORD_NOT_FOUND = 1506;
  RETCODE_RET_ALREADY_HAVE_SIGNED_IN = 1507;
  RETCODE_RET_SIGN_IN_COND_NOT_SATISFIED = 1508;
  RETCODE_RET_BONUS_ACTIVITY_NOT_UNREWARDED = 1509;
  RETCODE_RET_SIGN_IN_REWARDED = 1510;
  RETCODE_RET_TOWER_NOT_OPEN = 1521;
  RETCODE_RET_TOWER_HAVE_DAILY_RECORD = 1522;
  RETCODE_RET_TOWER_NOT_RECORD = 1523;
  RETCODE_RET_TOWER_HAVE_RECORD = 1524;
  RETCODE_RET_TOWER_TEAM_NUM_ERROR = 1525;
  RETCODE_RET_TOWER_FLOOR_NOT_OPEN = 1526;
  RETCODE_RET_TOWER_NO_FLOOR_STAR_RECORD = 1527;
  RETCODE_RET_ALREADY_HAS_TOWER_BUFF = 1528;
  RETCODE_RET_DUPLICATE_ENTER_LEVEL = 1529;
  RETCODE_RET_NOT_IN_TOWER_LEVEL = 1530;
  RETCODE_RET_IN_TOWER_LEVEL = 1531;
  RETCODE_RET_TOWER_PREV_FLOOR_NOT_FINISH = 1532;
  RETCODE_RET_TOWER_STAR_NOT_ENOUGH = 1533;
  RETCODE_RET_BATTLE_PASS_NO_SCHEDULE = 1541;
  RETCODE_RET_BATTLE_PASS_HAS_BUYED = 1542;
  RETCODE_RET_BATTLE_PASS_LEVEL_OVERFLOW = 1543;
  RETCODE_RET_BATTLE_PASS_PRODUCT_EXPIRED = 1544;
  RETCODE_RET_MATCH_HOST_QUIT = 1561;
  RETCODE_RET_MATCH_ALREADY_IN_MATCH = 1562;
  RETCODE_RET_MATCH_NOT_IN_MATCH = 1563;
  RETCODE_RET_MATCH_APPLYING_ENTER_MP = 1564;
  RETCODE_RET_WIDGET_TREASURE_SPOT_NOT_FOUND = 1581;
  RETCODE_RET_WIDGET_TREASURE_ENTITY_EXISTS = 1582;
  RETCODE_RET_WIDGET_TREASURE_SPOT_FAR_AWAY = 1583;
  RETCODE_RET_WIDGET_TREASURE_FINISHED_TODAY = 1584;
  RETCODE_RET_WIDGET_QUICK_USE_REQ_PARAM_ERROR = 1585;
  RETCODE_RET_WIDGET_CAMERA_SCAN_ID_ERROR = 1586;
  RETCODE_RET_WIDGET_NOT_ACTIVE = 1587;
  RETCODE_RET_WIDGET_FEATHER_NOT_ACTIVE = 1588;
  RETCODE_RET_WIDGET_FEATHER_GADGET_TOO_FAR_AWAY = 1589;
  RETCODE_RET_WIDGET_CAPTURE_ANIMAL_NOT_EXIST = 1590;
  RETCODE_RET_WIDGET_CAPTURE_ANIMAL_DROP_BAG_LIMIT = 1591;
  RETCODE_RET_WIDGET_CAPTURE_ANIMAL_CAN_NOT_CAPTURE = 1592;
  RETCODE_RET_WIDGET_SKY_CRYSTAL_ALL_COLLECTED = 1593;
  RETCODE_RET_WIDGET_SKY_CRYSTAL_HINT_ALREADY_EXIST = 1594;
  RETCODE_RET_WIDGET_SKY_CRYSTAL_NOT_FOUND = 1595;
  RETCODE_RET_WIDGET_SKY_CRYSTAL_NO_HINT_TO_CLEAR = 1596;
  RETCODE_RET_WIDGET_LIGHT_STONE_ENERGY_NOT_ENOUGH = 1597;
  RETCODE_RET_WIDGET_TOY_CRYSTAL_ENERGY_NOT_ENOUGH = 1598;
  RETCODE_RET_WIDGET_LIGHT_STONE_LEVEL_NOT_ENOUGH = 1599;
  RETCODE_RET_UID_NOT_EXIST = 2001;
  RETCODE_RET_PARSE_BIN_ERROR = 2002;
  RETCODE_RET_ACCOUNT_INFO_NOT_EXIST = 2003;
  RETCODE_RET_ORDER_INFO_NOT_EXIST = 2004;
  RETCODE_RET_SNAPSHOT_INDEX_ERROR = 2005;
  RETCODE_RET_MAIL_HAS_BEEN_SENT = 2006;
  RETCODE_RET_PRODUCT_NOT_EXIST = 2007;
  RETCODE_RET_UNFINISH_ORDER = 2008;
  RETCODE_RET_ID_NOT_EXIST = 2009;
  RETCODE_RET_ORDER_TRADE_EARLY = 2010;
  RETCODE_RET_ORDER_FINISHED = 2011;
  RETCODE_RET_GAMESERVER_VERSION_WRONG = 2012;
  RETCODE_RET_OFFLINE_OP_FULL_LENGTH = 2013;
  RETCODE_RET_CONCERT_PRODUCT_OBTAIN_LIMIT = 2014;
  RETCODE_RET_CONCERT_PRODUCT_TICKET_DUPLICATED = 2015;
  RETCODE_RET_CONCERT_PRODUCT_TICKET_EMPTY = 2016;
  RETCODE_RET_REDIS_MODIFIED = 5001;
  RETCODE_RET_REDIS_UID_NOT_EXIST = 5002;
  RETCODE_RET_PATHFINDING_DATA_NOT_EXIST = 6001;
  RETCODE_RET_PATHFINDING_DESTINATION_NOT_EXIST = 6002;
  RETCODE_RET_PATHFINDING_ERROR_SCENE = 6003;
  RETCODE_RET_PATHFINDING_SCENE_DATA_LOADING = 6004;
  RETCODE_RET_FRIEND_COUNT_EXCEEDED = 7001;
  RETCODE_RET_PLAYER_NOT_EXIST = 7002;
  RETCODE_RET_ALREADY_SENT_ADD_REQUEST = 7003;
  RETCODE_RET_ASK_FRIEND_LIST_FULL = 7004;
  RETCODE_RET_PLAYER_ALREADY_IS_FRIEND = 7005;
  RETCODE_RET_PLAYER_NOT_ASK_FRIEND = 7006;
  RETCODE_RET_TARGET_FRIEND_COUNT_EXCEED = 7007;
  RETCODE_RET_NOT_FRIEND = 7008;
  RETCODE_RET_BIRTHDAY_CANNOT_BE_SET_TWICE = 7009;
  RETCODE_RET_CANNOT_ADD_SELF_FRIEND = 7010;
  RETCODE_RET_SIGNATURE_ILLEGAL = 7011;
  RETCODE_RET_PS_PLAYER_CANNOT_ADD_FRIENDS = 7012;
  RETCODE_RET_PS_PLAYER_CANNOT_REMOVE_FRIENDS = 7013;
  RETCODE_RET_NAME_CARD_NOT_UNLOCKED = 7014;
  RETCODE_RET_ALREADY_IN_BLACKLIST = 7015;
  RETCODE_RET_PS_PALEYRS_CANNOT_ADD_BLACKLIST = 7016;
  RETCODE_RET_PLAYER_BLACKLIST_FULL = 7017;
  RETCODE_RET_PLAYER_NOT_IN_BLACKLIST = 7018;
  RETCODE_RET_BLACKLIST_PLAYER_CANNOT_ADD_FRIEND = 7019;
  RETCODE_RET_IN_TARGET_BLACKLIST = 7020;
  RETCODE_RET_CANNOT_ADD_TARGET_FRIEND = 7021;
  RETCODE_RET_BIRTHDAY_FORMAT_ERROR = 7022;
  RETCODE_RET_ONLINE_ID_NOT_EXISTS = 7023;
  RETCODE_RET_FIRST_SHARE_REWARD_HAS_TAKEN = 7024;
  RETCODE_RET_PS_PLAYER_CANNOT_REMOVE_BLACKLIST = 7025;
  RETCODE_RET_REPORT_CD = 7026;
  RETCODE_RET_REPORT_CONTENT_ILLEGAL = 7027;
  RETCODE_RET_REMARK_WORD_ILLEGAL = 7028;
  RETCODE_RET_REMARK_TOO_LONG = 7029;
  RETCODE_RET_REMARK_UTF_8_ERROR = 7030;
  RETCODE_RET_REMARK_IS_EMPTY = 7031;
  RETCODE_RET_ASK_ADD_FRIEND_CD = 7032;
  RETCODE_RET_SHOW_AVATAR_INFO_NOT_EXIST = 7033;
  RETCODE_RET_PLAYER_NOT_SHOW_AVATAR = 7034;
  RETCODE_RET_SOCIAL_UPDATE_SHOW_LIST_REPEAT_ID = 7035;
  RETCODE_RET_PSN_ID_NOT_FOUND = 7036;
  RETCODE_RET_EMOJI_COLLECTION_NUM_EXCEED_LIMIT = 7037;
  RETCODE_RET_REMARK_EMPTY = 7038;
  RETCODE_RET_IN_TARGET_PSN_BLACKLIST = 7039;
  RETCODE_RET_SIGNATURE_NOT_CHANGED = 7040;
  RETCODE_RET_SIGNATURE_MONTHLY_LIMIT = 7041;
  RETCODE_RET_OFFERING_NOT_OPEN = 7081;
  RETCODE_RET_OFFERING_LEVEL_LIMIT = 7082;
  RETCODE_RET_OFFERING_LEVEL_NOT_REACH = 7083;
  RETCODE_RET_OFFERING_LEVEL_HAS_TAKEN = 7084;
  RETCODE_RET_CITY_REPUTATION_NOT_OPEN = 7101;
  RETCODE_RET_CITY_REPUTATION_LEVEL_TAKEN = 7102;
  RETCODE_RET_CITY_REPUTATION_LEVEL_NOT_REACH = 7103;
  RETCODE_RET_CITY_REPUTATION_PARENT_QUEST_TAKEN = 7104;
  RETCODE_RET_CITY_REPUTATION_PARENT_QUEST_UNFINISH = 7105;
  RETCODE_RET_CITY_REPUTATION_ACCEPT_REQUEST = 7106;
  RETCODE_RET_CITY_REPUTATION_NOT_ACCEPT_REQUEST = 7107;
  RETCODE_RET_CITY_REPUTATION_ACCEPT_REQUEST_LIMIT = 7108;
  RETCODE_RET_CITY_REPUTATION_ENTRANCE_NOT_OPEN = 7109;
  RETCODE_RET_CITY_REPUTATION_TAKEN_REQUEST_REWARD = 7110;
  RETCODE_RET_CITY_REPUTATION_SWITCH_CLOSE = 7111;
  RETCODE_RET_CITY_REPUTATION_ENTRACE_SWITCH_CLOSE = 7112;
  RETCODE_RET_CITY_REPUTATION_TAKEN_EXPLORE_REWARD = 7113;
  RETCODE_RET_CITY_REPUTATION_EXPLORE_NOT_REACH = 7114;
  RETCODE_RET_MECHANICUS_NOT_OPEN = 7120;
  RETCODE_RET_MECHANICUS_GEAR_UNLOCK = 7121;
  RETCODE_RET_MECHANICUS_GEAR_LOCK = 7122;
  RETCODE_RET_MECHANICUS_GEAR_LEVEL_LIMIT = 7123;
  RETCODE_RET_MECHANICUS_COIN_NOT_ENOUGH = 7124;
  RETCODE_RET_MECHANICUS_NO_SEQUENCE = 7125;
  RETCODE_RET_MECHANICUS_SEQUENCE_LIMIT_LEVEL = 7126;
  RETCODE_RET_MECHANICUS_SEQUENCE_LIMIT_OPEN = 7127;
  RETCODE_RET_MECHANICUS_DIFFICULT_NOT_SUPPORT = 7128;
  RETCODE_RET_MECHANICUS_TICKET_NOT_ENOUGH = 7129;
  RETCODE_RET_MECHANICUS_TEACH_NOT_FINISH = 7130;
  RETCODE_RET_MECHANICUS_TEACH_FINISHED = 7131;
  RETCODE_RET_MECHANICUS_PREV_DIFFICULT_LEVEL_BLOCK = 7132;
  RETCODE_RET_MECHANICUS_PLAYER_LIMIT = 7133;
  RETCODE_RET_MECHANICUS_PUNISH_TIME = 7134;
  RETCODE_RET_MECHANICUS_SWITCH_CLOSE = 7135;
  RETCODE_RET_MECHANICUS_BATTLE_NOT_IN_DUNGEON = 7150;
  RETCODE_RET_MECHANICUS_BATTLE_PLAY_NOT_FOUND = 7151;
  RETCODE_RET_MECHANICUS_BATTLE_DUPLICATE_PICK_CARD = 7152;
  RETCODE_RET_MECHANICUS_BATTLE_PLAYER_NOT_IN_PLAY = 7153;
  RETCODE_RET_MECHANICUS_BATTLE_CARD_NOT_AVAILABLE = 7154;
  RETCODE_RET_MECHANICUS_BATTLE_NOT_IN_CARD_STAGE = 7155;
  RETCODE_RET_MECHANICUS_BATTLE_CARD_IS_WAITING = 7156;
  RETCODE_RET_MECHANICUS_BATTLE_CARD_ALL_CONFIRMED = 7157;
  RETCODE_RET_MECHANICUS_BATTLE_CARD_ALREADY_CONFIRMED = 7158;
  RETCODE_RET_MECHANICUS_BATTLE_CARD_CONFIRMED_BY_OTHER = 7159;
  RETCODE_RET_MECHANICUS_BATTLE_CARD_NOT_ENOUGH_POINTS = 7160;
  RETCODE_RET_MECHANICUS_BATTLE_CARD_ALREADY_SKIPPED = 7161;
  RETCODE_RET_LEGENDARY_KEY_NOT_ENOUGH = 8001;
  RETCODE_RET_LEGENDARY_KEY_EXCEED_LIMIT = 8002;
  RETCODE_RET_DAILY_TASK_NOT_ENOUGH_TO_REDEEM = 8003;
  RETCODE_RET_PERSONAL_LINE_OPEN_STATE_OFF = 8004;
  RETCODE_RET_PERSONAL_LINE_LEVEL_NOT_ENOUGH = 8005;
  RETCODE_RET_PERSONAL_LINE_NOT_OPEN = 8006;
  RETCODE_RET_PERSONAL_LINE_PRE_QUEST_NOT_FINISH = 8007;
  RETCODE_RET_HUNTING_ALREADY_FINISH_OFFER_LIMIT = 8201;
  RETCODE_RET_HUNTING_HAS_UNFINISHED_OFFER = 8202;
  RETCODE_RET_HUNTING_FAILED_OFFER_NOT_CD_READY = 8203;
  RETCODE_RET_HUNTING_NOT_TAKE_OFFER = 8204;
  RETCODE_RET_HUNTING_CANNOT_TAKE_TWICE = 8205;
  RETCODE_RET_RPIVATE_CHAT_INVALID_CONTENT_TYPE = 8901;
  RETCODE_RET_PRIVATE_CHAT_TARGET_IS_NOT_FRIEND = 8902;
  RETCODE_RET_PRIVATE_CHAT_CONTENT_NOT_SUPPORTED = 8903;
  RETCODE_RET_PRIVATE_CHAT_CONTENT_TOO_LONG = 8904;
  RETCODE_RET_PRIVATE_CHAT_PULL_TOO_FAST = 8905;
  RETCODE_RET_PRIVATE_CHAT_REPEAT_READ = 8906;
  RETCODE_RET_PRIVATE_CHAT_READ_NOT_FRIEND = 8907;
  RETCODE_RET_REUNION_FINISHED = 9001;
  RETCODE_RET_REUNION_NOT_ACTIVATED = 9002;
  RETCODE_RET_REUNION_ALREADY_TAKE_FIRST_REWARD = 9003;
  RETCODE_RET_REUNION_SIGN_IN_REWARDED = 9004;
  RETCODE_RET_REUNION_WATCHER_REWARDED = 9005;
  RETCODE_RET_REUNION_WATCHER_NOT_FINISH = 9006;
  RETCODE_RET_REUNION_MISSION_REWARDED = 9007;
  RETCODE_RET_REUNION_MISSION_NOT_FINISH = 9008;
  RETCODE_RET_REUNION_WATCHER_REWARD_NOT_UNLOCKED = 9009;
  RETCODE_RET_BLESSING_CONTENT_CLOSED = 9101;
  RETCODE_RET_BLESSING_NOT_ACTIVE = 9102;
  RETCODE_RET_BLESSING_NOT_TODAY_ENTITY = 9103;
  RETCODE_RET_BLESSING_ENTITY_EXCEED_SCAN_NUM_LIMIT = 9104;
  RETCODE_RET_BLESSING_DAILY_SCAN_NUM_EXCEED_LIMIT = 9105;
  RETCODE_RET_BLESSING_REDEEM_REWARD_NUM_EXCEED_LIMIT = 9106;
  RETCODE_RET_BLESSING_REDEEM_PIC_NUM_NOT_ENOUGH = 9107;
  RETCODE_RET_BLESSING_PIC_NOT_ENOUGH = 9108;
  RETCODE_RET_BLESSING_PIC_HAS_RECEIVED = 9109;
  RETCODE_RET_BLESSING_TARGET_RECV_NUM_EXCEED = 9110;
  RETCODE_RET_FLEUR_FAIR_CREDIT_EXCEED_LIMIT = 9111;
  RETCODE_RET_FLEUR_FAIR_CREDIT_NOT_ENOUGH = 9112;
  RETCODE_RET_FLEUR_FAIR_TOKEN_EXCEED_LIMIT = 9113;
  RETCODE_RET_FLEUR_FAIR_TOKEN_NOT_ENOUGH = 9114;
  RETCODE_RET_FLEUR_FAIR_MINIGAME_NOT_OPEN = 9115;
  RETCODE_RET_FLEUR_FAIR_MUSIC_GAME_DIFFICULTY_NOT_UNLOCK = 9116;
  RETCODE_RET_FLEUR_FAIR_DUNGEON_LOCKED = 9117;
  RETCODE_RET_FLEUR_FAIR_DUNGEON_PUNISH_TIME = 9118;
  RETCODE_RET_FLEUR_FAIR_ONLY_OWNER_CAN_RESTART_MINIGAM = 9119;
  RETCODE_RET_WATER_SPIRIT_COIN_EXCEED_LIMIT = 9120;
  RETCODE_RET_WATER_SPIRIT_COIN_NOT_ENOUGH = 9121;
  RETCODE_RET_REGION_SEARCH_NO_SEARCH = 9122;
  RETCODE_RET_REGION_SEARCH_STATE_ERROR = 9123;
  RETCODE_RET_CHANNELLER_SLAB_LOOP_DUNGEON_STAGE_NOT_OPEN = 9130;
  RETCODE_RET_CHANNELLER_SLAB_LOOP_DUNGEON_NOT_OPEN = 9131;
  RETCODE_RET_CHANNELLER_SLAB_LOOP_DUNGEON_FIRST_PASS_REWARD_HAS_TAKEN = 9132;
  RETCODE_RET_CHANNELLER_SLAB_LOOP_DUNGEON_SCORE_REWARD_HAS_TAKEN = 9133;
  RETCODE_RET_CHANNELLER_SLAB_INVALID_ONE_OFF_DUNGEON = 9134;
  RETCODE_RET_CHANNELLER_SLAB_ONE_OFF_DUNGEON_DONE = 9135;
  RETCODE_RET_CHANNELLER_SLAB_ONE_OFF_DUNGEON_STAGE_NOT_OPEN = 9136;
  RETCODE_RET_CHANNELLER_SLAB_TOKEN_EXCEED_LIMIT = 9137;
  RETCODE_RET_CHANNELLER_SLAB_TOKEN_NOT_ENOUGH = 9138;
  RETCODE_RET_CHANNELLER_SLAB_PLAYER_NOT_IN_ONE_OFF_DUNGEON = 9139;
  RETCODE_RET_MIST_TRIAL_SELECT_CHARACTER_NUM_NOT_ENOUGH = 9150;
  RETCODE_RET_HIDE_AND_SEEK_PLAY_NOT_OPEN = 9160;
  RETCODE_RET_HIDE_AND_SEEK_PLAY_MAP_NOT_OPEN = 9161;
  RETCODE_RET_SUMMER_TIME_DRAFT_WOORD_EXCEED_LIMIT = 9170;
  RETCODE_RET_SUMMER_TIME_DRAFT_WOORD_NOT_ENOUGH = 9171;
  RETCODE_RET_SUMMER_TIME_MINI_HARPASTUM_EXCEED_LIMIT = 9172;
  RETCODE_RET_SUMMER_TIME_MINI_HARPASTUMNOT_ENOUGH = 9173;
  RETCODE_RET_BOUNCE_CONJURING_COIN_EXCEED_LIMIT = 9180;
  RETCODE_RET_BOUNCE_CONJURING_COIN_NOT_ENOUGH = 9181;
  RETCODE_RET_CHESS_TEACH_MAP_FINISHED = 9183;
  RETCODE_RET_CHESS_TEACH_MAP_UNFINISHED = 9184;
  RETCODE_RET_CHESS_COIN_EXCEED_LIMIT = 9185;
  RETCODE_RET_CHESS_COIN_NOT_ENOUGH = 9186;
  RETCODE_RET_CHESS_IN_PUNISH_TIME = 9187;
  RETCODE_RET_CHESS_PREV_MAP_UNFINISHED = 9188;
  RETCODE_RET_CHESS_MAP_LOCKED = 9189;
  RETCODE_RET_BLITZ_RUSH_NOT_OPEN = 9192;
  RETCODE_RET_BLITZ_RUSH_DUNGEON_NOT_OPEN = 9193;
  RETCODE_RET_BLITZ_RUSH_COIN_A_EXCEED_LIMIT = 9194;
  RETCODE_RET_BLITZ_RUSH_COIN_B_EXCEED_LIMIT = 9195;
  RETCODE_RET_BLITZ_RUSH_COIN_A_NOT_ENOUGH = 9196;
  RETCODE_RET_BLITZ_RUSH_COIN_B_NOT_ENOUGH = 9197;
  RETCODE_RET_MIRACLE_RING_VALUE_NOT_ENOUGH = 9201;
  RETCODE_RET_MIRACLE_RING_CD = 9202;
  RETCODE_RET_MIRACLE_RING_REWARD_NOT_TAKEN = 9203;
  RETCODE_RET_MIRACLE_RING_NOT_DELIVER = 9204;
  RETCODE_RET_MIRACLE_RING_DELIVER_EXCEED = 9205;
  RETCODE_RET_MIRACLE_RING_HAS_CREATED = 9206;
  RETCODE_RET_MIRACLE_RING_HAS_NOT_CREATED = 9207;
  RETCODE_RET_MIRACLE_RING_NOT_YOURS = 9208;
  RETCODE_RET_GADGET_FOUNDATION_UNAUTHORIZED = 9251;
  RETCODE_RET_GADGET_FOUNDATION_SCENE_NOT_FOUND = 9252;
  RETCODE_RET_GADGET_FOUNDATION_NOT_IN_INIT_STATE = 9253;
  RETCODE_RET_GADGET_FOUNDATION_BILDING_POINT_NOT_ENOUGHT = 9254;
  RETCODE_RET_GADGET_FOUNDATION_NOT_IN_BUILT_STATE = 9255;
  RETCODE_RET_GADGET_FOUNDATION_OP_NOT_SUPPORTED = 9256;
  RETCODE_RET_GADGET_FOUNDATION_REQ_PLAYER_NOT_IN_SCENE = 9257;
  RETCODE_RET_GADGET_FOUNDATION_LOCKED_BY_ANOTHER_PLAYER = 9258;
  RETCODE_RET_GADGET_FOUNDATION_NOT_LOCKED = 9259;
  RETCODE_RET_GADGET_FOUNDATION_DUPLICATE_LOCK = 9260;
  RETCODE_RET_GADGET_FOUNDATION_PLAYER_NOT_FOUND = 9261;
  RETCODE_RET_GADGET_FOUNDATION_PLAYER_GEAR_NOT_FOUND = 9262;
  RETCODE_RET_GADGET_FOUNDATION_ROTAION_DISABLED = 9263;
  RETCODE_RET_GADGET_FOUNDATION_REACH_DUNGEON_GEAR_LIMIT = 9264;
  RETCODE_RET_GADGET_FOUNDATION_REACH_SINGLE_GEAR_LIMIT = 9265;
  RETCODE_RET_GADGET_FOUNDATION_ROTATION_ON_GOING = 9266;
  RETCODE_RET_OP_ACTIVITY_BONUS_NOT_FOUND = 9301;
  RETCODE_RET_OP_ACTIVITY_NOT_OPEN = 9302;
  RETCODE_RET_MULTISTAGE_PLAY_PLAYER_NOT_IN_SCENE = 9501;
  RETCODE_RET_MULTISTAGE_PLAY_NOT_FOUND = 9502;
  RETCODE_RET_COOP_CHAPTER_NOT_OPEN = 9601;
  RETCODE_RET_COOP_COND_NOT_MEET = 9602;
  RETCODE_RET_COOP_POINT_LOCKED = 9603;
  RETCODE_RET_COOP_NOT_HAVE_PROGRESS = 9604;
  RETCODE_RET_COOP_REWARD_HAS_TAKEN = 9605;
  RETCODE_RET_DRAFT_HAS_ACTIVE_DRAFT = 9651;
  RETCODE_RET_DRAFT_NOT_IN_MY_WORLD = 9652;
  RETCODE_RET_DRAFT_NOT_SUPPORT_MP = 9653;
  RETCODE_RET_DRAFT_PLAYER_NOT_ENOUGH = 9654;
  RETCODE_RET_DRAFT_INCORRECT_SCENE = 9655;
  RETCODE_RET_DRAFT_OTHER_PLAYER_ENTERING = 9656;
  RETCODE_RET_DRAFT_GUEST_IS_TRANSFERRING = 9657;
  RETCODE_RET_DRAFT_GUEST_NOT_IN_DRAFT_SCENE = 9658;
  RETCODE_RET_DRAFT_INVITE_OVER_TIME = 9659;
  RETCODE_RET_DRAFT_TWICE_CONFIRM_OVER_TIMER = 9660;
  RETCODE_RET_HOME_UNKOWN = 9701;
  RETCODE_RET_HOME_INVALID_CLIENT_PARAM = 9702;
  RETCODE_RET_HOME_TARGE_PLAYER_HAS_NO_HOME = 9703;
  RETCODE_RET_HOME_NOT_ONLINE = 9704;
  RETCODE_RET_HOME_PLAYER_FULL = 9705;
  RETCODE_RET_HOME_BLOCKED = 9706;
  RETCODE_RET_HOME_ALREADY_IN_TARGET_HOME_WORLD = 9707;
  RETCODE_RET_HOME_IN_EDIT_MODE = 9708;
  RETCODE_RET_HOME_NOT_IN_EDIT_MODE = 9709;
  RETCODE_RET_HOME_HAS_GUEST = 9710;
  RETCODE_RET_HOME_CANT_ENTER_BY_IN_EDIT_MODE = 9711;
  RETCODE_RET_HOME_CLIENT_PARAM_INVALID = 9712;
  RETCODE_RET_HOME_PLAYER_NOT_IN_HOME_WORLD = 9713;
  RETCODE_RET_HOME_PLAYER_NOT_IN_SELF_HOME_WORLD = 9714;
  RETCODE_RET_HOME_NOT_FOUND_IN_MEM = 9715;
  RETCODE_RET_HOME_PLAYER_IN_HOME_ROOM_SCENE = 9716;
  RETCODE_RET_HOME_HOME_REFUSE_GUEST_ENTER = 9717;
  RETCODE_RET_HOME_OWNER_REFUSE_TO_ENTER_HOME = 9718;
  RETCODE_RET_HOME_OWNER_OFFLINE = 9719;
  RETCODE_RET_HOME_FURNITURE_EXCEED_LIMIT = 9720;
  RETCODE_RET_HOME_FURNITURE_COUNT_NOT_ENOUGH = 9721;
  RETCODE_RET_HOME_IN_TRY_ENTER_PROCESS = 9722;
  RETCODE_RET_HOME_ALREADY_IN_TARGET_SCENE = 9723;
  RETCODE_RET_HOME_COIN_EXCEED_LIMIT = 9724;
  RETCODE_RET_HOME_COIN_NOT_ENOUGH = 9725;
  RETCODE_RET_HOME_MODULE_NOT_UNLOCKED = 9726;
  RETCODE_RET_HOME_CUR_MODULE_CLOSED = 9727;
  RETCODE_RET_HOME_FURNITURE_SUITE_NOT_UNLOCKED = 9728;
  RETCODE_RET_HOME_IN_MATCH = 9729;
  RETCODE_RET_HOME_IN_COMBAT = 9730;
  RETCODE_RET_HOME_EDIT_MODE_CD = 9731;
  RETCODE_RET_HOME_UPDATE_FURNITURE_CD = 9732;
  RETCODE_RET_HOME_BLOCK_FURNITURE_LIMIT = 9733;
  RETCODE_RET_HOME_NOT_SUPPORT = 9734;
  RETCODE_RET_HOME_STATE_NOT_OPEN = 9735;
  RETCODE_RET_HOME_TARGET_STATE_NOT_OPEN = 9736;
  RETCODE_RET_HOME_APPLY_ENTER_OTHER_HOME_FAIL = 9737;
  RETCODE_RET_HOME_SAVE_NO_MAIN_HOUSE = 9738;
  RETCODE_RET_HOME_IN_DUNGEON = 9739;
  RETCODE_RET_HOME_ANY_GALLERY_STARTED = 9740;
  RETCODE_RET_HOME_QUEST_BLOCK_HOME = 9741;
  RETCODE_RET_HOME_WAITING_PRIOR_CHECK = 9742;
  RETCODE_RET_HOME_PERSISTENT_CHECK_FAIL = 9743;
  RETCODE_RET_HOME_FIND_ONLINE_HOME_FAIL = 9744;
  RETCODE_RET_HOME_JOIN_SCENE_FAIL = 9745;
  RETCODE_RET_HOME_MAX_PLAYER = 9746;
  RETCODE_RET_HOME_IN_TRANSFER = 9747;
  RETCODE_RET_HOME_ANY_HOME_GALLERY_STARTED = 9748;
  RETCODE_RET_HOME_CAN_NOT_ENTER_IN_AUDIT = 9749;
  RETCODE_RET_FURNITURE_MAKE_INDEX_ERROR = 9750;
  RETCODE_RET_FURNITURE_MAKE_LOCKED = 9751;
  RETCODE_RET_FURNITURE_MAKE_CONFIG_ERROR = 9752;
  RETCODE_RET_FURNITURE_MAKE_SLOT_FULL = 9753;
  RETCODE_RET_FURNITURE_MAKE_ADD_FURNITURE_FAIL = 9754;
  RETCODE_RET_FURNITURE_MAKE_UNFINISH = 9755;
  RETCODE_RET_FURNITURE_MAKE_IS_FINISH = 9756;
  RETCODE_RET_FURNITURE_MAKE_NOT_IN_CORRECT_HOME = 9757;
  RETCODE_RET_FURNITURE_MAKE_NO_COUNT = 9758;
  RETCODE_RET_FURNITURE_MAKE_ACCELERATE_LIMIT = 9759;
  RETCODE_RET_FURNITURE_MAKE_NO_MAKE_DATA = 9760;
  RETCODE_RET_HOME_LIMITED_SHOP_CLOSE = 9761;
  RETCODE_RET_HOME_AVATAR_NOT_SHOW = 9762;
  RETCODE_RET_HOME_EVENT_COND_NOT_SATISFIED = 9763;
  RETCODE_RET_HOME_INVALID_ARRANGE_ANIMAL_PARAM = 9764;
  RETCODE_RET_HOME_INVALID_ARRANGE_NPC_PARAM = 9765;
  RETCODE_RET_HOME_INVALID_ARRANGE_SUITE_PARAM = 9766;
  RETCODE_RET_HOME_INVALID_ARRANGE_MAIN_HOUSE_PARAM = 9767;
  RETCODE_RET_HOME_AVATAR_STATE_NOT_OPEN = 9768;
  RETCODE_RET_HOME_PLANT_FIELD_NOT_EMPTY = 9769;
  RETCODE_RET_HOME_PLANT_FIELD_EMPTY = 9770;
  RETCODE_RET_HOME_PLANT_FIELD_TYPE_ERROR = 9771;
  RETCODE_RET_HOME_PLANT_TIME_NOT_ENOUGH = 9772;
  RETCODE_RET_HOME_PLANT_SUB_FIELD_NUM_NOT_ENOUGH = 9773;
  RETCODE_RET_HOME_PLANT_FIELD_PARAM_ERROR = 9774;
  RETCODE_RET_HOME_FURNITURE_GUID_ERROR = 9775;
  RETCODE_RET_HOME_FURNITURE_ARRANGE_LIMIT = 9776;
  RETCODE_RET_HOME_FISH_FARMING_LIMIT = 9777;
  RETCODE_RET_HOME_FISH_COUNT_NOT_ENOUGH = 9778;
  RETCODE_RET_HOME_FURNITURE_COST_LIMIT = 9779;
  RETCODE_RET_HOME_CUSTOM_FURNITURE_INVALID = 9780;
  RETCODE_RET_HOME_INVALID_ARRANGE_GROUP_PARAM = 9781;
  RETCODE_RET_HOME_FURNITURE_ARRANGE_GROUP_LIMIT = 9782;
  RETCODE_RET_HOME_PICTURE_FRAME_COOP_CG_GENDER_ERROR = 9783;
  RETCODE_RET_HOME_PICTURE_FRAME_COOP_CG_NOT_UNLOCK = 9784;
  RETCODE_RET_HOME_FURNITURE_CANNOT_ARRANGE = 9785;
  RETCODE_RET_HOME_FURNITURE_IN_DUPLICATE_SUITE = 9786;
  RETCODE_RET_HOME_FURNITURE_CUSTOM_SUITE_TOO_SMALL = 9787;
  RETCODE_RET_HOME_FURNITURE_CUSTOM_SUITE_TOO_BIG = 9788;
  RETCODE_RET_HOME_FURNITURE_SUITE_EXCEED_LIMIT = 9789;
  RETCODE_RET_HOME_FURNITURE_CUSTOM_SUITE_EXCEED_LIMIT = 9790;
  RETCODE_RET_HOME_FURNITURE_CUSTOM_SUITE_INVALID_SURFACE_TYPE = 9791;
  RETCODE_RET_HOME_BGM_ID_NOT_FOUND = 9792;
  RETCODE_RET_HOME_BGM_NOT_UNLOCKED = 9793;
  RETCODE_RET_HOME_BGM_FURNITURE_NOT_FOUND = 9794;
  RETCODE_RET_HOME_BGM_NOT_SUPPORT_BY_CUR_SCENE = 9795;
  RETCODE_RET_HOME_LIMITED_SHOP_GOODS_DISABLE = 9796;
  RETCODE_RET_SUMO_ACTIVITY_STAGE_NOT_OPEN = 10000;
  RETCODE_RET_SUMO_ACTIVITY_SWITCH_TEAM_IN_CD = 10001;
  RETCODE_RET_SUMO_ACTIVITY_TEAM_NUM_INCORRECT = 10002;
  RETCODE_RET_LUNA_RITE_ACTIVITY_AREA_ID_ERROR = 10004;
  RETCODE_RET_LUNA_RITE_ACTIVITY_BATTLE_NOT_FINISH = 10005;
  RETCODE_RET_LUNA_RITE_ACTIVITY_ALREADY_SACRIFICE = 10006;
  RETCODE_RET_LUNA_RITE_ACTIVITY_ALREADY_TAKE_REWARD = 10007;
  RETCODE_RET_LUNA_RITE_ACTIVITY_SACRIFICE_NOT_ENOUGH = 10008;
  RETCODE_RET_LUNA_RITE_ACTIVITY_SEARCHING_COND_NOT_MEET = 10009;
  RETCODE_RET_DIG_GADGET_CONFIG_ID_NOT_MATCH = 10015;
  RETCODE_RET_DIG_FIND_NEAREST_POS_FAIL = 10016;
  RETCODE_RET_MUSIC_GAME_LEVEL_NOT_OPEN = 10021;
  RETCODE_RET_MUSIC_GAME_LEVEL_NOT_UNLOCK = 10022;
  RETCODE_RET_MUSIC_GAME_LEVEL_NOT_STARTED = 10023;
  RETCODE_RET_MUSIC_GAME_LEVEL_CONFIG_NOT_FOUND = 10024;
  RETCODE_RET_MUSIC_GAME_LEVEL_ID_NOT_MATCH = 10025;
  RETCODE_RET_ROGUELIKE_COIN_A_NOT_ENOUGH = 10031;
  RETCODE_RET_ROGUELIKE_COIN_B_NOT_ENOUGH = 10032;
  RETCODE_RET_ROGUELIKE_COIN_C_NOT_ENOUGH = 10033;
  RETCODE_RET_ROGUELIKE_COIN_A_EXCEED_LIMIT = 10034;
  RETCODE_RET_ROGUELIKE_COIN_B_EXCEED_LIMIT = 10035;
  RETCODE_RET_ROGUELIKE_COIN_C_EXCEED_LIMIT = 10036;
  RETCODE_RET_ROGUELIKE_RUNE_COUNT_NOT_ENOUGH = 10037;
  RETCODE_RET_ROGUELIKE_NOT_IN_ROGUE_DUNGEON = 10038;
  RETCODE_RET_ROGUELIKE_CELL_NOT_FOUND = 10039;
  RETCODE_RET_ROGUELIKE_CELL_TYPE_INCORRECT = 10040;
  RETCODE_RET_ROGUELIKE_CELL_ALREADY_FINISHED = 10041;
  RETCODE_RET_ROGUELIKE_DUNGEON_HAVE_UNFINISHED_PROGRESS = 10042;
  RETCODE_RET_ROGUELIKE_STAGE_NOT_FINISHED = 10043;
  RETCODE_RET_ROGUELIKE_STAGE_FIRST_PASS_REWARD_HAS_TAKEN = 10045;
  RETCODE_RET_ROGUELIKE_ACTIVITY_CONTENT_CLOSED = 10046;
  RETCODE_RET_ROGUELIKE_DUNGEON_PRE_QUEST_NOT_FINISHED = 10047;
  RETCODE_RET_ROGUELIKE_DUNGEON_NOT_OPEN = 10048;
  RETCODE_RET_ROGUELIKE_SPRINT_IS_BANNED = 10049;
  RETCODE_RET_ROGUELIKE_DUNGEON_PRE_STAGE_NOT_FINISHED = 10050;
  RETCODE_RET_ROGUELIKE_ALL_AVATAR_DIE_CANNOT_RESUME = 10051;
  RETCODE_RET_PLANT_FLOWER_ALREADY_TAKE_SEED = 10056;
  RETCODE_RET_PLANT_FLOWER_FRIEND_HAVE_FLOWER_LIMIT = 10057;
  RETCODE_RET_PLANT_FLOWER_CAN_GIVE_FLOWER_NOT_ENOUGH = 10058;
  RETCODE_RET_PLANT_FLOWER_WISH_FLOWER_KINDS_LIMIT = 10059;
  RETCODE_RET_PLANT_FLOWER_HAVE_FLOWER_NOT_ENOUGH = 10060;
  RETCODE_RET_PLANT_FLOWER_FLOWER_COMBINATION_INVALID = 10061;
  RETCODE_RET_HACHI_DUNGEON_NOT_VALID = 10052;
  RETCODE_RET_HACHI_DUNGEON_STAGE_NOT_OPEN = 10053;
  RETCODE_RET_HACHI_DUNGEON_TEAMMATE_NOT_PASS = 10054;
  RETCODE_RET_WINTER_CAMP_COIN_A_NOT_ENOUGH = 10071;
  RETCODE_RET_WINTER_CAMP_COIN_B_NOT_ENOUGH = 10072;
  RETCODE_RET_WINTER_CAMP_COIN_A_EXCEED_LIMIT = 10073;
  RETCODE_RET_WINTER_CAMP_COIN_B_EXCEED_LIMIT = 10074;
  RETCODE_RET_WINTER_CAMP_WISH_ID_INVALID = 10075;
  RETCODE_RET_WINTER_CAMP_NOT_FOUND_RECV_ITEM_DATA = 10076;
  RETCODE_RET_WINTER_CAMP_FRIEND_ITEM_COUNT_OVERFLOW = 10077;
  RETCODE_RET_WINTER_CAMP_SELECT_ITEM_DATA_INVALID = 10078;
  RETCODE_RET_WINTER_CAMP_ITEM_LIST_EMPTY = 10079;
  RETCODE_RET_WINTER_CAMP_REWARD_ALREADY_TAKEN = 10080;
  RETCODE_RET_WINTER_CAMP_STAGE_NOT_FINISH = 10081;
  RETCODE_RET_WINTER_CAMP_GADGET_INVALID = 10082;
  RETCODE_RET_LANTERN_RITE_COIN_A_NOT_ENOUGH = 10090;
  RETCODE_RET_LANTERN_RITE_COIN_B_NOT_ENOUGH = 10091;
  RETCODE_RET_LANTERN_RITE_COIN_C_NOT_ENOUGH = 10092;
  RETCODE_RET_LANTERN_RITE_COIN_A_EXCEED_LIMIT = 10093;
  RETCODE_RET_LANTERN_RITE_COIN_B_EXCEED_LIMIT = 10094;
  RETCODE_RET_LANTERN_RITE_COIN_C_EXCEED_LIMIT = 10095;
  RETCODE_RET_LANTERN_RITE_PROJECTION_CONTENT_CLOSED = 10096;
  RETCODE_RET_LANTERN_RITE_PROJECTION_CAN_NOT_START = 10097;
  RETCODE_RET_LANTERN_RITE_DUNGEON_NOT_OPEN = 10098;
  RETCODE_RET_LANTERN_RITE_HAS_TAKEN_SKIN_REWARD = 10099;
  RETCODE_RET_LANTERN_RITE_NOT_FINISHED_SKIN_WATCHERS = 10100;
  RETCODE_RET_LANTERN_RITE_FIREWORKS_CONTENT_CLOSED = 10101;
  RETCODE_RET_LANTERN_RITE_FIREWORKS_CHALLENGE_NOT_START = 10102;
  RETCODE_RET_LANTERN_RITE_FIREWORKS_REFORM_PARAM_ERROR = 10103;
  RETCODE_RET_LANTERN_RITE_FIREWORKS_REFORM_SKILL_LOCK = 10104;
  RETCODE_RET_LANTERN_RITE_FIREWORKS_REFORM_STAMINA_NOT_ENOUGH = 10105;
  RETCODE_RET_POTION_ACTIVITY_STAGE_NOT_OPEN = 10110;
  RETCODE_RET_POTION_ACTIVITY_LEVEL_HAVE_PASS = 10111;
  RETCODE_RET_POTION_ACTIVITY_TEAM_NUM_INCORRECT = 10112;
  RETCODE_RET_POTION_ACTIVITY_AVATAR_IN_CD = 10113;
  RETCODE_RET_POTION_ACTIVITY_BUFF_IN_CD = 10114;
  RETCODE_RET_IRODORI_POETRY_INVALID_LINE_ID = 10120;
  RETCODE_RET_IRODORI_POETRY_INVALID_THEME_ID = 10121;
  RETCODE_RET_IRODORI_POETRY_NOT_GET_ALL_INSPIRATION = 10122;
  RETCODE_RET_IRODORI_POETRY_INSPIRATION_REACH_LIMIE = 10123;
  RETCODE_RET_IRODORI_POETRY_ENTITY_ALREADY_SCANNED = 10124;
  RETCODE_RET_ACTIVITY_BANNER_ALREADY_CLEARED = 10300;
  RETCODE_RET_IRODORI_CHESS_NOT_OPEN = 10301;
  RETCODE_RET_IRODORI_CHESS_LEVEL_NOT_OPEN = 10302;
  RETCODE_RET_IRODORI_CHESS_MAP_NOT_OPEN = 10303;
  RETCODE_RET_IRODORI_CHESS_MAP_CARD_ALREADY_EQUIPED = 10304;
  RETCODE_RET_IRODORI_CHESS_EQUIP_CARD_EXCEED_LIMIT = 10305;
  RETCODE_RET_IRODORI_CHESS_MAP_CARD_NOT_EQUIPED = 10306;
  RETCODE_RET_IRODORI_CHESS_ENTER_FAIL_CARD_EXCEED_LIMIT = 10307;
  RETCODE_RET_ACTIVITY_FRIEND_HAVE_GIFT_LIMIT = 10310;
  RETCODE_RET_GACHA_ACTIVITY_HAVE_REWARD_LIMIT = 10315;
  RETCODE_RET_GACHA_ACTIVITY_HAVE_ROBOT_LIMIT = 10316;
  RETCODE_RET_SUMMER_TIME_V_2_COIN_EXCEED_LIMIT = 10317;
  RETCODE_RET_SUMMER_TIME_V_2_COIN_NOT_ENOUGH = 10318;
  RETCODE_RET_SUMMER_TIME_V_2_DUNGEON_STAGE_NOT_OPEN = 10319;
  RETCODE_RET_SUMMER_TIME_V_2_PREV_DUNGEON_NOT_COMPLETE = 10320;
  RETCODE_RET_ROGUE_DIARY_AVATAR_DEATH = 10350;
  RETCODE_RET_ROGUE_DIARY_AVATAR_TIRED = 10351;
  RETCODE_RET_ROGUE_DIARY_AVATAR_DUPLICATED = 10352;
  RETCODE_RET_ROGUE_DIARY_COIN_NOT_ENOUGH = 10353;
  RETCODE_RET_ROGUE_DIARY_VIRTUAL_COIN_EXCEED_LIMIT = 10354;
  RETCODE_RET_ROGUE_DIARY_VIRTUAL_COIN_NOT_ENOUGH = 10355;
  RETCODE_RET_ROGUE_DIARY_CONTENT_CLOSED = 10366;
  RETCODE_RET_ISLAND_PARTY_STAGE_NOT_OPEN = 10371;
  RETCODE_RET_NOT_IN_FISHING = 11001;
  RETCODE_RET_FISH_STATE_ERROR = 11002;
  RETCODE_RET_FISH_BAIT_LIMIT = 11003;
  RETCODE_RET_FISHING_MAX_DISTANCE = 11004;
  RETCODE_RET_FISHING_IN_COMBAT = 11005;
  RETCODE_RET_FISHING_BATTLE_TOO_SHORT = 11006;
  RETCODE_RET_FISH_GONE_AWAY = 11007;
  RETCODE_RET_CAN_NOT_EDIT_OTHER_DUNGEON = 11051;
  RETCODE_RET_CUSTOM_DUNGEON_DISMATCH = 11052;
  RETCODE_RET_NO_CUSTOM_DUNGEON_DATA = 11053;
  RETCODE_RET_BUILD_CUSTOM_DUNGEON_FAIL = 11054;
  RETCODE_RET_CUSTOM_DUNGEON_ROOM_CHECK_FAIL = 11055;
  RETCODE_RET_CUSTOM_DUNGEON_SAVE_MAY_FAIL = 11056;
  RETCODE_RET_NOT_IN_CUSTOM_DUNGEON = 11057;
  RETCODE_RET_CUSTOM_DUNGEON_INTERNAL_FAIL = 11058;
  RETCODE_RET_CUSTOM_DUNGEON_CAN_NOT_TRY = 11059;
  RETCODE_RET_CUSTOM_DUNGEON_NO_START_ROOM = 11060;
  RETCODE_RET_CUSTOM_DUNGEON_NO_ROOM_DATA = 11061;
  RETCODE_RET_CUSTOM_DUNGEON_SAVE_TOO_FREQUENT = 11062;
  RETCODE_RET_CUSTOM_DUNGEON_NOT_SELF_PASS = 11063;
  RETCODE_RET_CUSTOM_DUNGEON_LACK_COIN = 11064;
  RETCODE_RET_CUSTOM_DUNGEON_NO_FINISH_BRICK = 11065;
  RETCODE_RET_CUSTOM_DUNGEON_MULTI_FINISH = 11066;
  RETCODE_RET_CUSTOM_DUNGEON_NOT_PUBLISHED = 11067;
  RETCODE_RET_CUSTOM_DUNGEON_FULL_STORE = 11068;
  RETCODE_RET_CUSTOM_DUNGEON_STORE_REPEAT = 11069;
  RETCODE_RET_CUSTOM_DUNGEON_CAN_NOT_STORE_SELF = 11070;
  RETCODE_RET_CUSTOM_DUNGEON_NOT_SAVE_SUCC = 11071;
  RETCODE_RET_CUSTOM_DUNGEON_CAN_NOT_LIKE_SELF = 11072;
  RETCODE_RET_CUSTOM_DUNGEON_NOT_FOUND = 11073;
  RETCODE_RET_CUSTOM_DUNGEON_INVALID_SETTING = 11074;
  RETCODE_RET_CUSTOM_DUNGEON_NO_FINISH_SETTING = 11075;
  RETCODE_RET_CUSTOM_DUNGEON_SAVE_NOTHING = 11076;
  RETCODE_RET_CUSTOM_DUNGEON_NOT_IN_GROUP = 11077;
  RETCODE_RET_CUSTOM_DUNGEON_NOT_OFFICIAL = 11078;
  RETCODE_RET_CUSTOM_DUNGEON_LIFE_NUM_ERROR = 11079;
  RETCODE_RET_CUSTOM_DUNGEON_NO_OPEN_ROOM = 11080;
  RETCODE_RET_CUSTOM_DUNGEON_BRICK_EXCEED_LIMIT = 11081;
  RETCODE_RET_CUSTOM_DUNGEON_OFFICIAL_NOT_UNLOCK = 11082;
  RETCODE_RET_CAN_NOT_EDIT_OFFICIAL_SETTING = 11083;
  RETCODE_RET_CUSTOM_DUNGEON_BAN_PUBLISH = 11084;
  RETCODE_RET_CUSTOM_DUNGEON_CAN_NOT_REPLAY = 11085;
  RETCODE_RET_CUSTOM_DUNGEON_NOT_OPEN_GROUP = 11086;
  RETCODE_RET_CUSTOM_DUNGEON_MAX_EDIT_NUM = 11087;
  RETCODE_RET_CUSTOM_DUNGEON_CAN_NOT_OUT_STUCK = 11088;
  RETCODE_RET_CUSTOM_DUNGEON_MAX_TAG = 11089;
  RETCODE_RET_CUSTOM_DUNGEON_INVALID_TAG = 11090;
  RETCODE_RET_CUSTOM_DUNGEON_MAX_COST = 11091;
  RETCODE_RET_CUSTOM_DUNGEON_REQUEST_TOO_FREQUENT = 11092;
  RETCODE_RET_CUSTOM_DUNGEON_NOT_OPEN = 11093;
  RETCODE_RET_SHARE_CD_ID_ERROR = 11101;
  RETCODE_RET_SHARE_CD_INDEX_ERROR = 11102;
  RETCODE_RET_SHARE_CD_IN_CD = 11103;
  RETCODE_RET_SHARE_CD_TOKEN_NOT_ENOUGH = 11104;
  RETCODE_RET_UGC_DISMATCH = 11151;
  RETCODE_RET_UGC_DATA_NOT_FOUND = 11152;
  RETCODE_RET_UGC_BRIEF_NOT_FOUND = 11153;
  RETCODE_RET_UGC_DISABLED = 11154;
  RETCODE_RET_UGC_LIMITED = 11155;
  RETCODE_RET_UGC_LOCKED = 11156;
  RETCODE_RET_UGC_NOT_AUTH = 11157;
  RETCODE_RET_UGC_NOT_OPEN = 11158;
  RETCODE_RET_UGC_BAN_PUBLISH = 11159;
}


// CmdId: 5085
// EnetChannelId: 0
// EnetIsReliable: true
message ReunionActivateNotify {
  bool is_activate = 9;
  ReunionBriefInfo reunion_brief_info = 13;
}

message ReunionBriefInfo {
  bool is_taken_first_gift = 8;
  bool mission_has_reward = 9;
  uint32 privilege_id = 5;
  uint32 start_time = 7;
  string version = 13;
  bool sign_in_has_reward = 2;
  uint32 first_gift_reward_id = 15;
  uint32 mission_id = 10;
  uint32 first_day_start_time = 3;
  uint32 sign_in_config_id = 6;
  uint32 finish_time = 12;
}

// CmdId: 5076
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ReunionBriefInfoReq {}


// CmdId: 5068
// EnetChannelId: 0
// EnetIsReliable: true
message ReunionBriefInfoRsp {
  bool is_activate = 13;
  int32 retcode = 14;
  ReunionBriefInfo reunion_brief_info = 5;
}


// CmdId: 5100
// EnetChannelId: 0
// EnetIsReliable: true
message ReunionDailyRefreshNotify {
  ReunionBriefInfo reunion_brief_info = 4;
}


message ReunionMissionInfo {
  repeated ReunionWatcherInfo cur_day_watcher_list = 3;
  uint32 cur_score = 11;
  bool is_taken_reward = 8;
  repeated bool is_taken_reward_list = 6;
  uint32 next_refresh_time = 5;
  bool is_finished = 9;
  uint32 mission_id = 12;
  repeated ReunionWatcherInfo watcher_list = 2;
}


// CmdId: 5098
// EnetChannelId: 0
// EnetIsReliable: true
message ReunionPrivilegeChangeNotify {
  ReunionPrivilegeInfo privilege_info = 13;
}

message ReunionPrivilegeInfo {
  uint32 cur_day_count = 7;
  uint32 total_count = 10;
  uint32 privilege_id = 4;
}

// CmdId: 5073
// EnetChannelId: 0
// EnetIsReliable: true
message ReunionSettleNotify {}

message ReunionSignInInfo {
  uint32 sign_in_count = 6;
  repeated uint32 reward_day_list = 8;
  uint32 config_id = 12;
  uint32 last_sign_in_time = 11;
}

message ReunionWatcherInfo {
  uint32 reward_unlock_time = 12;
  uint32 watcher_id = 3;
  uint32 total_progress = 4;
  uint32 cur_progress = 11;
  bool is_taken_reward = 14;
}


message Reward {
  uint32 reward_id = 1;
  repeated ItemParam item_list = 2;
}

// CmdId: 97
// EnetChannelId: 0
// EnetIsReliable: true
message RobotPushPlayerDataNotify {
  bytes bin = 6;
}

message RogueAvatarInfo {
  bool is_onstage = 5;
  bool is_alive = 3;
  uint32 avatar_id = 14;
}


message RogueCellInfo {
  uint32 cell_config_id = 14;
  uint32 dungeon_id = 4;
  uint32 cell_id = 9;
  uint32 cell_type = 13;
  RogueCellState state = 10;
}

enum RogueCellState {
  ROGUE_CELL_STATE_NONE = 0;
  ROGUE_CELL_STATE_BATTLE = 1;
  ROGUE_CELL_STATE_SUCCESS = 2;
  ROGUE_CELL_STATE_FINISH = 3;
  ROGUE_CELL_STATE_Unk2200_KKHGKOBCFKJ = 4;
}


// CmdId: 8642
// EnetChannelId: 0
// EnetIsReliable: true
message RogueCellUpdateNotify {
  RogueCellInfo cell_info = 7;
}


message RogueDiaryActivityDetailInfo {
  repeated RogueDiaryStage stage_list = 11;
  bool is_have_progress = 10;
  bool is_content_closed = 2;
  Unk2700_PILILDPMNNA cur_progress = 7;
}


message RogueDiaryStage {
  uint32 stage_id = 1;
  Unk2700_CMOCCENBOLJ best_record = 12;
  bool Unk2700_PEDCFBJLHGP = 10;
}

// CmdId: 8347
// EnetChannelId: 0
// EnetIsReliable: true
message RogueDungeonPlayerCellChangeNotify {
  uint32 old_cell_id = 10;
  uint32 cell_id = 7;
}

message RogueEffectRecord {
  uint32 source_id = 6;
  repeated uint32 extra_param_list = 9;
  uint32 count = 10;
  bool is_new = 5;
}

enum RogueEliteCellDifficultyType {
  ROGUE_ELITE_CELL_DIFFICULTY_TYPE_NORMAL = 0;
  ROGUE_ELITE_CELL_DIFFICULTY_TYPE_HARD = 1;
}

// CmdId: 8947
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RogueHealAvatarsReq {
  uint32 dungeon_id = 1;
  uint32 cell_id = 3;
}

// CmdId: 8949
// EnetChannelId: 0
// EnetIsReliable: true
message RogueHealAvatarsRsp {
  uint32 dungeon_id = 10;
  int32 retcode = 9;
  uint32 cell_id = 14;
}

// CmdId: 8795
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RogueResumeDungeonReq {
  uint32 stage_id = 12;
}

// CmdId: 8647
// EnetChannelId: 0
// EnetIsReliable: true
message RogueResumeDungeonRsp {
  uint32 stage_id = 12;
  int32 retcode = 15;
}


message RogueShowAvatarTeamInfo {
  repeated RogueAvatarInfo avatar_list = 12;
}


message RogueStageInfo {
  RogueShowAvatarTeamInfo avatar_team = 2;
  bool is_passed = 5;
  uint32 stage_id = 7;
  uint32 revise_monster_level = 205;
  repeated RoguelikeRuneRecord rune_record_list = 6;
  bool is_open = 1;
  uint32 cur_level = 4;
  uint32 cached_coin_c_num = 1409;
  bool is_taken_reward = 11;
  bool is_in_combat = 12;
  uint32 cached_coin_b_num = 14;
  uint32 explore_cell_num = 15;
  uint32 coin_c_num = 8;
  bool is_explored = 9;
  uint32 max_passed_level = 3;
}

// CmdId: 8201
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RogueSwitchAvatarReq {
  uint32 cell_id = 15;
  repeated uint64 onstage_avatar_guid_list = 3;
  uint64 cur_avatar_guid = 11;
  uint32 dungeon_id = 6;
}

// CmdId: 8915
// EnetChannelId: 0
// EnetIsReliable: true
message RogueSwitchAvatarRsp {
  uint64 cur_avatar_guid = 4;
  repeated uint64 backstage_avatar_guid_list = 8;
  uint32 dungeon_id = 14;
  uint32 cell_id = 3;
  int32 retcode = 12;
  repeated uint64 onstage_avatar_guid_list = 9;
}

// CmdId: 8925
// EnetChannelId: 0
// EnetIsReliable: true
message RoguelikeCardGachaNotify {
  repeated uint32 card_list = 10;
  bool is_can_refresh = 11;
}


message RoguelikeDungeonActivityDetailInfo {
  repeated RogueStageInfo stage_list = 8;
  repeated RoguelikeShikigamiRecord shikigami_list = 5;
  repeated uint32 equipped_rune_list = 14;
  uint32 content_close_time = 6;
  bool is_content_closed = 10;
  repeated uint32 rune_list = 2;
}


message RoguelikeDungeonSettleInfo {
  uint32 stage_id = 5;
  bool is_final_level = 15;
  map<uint32, RoguelikeSettleCoinInfo> finished_challenge_cell_num_map = 3;
  bool is_coin_c_reach_limit = 13;
  uint32 cur_level = 9;
  uint32 total_coin_b_num = 6;
  uint32 total_coin_c_num = 10;
}


// CmdId: 8222
// EnetChannelId: 0
// EnetIsReliable: true
message RoguelikeEffectDataNotify {
  repeated RogueEffectRecord curse_list = 7;
  repeated RogueEffectRecord card_list = 4;
}

// CmdId: 8528
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RoguelikeEffectViewReq {
  repeated uint32 view_curse_list = 10;
  repeated uint32 view_card_list = 2;
}

// CmdId: 8639
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RoguelikeEffectViewRsp {
  int32 retcode = 2;
}

message RoguelikeGadgetInfo {
  uint32 cell_config_id = 1;
  uint32 cell_type = 2;
  uint32 cell_state = 3;
  uint32 cell_id = 4;
}

// CmdId: 8660
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RoguelikeGiveUpReq {
  uint32 stage_id = 9;
}


// CmdId: 8139
// EnetChannelId: 0
// EnetIsReliable: true
message RoguelikeGiveUpRsp {
  int32 retcode = 4;
  uint32 stage_id = 7;
  oneof info {
    RoguelikeDungeonSettleInfo settle_info = 8;
  }
}

// CmdId: 8324
// EnetChannelId: 0
// EnetIsReliable: true
message RoguelikeMistClearNotify {}

// CmdId: 8927
// EnetChannelId: 0
// EnetIsReliable: true
message RoguelikeRefreshCardCostUpdateNotify {
  uint32 item_count = 5;
  uint32 item_id = 1;
}

// CmdId: 8555
// EnetChannelId: 0
// EnetIsReliable: true
message RoguelikeResourceBonusPropUpdateNotify {
  float bonus_resource_prop = 12;
}

message RoguelikeRuneRecord {
  uint32 left_count = 14;
  uint32 rune_id = 6;
  uint32 max_count = 4;
}


// CmdId: 8973
// EnetChannelId: 0
// EnetIsReliable: true
message RoguelikeRuneRecordUpdateNotify {
  repeated RoguelikeRuneRecord rune_record_list = 11;
}

// CmdId: 8457
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RoguelikeSelectAvatarAndEnterDungeonReq {
  repeated uint64 onstage_avatar_guid_list = 14;
  uint32 stage_id = 4;
  repeated uint64 backstage_avatar_guid_list = 11;
}

// CmdId: 8538
// EnetChannelId: 0
// EnetIsReliable: true
message RoguelikeSelectAvatarAndEnterDungeonRsp {
  uint32 stage_id = 15;
  int32 retcode = 1;
}

message RoguelikeSettleCoinInfo {
  uint32 coin_c = 8;
  uint32 coin_b = 10;
  uint32 cell_num = 1;
}

message RoguelikeShikigamiRecord {
  uint32 id = 6;
  uint32 level = 3;
}

// CmdId: 8421
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message RoguelikeTakeStageFirstPassRewardReq {
  uint32 stage_id = 1;
}

// CmdId: 8552
// EnetChannelId: 0
// EnetIsReliable: true
message RoguelikeTakeStageFirstPassRewardRsp {
  uint32 stage_id = 14;
  int32 retcode = 5;
}


message Route {
  repeated RoutePoint route_points = 1;
  uint32 route_type = 2;
}


message RoutePoint {
  Vector position = 1;
  float arrive_range = 2;
  oneof move_params {
    float velocity = 11;
    float time = 12;
  }
  oneof rotate_params {
    Vector rotation = 21;
    MathQuaternion rotation_speed = 22;
    MathQuaternion axis_speed = 23;
  }
}

message RoutePointChangeInfo {
  float wait_time = 6;
  float target_velocity = 14;
  uint32 point_index = 11;
}


message SalesmanActivityDetailInfo {
  uint32 special_reward_preview_id = 3;
  SalesmanStatusType status = 4;
  uint32 last_deliver_time = 2;
  map<uint32, uint32> selected_reward_id_map = 5;
  uint32 deliver_count = 11;
  bool is_has_taken_special_reward = 7;
  uint32 day_index = 12;
  uint32 cond_day_count = 6;
  uint32 day_reward_id = 9;
  bool is_today_has_delivered = 13;
}

// CmdId: 2138
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SalesmanDeliverItemReq {
  uint32 schedule_id = 4;
}

// CmdId: 2104
// EnetChannelId: 0
// EnetIsReliable: true
message SalesmanDeliverItemRsp {
  uint32 schedule_id = 9;
  int32 retcode = 15;
}

enum SalesmanStatusType {
  SALESMAN_STATUS_TYPE_NONE = 0;
  SALESMAN_STATUS_TYPE_UNSTARTED = 1;
  SALESMAN_STATUS_TYPE_STARTED = 2;
  SALESMAN_STATUS_TYPE_DELIVERED = 3;
}

// CmdId: 2191
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SalesmanTakeRewardReq {
  uint32 position = 8;
  uint32 schedule_id = 7;
}

// CmdId: 2110
// EnetChannelId: 0
// EnetIsReliable: true
message SalesmanTakeRewardRsp {
  uint32 position = 13;
  uint32 schedule_id = 7;
  uint32 reward_id = 9;
  int32 retcode = 11;
}

// CmdId: 2145
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SalesmanTakeSpecialRewardReq {
  uint32 schedule_id = 13;
}

// CmdId: 2124
// EnetChannelId: 0
// EnetIsReliable: true
message SalesmanTakeSpecialRewardRsp {
  int32 retcode = 12;
  uint32 schedule_id = 5;
}

// CmdId: 2000
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SaveCoopDialogReq {
  uint32 main_coop_id = 11;
  uint32 dialog_id = 6;
}

// CmdId: 1962
// EnetChannelId: 0
// EnetIsReliable: true
message SaveCoopDialogRsp {
  uint32 dialog_id = 8;
  uint32 main_coop_id = 10;
  int32 retcode = 7;
}

// CmdId: 1975
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SaveMainCoopReq {
  map<uint32, int32> normal_var_map = 15;
  uint32 self_confidence = 2;
  uint32 save_point_id = 1;
  map<uint32, int32> temp_var_map = 8;
  uint32 id = 3;
}

// CmdId: 1957
// EnetChannelId: 0
// EnetIsReliable: true
message SaveMainCoopRsp {
  int32 retcode = 2;
  repeated uint32 save_point_id_list = 15;
  uint32 id = 14;
}

// CmdId: 293
// EnetChannelId: 0
// EnetIsReliable: true
message SceneAreaUnlockNotify {
  repeated uint32 area_list = 10;
  uint32 scene_id = 9;
}

// CmdId: 230
// EnetChannelId: 0
// EnetIsReliable: true
message SceneAreaWeatherNotify {
  uint32 weather_area_id = 1;
  uint32 weather_gadget_id = 9;
  uint32 climate_type = 14;
  float trans_duration = 15;
  map<uint32, string> weather_value_map = 10;
}

// CmdId: 3166
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SceneAudioNotify {
  repeated float param_2 = 14;
  int32 type = 3;
  repeated string param_3 = 11;
  uint32 source_uid = 6;
  repeated uint32 param_1 = 4;
}



message SceneAvatarInfo {
  uint32 uid = 1;
  uint32 avatar_id = 2;
  uint64 guid = 3;
  uint32 peer_id = 4;
  repeated uint32 equip_id_list = 5;
  uint32 skill_depot_id = 6;
  repeated uint32 talent_id_list = 7;
  SceneWeaponInfo weapon = 8;
  repeated SceneReliquaryInfo reliquary_list = 9;
  uint32 core_proud_skill_level = 11;
  repeated uint32 inherent_proud_skill_list = 12;
  map<uint32, uint32> skill_level_map = 13;
  map<uint32, uint32> proud_skill_extra_level_map = 14;
  repeated ServerBuff server_buff_list = 15;
  repeated uint32 team_resonance_list = 16;
  uint32 wearing_flycloak_id = 17;
  uint32 born_time = 18;
  uint32 costume_id = 19;
  CurVehicleInfo cur_vehicle_info = 20;
  AvatarExcelInfo excel_info = 21;
  uint32 anim_hash = 22;
}


// CmdId: 299
// EnetChannelId: 1
// EnetIsReliable: true
// IsAllowClient: true
message SceneAvatarStaminaStepReq {
  bool use_client_rot = 15;
  Vector rot = 7;
}


// CmdId: 231
// EnetChannelId: 1
// EnetIsReliable: true
message SceneAvatarStaminaStepRsp {
  bool use_client_rot = 9;
  int32 retcode = 7;
  Vector rot = 11;
}


// CmdId: 288
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SceneCreateEntityReq {
  CreateEntityInfo entity = 1;
  bool is_destroy_when_disconnect = 10;
  CreateReason reason = 3;
}


// CmdId: 226
// EnetChannelId: 0
// EnetIsReliable: true
message SceneCreateEntityRsp {
  int32 retcode = 14;
  uint32 entity_id = 1;
  CreateEntityInfo entity = 10;
}

// CmdId: 3203
// EnetChannelId: 0
// EnetIsReliable: true
message SceneDataNotify {
  repeated string level_config_name_list = 15;
  repeated uint32 scene_tag_id_list = 8;
}

// CmdId: 263
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SceneDestroyEntityReq {
  uint32 entity_id = 7;
}

// CmdId: 295
// EnetChannelId: 0
// EnetIsReliable: true
message SceneDestroyEntityRsp {
  int32 retcode = 14;
  uint32 entity_id = 7;
}


// CmdId: 3387
// EnetChannelId: 1
// EnetIsReliable: false
message SceneEntitiesMoveCombineNotify {
  repeated EntityMoveInfo entity_move_info_list = 8;
}


// CmdId: 279
// EnetChannelId: 1
// EnetIsReliable: false
// IsAllowClient: true
message SceneEntitiesMovesReq {
  repeated EntityMoveInfo entity_move_info_list = 14;
}


// CmdId: 255
// EnetChannelId: 1
// EnetIsReliable: false
message SceneEntitiesMovesRsp {
  repeated EntityMoveFailInfo entity_move_fail_info_list = 11;
}


message SceneEntityAiInfo {
  bool is_ai_open = 1;
  Vector born_pos = 2;
  map<uint32, uint32> skill_cd_map = 3;
  ServantInfo servant_info = 4;
  map<uint32, uint32> ai_threat_map = 5;
  map<uint32, uint32> skill_group_cd_map = 6;
  uint32 cur_tactic = 7;
}


// CmdId: 221
// EnetChannelId: 0
// EnetIsReliable: true
message SceneEntityAppearNotify {
  VisionType appear_type = 15;
  uint32 param = 9;
  repeated SceneEntityInfo entity_list = 5;
}


// CmdId: 203
// EnetChannelId: 0
// EnetIsReliable: true
message SceneEntityDisappearNotify {
  uint32 param = 6;
  repeated uint32 entity_list = 1;
  VisionType disappear_type = 2;
}

// CmdId: 227
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SceneEntityDrownReq {
  uint32 entity_id = 10;
}

// CmdId: 294
// EnetChannelId: 0
// EnetIsReliable: true
message SceneEntityDrownRsp {
  int32 retcode = 8;
  uint32 entity_id = 11;
}





message SceneEntityInfo {
  ProtEntityType entity_type = 1;
  uint32 entity_id = 2;
  string name = 3;
  MotionInfo motion_info = 4;
  repeated PropPair prop_list = 5;
  repeated FightPropPair fight_prop_list = 6;
  uint32 life_state = 7;
  repeated AnimatorParameterValueInfoPair animator_para_list = 9;
  uint32 last_move_scene_time_ms = 17;
  uint32 last_move_reliable_seq = 18;
  EntityClientData entity_client_data = 19;
  repeated EntityEnvironmentInfo entity_environment_info_list = 20;
  EntityAuthorityInfo entity_authority_info = 21;
  repeated string tag_list = 22;
  repeated ServerBuff server_buff_list = 23;
  oneof entity {
    SceneAvatarInfo avatar = 10;
    SceneMonsterInfo monster = 11;
    SceneNpcInfo npc = 12;
    SceneGadgetInfo gadget = 13;
  }
}


// CmdId: 275
// EnetChannelId: 1
// EnetIsReliable: true
message SceneEntityMoveNotify {
  MotionInfo motion_info = 6;
  uint32 entity_id = 8;
  uint32 scene_time = 15;
  uint32 reliable_seq = 2;
}


// CmdId: 290
// EnetChannelId: 1
// EnetIsReliable: false
// IsAllowClient: true
message SceneEntityMoveReq {
  MotionInfo motion_info = 7;
  uint32 scene_time = 4;
  uint32 entity_id = 8;
  uint32 reliable_seq = 15;
}


// CmdId: 273
// EnetChannelId: 1
// EnetIsReliable: true
message SceneEntityMoveRsp {
  uint32 entity_id = 4;
  MotionInfo fail_motion = 1;
  uint32 scene_time = 10;
  uint32 reliable_seq = 6;
  int32 retcode = 8;
}


// CmdId: 3412
// EnetChannelId: 0
// EnetIsReliable: true
message SceneEntityUpdateNotify {
  uint32 param = 10;
  VisionType appear_type = 13;
  repeated SceneEntityInfo entity_list = 5;
}


message SceneFishInfo {
  uint32 fish_id = 1;
  uint32 fish_pool_entity_id = 2;
  Vector fish_pool_pos = 3;
  uint32 fish_pool_gadget_id = 4;
  uint32 Unk2700_HIPFHKFMBBE = 5;
}

// CmdId: 234
// EnetChannelId: 0
// EnetIsReliable: true
message SceneForceLockNotify {
  repeated uint32 force_id_list = 9;
}

// CmdId: 206
// EnetChannelId: 0
// EnetIsReliable: true
message SceneForceUnlockNotify {
  bool is_add = 10;
  repeated uint32 force_id_list = 2;
}







message SceneGadgetInfo {
  uint32 gadget_id = 1;
  uint32 group_id = 2;
  uint32 config_id = 3;
  uint32 owner_entity_id = 4;
  GadgetBornType born_type = 5;
  uint32 gadget_state = 6;
  uint32 gadget_type = 7;
  bool is_show_cutscene = 8;
  uint32 authority_peer_id = 9;
  bool is_enable_interact = 10;
  uint32 interact_id = 11;
  uint32 mark_flag = 21;
  uint32 prop_owner_entity_id = 22;
  PlatformInfo platform = 23;
  repeated uint32 interact_uid_list = 24;
  uint32 draft_id = 25;
  uint32 gadget_talk_state = 26;
  GadgetPlayInfo play_info = 100;
  oneof content {
    Item trifle_item = 12;
    GatherGadgetInfo gather_gadget = 13;
    WorktopInfo worktop = 14;
    ClientGadgetInfo client_gadget = 15;
    WeatherInfo weather = 17;
    AbilityGadgetInfo ability_gadget = 18;
    StatueGadgetInfo statue_gadget = 19;
    BossChestInfo boss_chest = 20;
    BlossomChestInfo blossom_chest = 41;
    MpPlayRewardInfo mp_play_reward = 42;
    GadgetGeneralRewardInfo general_reward = 43;
    OfferingInfo offering_info = 44;
    FoundationInfo foundation_info = 45;
    VehicleInfo vehicle_info = 46;
    EchoShellInfo shell_info = 47;
    ScreenInfo screen_info = 48;
    FishPoolInfo fish_pool_info = 59;
    CustomGadgetTreeInfo custom_gadget_tree_info = 60;
    RoguelikeGadgetInfo roguelike_gadget_info = 61;
    Unk2800_FHMOLALLEEN night_crow_gadget_info = 62;
  }
}


message SceneGalleryBalloonInfo {
  map<uint32, BalloonPlayerInfo> scene_player_balloon_info_map = 14;
  uint32 end_time = 5;
}

message SceneGalleryBounceConjuringInfo {
  uint32 total_destroyed_machine_count = 4;
  uint32 total_score = 6;
}

message SceneGalleryBrokenFloorInfo {
  map<uint32, uint32> fall_count_map = 3;
  uint32 end_time = 9;
}

message SceneGalleryBulletInfo {
  uint32 end_time = 1;
  map<uint32, uint32> hit_count_map = 10;
}

message SceneGalleryBuoyantCombatInfo {
  uint32 score = 6;
  uint32 kill_special_monster_count = 1;
  uint32 kill_monster_count = 14;
}

message SceneGalleryCrystalLinkInfo {
  uint32 score = 10;
}


message SceneGalleryFallInfo {
  map<uint32, FallPlayerInfo> scene_player_fall_info_map = 12;
  uint32 end_time = 2;
}

message SceneGalleryFlowerInfo {
  uint32 end_time = 7;
  uint32 target_score = 13;
  uint32 cur_score = 9;
}


message SceneGalleryHandballInfo {
  PlaceInfo ball_place_info = 9;
  bool is_have_ball = 15;
}

message SceneGalleryHideAndSeekInfo {
  repeated uint32 visible_uid_list = 13;
  repeated uint32 caught_uid_list = 4;
}

message SceneGalleryHomeBalloonInfo {
  uint32 score = 7;
}

message SceneGalleryHomeSeekFurnitureInfo {
  uint32 Unk2700_KDBENBBODGP = 6;
  map<uint32, uint32> Unk2700_DDHOJHOICBL = 8;
  uint32 Unk2700_LODFFCPFJLC = 12;
  uint32 Unk2700_HLCIHCCGFFC = 9;
}







message SceneGalleryInfo {
  uint32 end_time = 11;
  uint32 pre_start_end_time = 15;
  GalleryStageType stage = 5;
  uint32 owner_uid = 9;
  uint32 player_count = 1;
  repeated SceneGalleryProgressInfo progress_info_list = 4;
  uint32 gallery_id = 2;
  oneof info {
    SceneGalleryBalloonInfo balloon_info = 14;
    SceneGalleryFallInfo fall_info = 7;
    SceneGalleryFlowerInfo flower_info = 8;
    SceneGalleryBulletInfo bullet_info = 13;
    SceneGalleryBrokenFloorInfo broken_floor_info = 10;
    SceneGalleryHideAndSeekInfo hide_and_seek_info = 6;
    SceneGalleryBuoyantCombatInfo buoyant_combat_info = 1384;
    SceneGalleryBounceConjuringInfo bounce_conjuring_info = 708;
    SceneGalleryHandballInfo handball_info = 1997;
    SceneGallerySumoInfo sumo_info = 811;
    SceneGallerySalvagePreventInfo salvage_prevent_info = 1700;
    SceneGallerySalvageEscortInfoInfo salvage_escort_info = 759;
    SceneGalleryHomeBalloonInfo home_balloon_info = 1034;
    SceneGalleryCrystalLinkInfo crystal_link_info = 2004;
    SceneGalleryIrodoriMasterInfo irodori_master_info = 1953;
    SceneGalleryLuminanceStoneChallengeInfo luminance_stone_challenge_info = 106;
    SceneGalleryHomeSeekFurnitureInfo home_seek_furniture_info = 1456;
    SceneGalleryIslandPartyDownHillInfo island_party_down_hill_info = 462;
    SceneGallerySummerTimeV2BoatInfo summer_time_v_2_boat_info = 296;
    SceneGalleryIslandPartyRaftInfo island_party_raft_info = 1805;
    SceneGalleryIslandPartySailInfo island_party_sail_info = 1133;
  }
}


// CmdId: 5581
// EnetChannelId: 0
// EnetIsReliable: true
message SceneGalleryInfoNotify {
  SceneGalleryInfo gallery_info = 4;
}

message SceneGalleryIrodoriMasterInfo {
  uint32 level_id = 8;
  uint32 difficulty = 1;
  bool Unk2700_FKDMOBOGMCM = 5;
}


message SceneGalleryIslandPartyDownHillInfo {
  uint32 Unk2800_LBPCDCHOOLJ = 14;
  Unk2800_FMAOEPEBKHB Unk2800_ENJGEFBCLOL = 15;
  uint32 Unk2800_BKEFLDCEBLF = 5;
  uint32 coin = 13;
}


message SceneGalleryIslandPartyRaftInfo {
  uint32 coin = 6;
  Unk2800_FMAOEPEBKHB Unk2800_ENJGEFBCLOL = 7;
  uint32 Unk2800_BAEEDEAADIA = 1;
  uint32 Unk2800_EOFOECJJMLJ = 15;
  uint32 point_id = 12;
  uint32 Unk2800_MKNGANDAJFJ = 4;
}


message SceneGalleryIslandPartySailInfo {
  uint32 Unk2800_HKHENLCIFNN = 14;
  uint32 Unk2800_NGPLGLLFGOG = 10;
  Unk2800_FMAOEPEBKHB Unk2800_ENJGEFBCLOL = 1;
  uint32 Unk2800_DNDKJOJCDBI = 11;
  uint32 coin = 15;
  Unk2800_IMLDGLIMODE stage = 12;
  uint32 Unk2800_GMOCMEFBGIP = 8;
}

message SceneGalleryLuminanceStoneChallengeInfo {
  uint32 kill_monster_count = 5;
  uint32 score = 3;
  uint32 Unk2700_OFKHLGLOPCM = 2;
  uint32 kill_special_monster_count = 6;
}

message SceneGalleryProgressInfo {
  repeated uint32 progress_stage_list = 8;
  string key = 11;
  uint32 progress = 5;
  uint32 ui_form = 12;
}

message SceneGallerySalvageEscortInfoInfo {
  uint32 Unk2700_NECHECIDCEG = 14;
  uint32 Unk2700_AMJEKEJLOGJ = 3;
  uint32 Unk2700_MCFMMIDNLIF = 7;
  uint32 Unk2700_FFCCLGIFGIP = 11;
}

message SceneGallerySalvagePreventInfo {
  uint32 Unk2700_FFCCLGIFGIP = 7;
}

message SceneGallerySummerTimeV2BoatInfo {
  uint32 param_1 = 15;
  uint32 param_3 = 3;
  uint32 Unk2800_NGGPIECNHJA = 11;
  uint32 param_2 = 7;
}

message SceneGallerySumoInfo {
  uint32 score = 2;
  uint32 kill_normal_mosnter_num = 15;
  uint32 kill_elite_monster_num = 14;
}

// CmdId: 235
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SceneInitFinishReq {
  uint32 enter_scene_token = 11;
}

// CmdId: 207
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SceneInitFinishRsp {
  int32 retcode = 13;
  uint32 enter_scene_token = 8;
}

// CmdId: 211
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SceneKickPlayerNotify {
  uint32 target_uid = 8;
  uint32 kicker_uid = 9;
}

// CmdId: 264
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SceneKickPlayerReq {
  uint32 target_uid = 6;
}

// CmdId: 238
// EnetChannelId: 0
// EnetIsReliable: true
message SceneKickPlayerRsp {
  int32 retcode = 13;
  uint32 target_uid = 10;
}



message SceneMonsterInfo {
  uint32 monster_id = 1;
  uint32 group_id = 2;
  uint32 config_id = 3;
  repeated SceneWeaponInfo weapon_list = 4;
  uint32 authority_peer_id = 5;
  repeated uint32 affix_list = 6;
  bool is_elite = 7;
  uint32 owner_entity_id = 8;
  uint32 summoned_tag = 9;
  map<uint32, uint32> summon_tag_map = 10;
  uint32 pose_id = 11;
  MonsterBornType born_type = 12;
  uint32 block_id = 13;
  uint32 mark_flag = 14;
  uint32 title_id = 15;
  uint32 special_name_id = 16;
  uint32 attack_target_id = 17;
  MonsterRoute monster_route = 18;
  uint32 ai_config_id = 19;
  uint32 level_route_id = 20;
  uint32 init_pose_id = 21;
  bool Unk2800_JEGLENPDPNI = 22;
  oneof content {
    SceneFishInfo fish_info = 50;
  }
}

message SceneNpcInfo {
  uint32 npc_id = 1;
  uint32 room_id = 2;
  uint32 parent_quest_id = 3;
  uint32 block_id = 4;
}

message ScenePlayBattleInfo {
  uint32 mode = 4;
  repeated uint32 progress_stage_list = 3;
  uint32 start_time = 10;
  uint32 duration = 14;
  uint32 play_type = 12;
  uint32 play_id = 1;
  uint32 prepare_end_time = 7;
  uint32 progress = 11;
  uint32 state = 8;
  uint32 type = 9;
}


// CmdId: 4431
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayBattleInfoListNotify {
  repeated ScenePlayBattleInfo battle_info_list = 12;
}


// CmdId: 4422
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayBattleInfoNotify {
  ScenePlayBattleInfo battle_info = 11;
}

// CmdId: 4425
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayBattleInterruptNotify {
  uint32 interrupt_state = 6;
  uint32 play_id = 5;
  uint32 play_type = 1;
}


// CmdId: 4398
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayBattleResultNotify {
  bool is_win = 1;
  uint32 cost_time = 7;
  uint32 play_type = 15;
  uint32 play_id = 11;
  repeated ScenePlayBattleSettlePlayerInfo settle_player_info_list = 4;
  repeated Unk2700_OHOKEEGPPBG Unk2700_HMENAAMGMBB = 14;
}


message ScenePlayBattleSettlePlayerInfo {
  repeated ExhibitionDisplayInfo card_list = 14;
  ProfilePicture profile_picture = 10;
  uint32 head_image = 11;
  uint32 statistic_id = 4;
  uint32 uid = 1;
  int64 param = 5;
  string online_id = 12;
  string nickname = 15;
}

// CmdId: 4447
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayBattleUidOpNotify {
  uint32 op = 7;
  repeated uint32 param_target_list = 9;
  uint32 entity_id = 2;
  string param_str = 3;
  repeated uint32 uid_list = 6;
  uint32 param_index = 11;
  uint32 play_type = 8;
  uint32 param_duration = 12;
  repeated uint32 param_list = 15;
  uint32 play_id = 5;
}

// CmdId: 4353
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ScenePlayGuestReplyInviteReq {
  bool is_agree = 15;
  uint32 play_id = 6;
}

// CmdId: 4440
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayGuestReplyInviteRsp {
  int32 retcode = 6;
  bool is_agree = 2;
  uint32 play_id = 8;
}

// CmdId: 4423
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayGuestReplyNotify {
  uint32 play_id = 13;
  uint32 guest_uid = 12;
  bool is_agree = 3;
}

message ScenePlayInfo {
  uint32 entry_id = 15;
  uint32 play_id = 11;
  uint32 play_type = 3;
  bool is_open = 9;
}


// CmdId: 4381
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayInfoListNotify {
  repeated ScenePlayInfo play_info_list = 6;
}

// CmdId: 4449
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayInviteResultNotify {
  bool is_all_argee = 11;
  uint32 play_id = 15;
}

// CmdId: 4355
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ScenePlayOutofRegionNotify {
  uint32 play_id = 13;
}

// CmdId: 4448
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ScenePlayOwnerCheckReq {
  uint32 play_id = 9;
  bool is_skip_match = 6;
}

// CmdId: 4362
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayOwnerCheckRsp {
  repeated uint32 param_list = 8;
  bool is_skip_match = 1;
  uint32 play_id = 9;
  uint32 wrong_uid = 5;
  int32 retcode = 3;
}

// CmdId: 4371
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayOwnerInviteNotify {
  uint32 invite_cd = 14;
  uint32 play_id = 5;
  bool is_remain_reward = 15;
}

// CmdId: 4385
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ScenePlayOwnerStartInviteReq {
  bool is_skip_match = 8;
  uint32 play_id = 13;
}

// CmdId: 4357
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayOwnerStartInviteRsp {
  bool is_skip_match = 7;
  int32 retcode = 15;
  uint32 play_id = 11;
}


message ScenePlayerInfo {
  uint32 scene_id = 10;
  uint32 peer_id = 6;
  OnlinePlayerInfo online_player_info = 13;
  bool is_connected = 2;
  string name = 15;
  uint32 uid = 8;
}


// CmdId: 267
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayerInfoNotify {
  repeated ScenePlayerInfo player_info_list = 5;
}


// CmdId: 248
// EnetChannelId: 1
// EnetIsReliable: true
message ScenePlayerLocationNotify {
  repeated VehicleLocationInfo vehicle_loc_list = 3;
  uint32 scene_id = 9;
  repeated PlayerLocationInfo player_loc_list = 14;
}


// CmdId: 233
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePlayerSoundNotify {
  string sound_name = 4;
  PlaySoundType play_type = 8;
  Vector play_pos = 3;
  enum PlaySoundType {
    PLAY_SOUND_TYPE_NONE = 0;
    PLAY_SOUND_TYPE_START = 1;
    PLAY_SOUND_TYPE_STOP = 2;
  }
}

// CmdId: 247
// EnetChannelId: 0
// EnetIsReliable: true
message ScenePointUnlockNotify {
  repeated uint32 point_list = 13;
  uint32 scene_id = 6;
  repeated uint32 unhide_point_list = 12;
  repeated uint32 hide_point_list = 1;
  repeated uint32 locked_point_list = 8;
}

message SceneReliquaryInfo {
  uint32 item_id = 1;
  uint64 guid = 2;
  uint32 level = 3;
  uint32 promote_level = 4;
}


message SceneRouteChangeInfo {
  bool is_forward = 12;
  uint32 route_id = 15;
  uint32 type = 4;
  repeated RoutePointChangeInfo point_list = 1;
}


// CmdId: 240
// EnetChannelId: 0
// EnetIsReliable: true
message SceneRouteChangeNotify {
  uint32 scene_id = 12;
  uint32 scene_time = 11;
  repeated SceneRouteChangeInfo route_list = 2;
}

enum SceneSurfaceMaterial {
  SCENE_SURFACE_MATERIAL_INVALID = 0;
  SCENE_SURFACE_MATERIAL_GRASS = 1;
  SCENE_SURFACE_MATERIAL_DIRT = 2;
  SCENE_SURFACE_MATERIAL_ROCK = 3;
  SCENE_SURFACE_MATERIAL_SNOW = 4;
  SCENE_SURFACE_MATERIAL_WATER = 5;
  SCENE_SURFACE_MATERIAL_TILE = 6;
  SCENE_SURFACE_MATERIAL_SAND = 7;
}



message SceneTeamAvatar {
  AbilitySyncStateInfo avatar_ability_info = 5;
  AvatarInfo avatar_info = 8;
  bool is_on_scene = 152;
  uint32 entity_id = 9;
  uint64 avatar_guid = 15;
  uint32 scene_id = 1;
  uint32 weapon_entity_id = 7;
  SceneAvatarInfo scene_avatar_info = 3;
  uint64 weapon_guid = 4;
  AbilitySyncStateInfo weapon_ability_info = 11;
  SceneEntityInfo scene_entity_info = 12;
  uint32 player_uid = 14;
  bool is_reconnect = 6;
  AbilityControlBlock ability_control_block = 2;
  bool is_player_cur_avatar = 13;
  repeated ServerBuff server_buff_list = 10;
}


// CmdId: 1775
// EnetChannelId: 0
// EnetIsReliable: true
message SceneTeamUpdateNotify {
  repeated SceneTeamAvatar scene_team_avatar_list = 11;
  bool is_in_mp = 15;
}

// CmdId: 245
// EnetChannelId: 0
// EnetIsReliable: true
message SceneTimeNotify {
  uint64 scene_time = 14;
  bool is_paused = 1;
  uint32 scene_id = 7;
}

// CmdId: 239
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SceneTransToPointReq {
  uint32 scene_id = 13;
  uint32 point_id = 1;
}

// CmdId: 253
// EnetChannelId: 0
// EnetIsReliable: true
message SceneTransToPointRsp {
  uint32 point_id = 14;
  uint32 scene_id = 3;
  int32 retcode = 8;
}


message SceneWeaponInfo {
  uint32 entity_id = 1;
  uint32 gadget_id = 2;
  uint32 item_id = 3;
  uint64 guid = 4;
  uint32 level = 5;
  uint32 promote_level = 6;
  AbilitySyncStateInfo ability_info = 7;
  map<uint32, uint32> affix_map = 8;
  EntityRendererChangedInfo renderer_changed_info = 9;
}

// CmdId: 3110
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SceneWeatherForcastReq {
  uint32 weather_area_id = 15;
}

// CmdId: 3012
// EnetChannelId: 0
// EnetIsReliable: true
message SceneWeatherForcastRsp {
  uint64 next_climate_time = 14;
  repeated uint32 forcast_climate_list = 2;
  int32 retcode = 4;
}

message ScoreChallengeInfo {
  uint32 Unk2700_LJCOLDIKHNE = 13;
  uint32 max_score = 7;
}

message ScreenInfo {
  uint32 live_id = 1;
  uint32 projector_entity_id = 2;
}

message SeaLampActivityDetailInfo {
  uint32 phase_id = 14;
  repeated uint32 taken_phase_reward_list = 1;
  repeated uint32 taken_contribution_reward_list = 7;
  uint32 progress = 8;
  uint32 contribution = 15;
  uint32 factor = 13;
  uint32 days = 4;
}


message SeaLampActivityInfo {
  bool is_mechanicus_open = 14;
  uint32 day_index = 1;
  repeated SeaLampSectionInfo section_info_list = 6;
  uint32 popularity = 10;
  uint32 sea_lamp_coin = 15;
  uint32 first_day_start_time = 11;
  uint32 mechanicus_id = 9;
  bool is_mechanicus_feature_close = 12;
  bool is_content_closed = 5;
}

// CmdId: 2114
// EnetChannelId: 0
// EnetIsReliable: true
message SeaLampCoinNotify {
  uint32 sea_lamp_coin = 8;
}


// CmdId: 2123
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SeaLampContributeItemReq {
  uint32 activity_id = 8;
  repeated ItemParam item_list = 1;
}

// CmdId: 2139
// EnetChannelId: 0
// EnetIsReliable: true
message SeaLampContributeItemRsp {
  uint32 add_contribution = 7;
  uint32 add_progress = 1;
  uint32 total_contribution = 14;
  int32 retcode = 6;
}


// CmdId: 2105
// EnetChannelId: 0
// EnetIsReliable: true
message SeaLampFlyLampNotify {
  Vector pos = 11;
  uint32 item_num = 10;
  uint32 item_id = 7;
  int32 param = 5;
}


// CmdId: 2199
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SeaLampFlyLampReq {
  uint32 item_id = 9;
  int32 param = 10;
  Vector pos = 7;
  uint32 item_num = 5;
}

// CmdId: 2192
// EnetChannelId: 0
// EnetIsReliable: true
message SeaLampFlyLampRsp {
  uint32 item_num = 9;
  uint32 item_id = 15;
  int32 retcode = 14;
}

// CmdId: 2032
// EnetChannelId: 0
// EnetIsReliable: true
message SeaLampPopularityNotify {
  uint32 popularity = 4;
}

message SeaLampSectionInfo {
  uint32 section_id = 11;
}

// CmdId: 2019
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SeaLampTakeContributionRewardReq {
  uint32 activity_id = 4;
  uint32 config_id = 10;
}

// CmdId: 2177
// EnetChannelId: 0
// EnetIsReliable: true
message SeaLampTakeContributionRewardRsp {
  uint32 config_id = 9;
  int32 retcode = 7;
}

// CmdId: 2176
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SeaLampTakePhaseRewardReq {
  uint32 phase_id = 12;
  uint32 activity_id = 11;
}

// CmdId: 2190
// EnetChannelId: 0
// EnetIsReliable: true
message SeaLampTakePhaseRewardRsp {
  uint32 phase_id = 2;
  int32 retcode = 6;
}


// CmdId: 289
// EnetChannelId: 0
// EnetIsReliable: true
message SealBattleBeginNotify {
  uint32 seal_max_progress = 9;
  uint32 seal_entity_id = 1;
  uint32 seal_radius = 12;
  SealBattleType battle_type = 14;
}

// CmdId: 259
// EnetChannelId: 0
// EnetIsReliable: true
message SealBattleEndNotify {
  bool is_win = 4;
  uint32 seal_entity_id = 15;
}

// CmdId: 232
// EnetChannelId: 0
// EnetIsReliable: true
message SealBattleProgressNotify {
  uint32 seal_entity_id = 9;
  uint32 max_progress = 10;
  uint32 seal_radius = 4;
  uint32 progress = 5;
  uint32 end_time = 2;
}

enum SealBattleType {
  SEAL_BATTLE_TYPE_KEEP_ALIVE = 0;
  SEAL_BATTLE_TYPE_KILL_MONSTER = 1;
  SEAL_BATTLE_TYPE_ENERGY_CHARGE = 2;
}

// CmdId: 228
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SeeMonsterReq {
  uint32 monster_id = 7;
}

// CmdId: 251
// EnetChannelId: 0
// EnetIsReliable: true
message SeeMonsterRsp {
  int32 retcode = 9;
}


message SeekFurnitureGalleryInfo {
  repeated Unk2700_JCBJHCFEONO record_list = 5;
}

message SegmentCRCInfo {
  uint32 module = 13;
  int32 retcode = 5;
  uint32 size = 10;
  string crc = 3;
  uint32 offset = 11;
}

message SegmentInfo {
  uint32 offset = 3;
  uint32 module = 7;
  uint32 size = 8;
}

// CmdId: 2134
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SelectAsterMidDifficultyReq {
  uint32 gadget_entity_id = 13;
  uint32 schedule_id = 1;
  uint32 difficulty_id = 5;
}

// CmdId: 2180
// EnetChannelId: 0
// EnetIsReliable: true
message SelectAsterMidDifficultyRsp {
  int32 retcode = 15;
  uint32 schedule_id = 2;
  uint32 gadget_entity_id = 5;
  uint32 difficulty_id = 14;
}

// CmdId: 2064
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SelectEffigyChallengeConditionReq {
  uint32 difficulty_id = 15;
  uint32 challenge_id = 7;
  repeated uint32 condition_id_list = 9;
}

// CmdId: 2039
// EnetChannelId: 0
// EnetIsReliable: true
message SelectEffigyChallengeConditionRsp {
  repeated uint32 condition_id_list = 12;
  int32 retcode = 6;
  uint32 difficulty_id = 7;
  uint32 challenge_id = 2;
}

// CmdId: 8085
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SelectRoguelikeDungeonCardReq {
  uint32 card_id = 13;
}

// CmdId: 8138
// EnetChannelId: 0
// EnetIsReliable: true
message SelectRoguelikeDungeonCardRsp {
  uint32 card_id = 9;
  int32 retcode = 8;
}

// CmdId: 807
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SelectWorktopOptionReq {
  uint32 gadget_entity_id = 12;
  uint32 option_id = 11;
}

// CmdId: 821
// EnetChannelId: 0
// EnetIsReliable: true
message SelectWorktopOptionRsp {
  uint32 gadget_entity_id = 13;
  uint32 option_id = 7;
  int32 retcode = 4;
}

message ServantInfo {
  uint32 master_entity_id = 1;
  uint32 born_slot_index = 2;
}


// CmdId: 2197
// EnetChannelId: 0
// EnetIsReliable: true
message ServerAnnounceNotify {
  repeated AnnounceData announce_data_list = 11;
}

// CmdId: 2092
// EnetChannelId: 0
// EnetIsReliable: true
message ServerAnnounceRevokeNotify {
  repeated uint32 config_id_list = 15;
}

message ServerBuff {
  uint32 server_buff_uid = 1;
  uint32 server_buff_id = 2;
  uint32 server_buff_type = 3;
  uint32 instanced_modifier_id = 4;
  bool is_modifier_added = 5;
}


// CmdId: 361
// EnetChannelId: 0
// EnetIsReliable: true
message ServerBuffChangeNotify {
  ServerBuffChangeType server_buff_change_type = 7;
  bool is_creature_buff = 10;
  repeated uint32 entity_id_list = 1;
  repeated uint64 avatar_guid_list = 12;
  repeated ServerBuff server_buff_list = 11;
  enum ServerBuffChangeType {
    SERVER_BUFF_CHANGE_TYPE_ADD_SERVER_BUFF = 0;
    SERVER_BUFF_CHANGE_TYPE_DEL_SERVER_BUFF = 1;
  }
}

// CmdId: 406
// EnetChannelId: 0
// EnetIsReliable: true
message ServerCondMeetQuestListUpdateNotify {
  repeated uint32 del_quest_id_list = 1;
  repeated uint32 add_quest_id_list = 12;
}

// CmdId: 184
// EnetChannelId: 0
// EnetIsReliable: true
message ServerDisconnectClientNotify {
  uint32 data = 10;
}

// CmdId: 1197
// EnetChannelId: 0
// EnetIsReliable: true
message ServerGlobalValueChangeNotify {
  uint32 entity_id = 6;
  float value = 12;
  uint32 key_hash = 13;
}

enum ServerLogLevel {
  SERVER_LOG_LEVEL_NONE = 0;
  SERVER_LOG_LEVEL_DEBUG = 1;
  SERVER_LOG_LEVEL_INFO = 2;
  SERVER_LOG_LEVEL_WARNING = 3;
  SERVER_LOG_LEVEL_ERROR = 4;
}


// CmdId: 31
// EnetChannelId: 1
// EnetIsReliable: true
message ServerLogNotify {
  string server_log = 7;
  ServerLogType log_type = 9;
  ServerLogLevel log_level = 15;
}

enum ServerLogType {
  SERVER_LOG_TYPE_NONE = 0;
  SERVER_LOG_TYPE_ABILITY = 1;
  SERVER_LOG_TYPE_LEVEL = 2;
  SERVER_LOG_TYPE_ENTITY = 3;
  SERVER_LOG_TYPE_LUA = 4;
}


message ServerMassiveEntity {
  uint32 entity_type = 1;
  uint32 config_id = 2;
  uint32 runtime_id = 3;
  uint32 authority_peer_id = 4;
  int64 obj_id = 5;
  oneof entity_info {
    MassiveWaterInfo water_info = 6;
    MassiveGrassInfo grass_info = 7;
    MassiveBoxInfo box_info = 8;
  }
}

// CmdId: 5718
// EnetChannelId: 0
// EnetIsReliable: true
message ServerMessageNotify {
  uint32 index = 1;
}

// CmdId: 99
// EnetChannelId: 1
// EnetIsReliable: true
message ServerTimeNotify {
  uint64 server_time = 5;
}

// CmdId: 1148
// EnetChannelId: 0
// EnetIsReliable: true
message ServerUpdateGlobalValueNotify {
  uint32 entity_id = 9;
  UpdateType update_type = 13;
  float delta = 3;
  uint32 key_hash = 10;
  float value = 6;
  enum UpdateType {
    UPDATE_TYPE_INVALUE = 0;
    UPDATE_TYPE_ADD = 1;
    UPDATE_TYPE_SET = 2;
  }
}

// CmdId: 2641
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetBattlePassViewedReq {
  uint32 schedule_id = 6;
}

// CmdId: 2642
// EnetChannelId: 0
// EnetIsReliable: true
message SetBattlePassViewedRsp {
  uint32 schedule_id = 2;
  int32 retcode = 3;
}


// CmdId: 4084
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetChatEmojiCollectionReq {
  ChatEmojiCollectionData chat_emoji_collection_data = 12;
}

// CmdId: 4080
// EnetChannelId: 0
// EnetIsReliable: true
message SetChatEmojiCollectionRsp {
  int32 retcode = 12;
}

// CmdId: 1965
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetCoopChapterViewedReq {
  uint32 chapter_id = 2;
}

// CmdId: 1963
// EnetChannelId: 0
// EnetIsReliable: true
message SetCoopChapterViewedRsp {
  uint32 chapter_id = 11;
  int32 retcode = 2;
}

// CmdId: 2021
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetCurExpeditionChallengeIdReq {
  uint32 id = 5;
}

// CmdId: 2049
// EnetChannelId: 0
// EnetIsReliable: true
message SetCurExpeditionChallengeIdRsp {
  uint32 id = 14;
  int32 retcode = 3;
}


// CmdId: 3146
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetEntityClientDataNotify {
  uint32 entity_id = 14;
  EntityClientData entity_client_data = 9;
}

// CmdId: 666
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetEquipLockStateReq {
  bool is_locked = 15;
  uint64 target_equip_guid = 9;
}

// CmdId: 668
// EnetChannelId: 0
// EnetIsReliable: true
message SetEquipLockStateRsp {
  uint64 target_equip_guid = 14;
  int32 retcode = 13;
  bool is_locked = 10;
}


// CmdId: 4494
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetFriendEnterHomeOptionReq {
  FriendEnterHomeOption option = 7;
}

// CmdId: 4743
// EnetChannelId: 0
// EnetIsReliable: true
message SetFriendEnterHomeOptionRsp {
  int32 retcode = 1;
}

// CmdId: 4042
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetFriendRemarkNameReq {
  uint32 uid = 10;
  string remark_name = 8;
}

// CmdId: 4030
// EnetChannelId: 0
// EnetIsReliable: true
message SetFriendRemarkNameRsp {
  string remark_name = 13;
  bool is_clear_remark = 3;
  uint32 uid = 10;
  int32 retcode = 1;
}

// CmdId: 5657
// EnetChannelId: 0
// EnetIsReliable: true
message SetH5ActivityRedDotTimestampReq {
  uint32 client_red_dot_timestamp = 13;
}

// CmdId: 5652
// EnetChannelId: 0
// EnetIsReliable: true
message SetH5ActivityRedDotTimestampRsp {
  int32 retcode = 4;
}

// CmdId: 620
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetIsAutoUnlockSpecificEquipReq {
  bool is_auto_unlock_specific_equip = 14;
}

// CmdId: 664
// EnetChannelId: 0
// EnetIsReliable: true
message SetIsAutoUnlockSpecificEquipRsp {
  int32 retcode = 3;
}

// CmdId: 8851
// EnetChannelId: 0
// EnetIsReliable: true
message SetLimitOptimizationNotify {
  bool is_active = 3;
}

// CmdId: 4004
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetNameCardReq {
  uint32 name_card_id = 10;
}

// CmdId: 4093
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetNameCardRsp {
  uint32 name_card_id = 11;
  int32 retcode = 12;
}

// CmdId: 165
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetOpenStateReq {
  uint32 key = 12;
  uint32 value = 5;
}

// CmdId: 104
// EnetChannelId: 0
// EnetIsReliable: true
message SetOpenStateRsp {
  uint32 key = 9;
  int32 retcode = 14;
  uint32 value = 15;
}


// CmdId: 4048
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetPlayerBirthdayReq {
  Birthday birthday = 9;
}


// CmdId: 4097
// EnetChannelId: 0
// EnetIsReliable: true
message SetPlayerBirthdayRsp {
  Birthday birthday = 2;
  int32 retcode = 5;
}

// CmdId: 105
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetPlayerBornDataReq {
  uint32 avatar_id = 2;
  string nick_name = 13;
}

// CmdId: 182
// EnetChannelId: 0
// EnetIsReliable: true
message SetPlayerBornDataRsp {
  int32 retcode = 10;
}

// CmdId: 4082
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetPlayerHeadImageReq {
  uint32 avatar_id = 7;
}


// CmdId: 4047
// EnetChannelId: 0
// EnetIsReliable: true
message SetPlayerHeadImageRsp {
  ProfilePicture profile_picture = 6;
  uint32 avatar_id = 5;
  int32 retcode = 1;
}

// CmdId: 153
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetPlayerNameReq {
  string nick_name = 1;
}

// CmdId: 122
// EnetChannelId: 0
// EnetIsReliable: true
message SetPlayerNameRsp {
  int32 retcode = 9;
  string nick_name = 14;
}


// CmdId: 197
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetPlayerPropReq {
  repeated PropValue prop_list = 7;
}

// CmdId: 181
// EnetChannelId: 0
// EnetIsReliable: true
message SetPlayerPropRsp {
  int32 retcode = 11;
}

// CmdId: 4081
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetPlayerSignatureReq {
  string signature = 3;
}

// CmdId: 4005
// EnetChannelId: 0
// EnetIsReliable: true
message SetPlayerSignatureRsp {
  string signature = 1;
  int32 retcode = 4;
}

// CmdId: 254
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetSceneWeatherAreaReq {
  uint32 weather_gadget_id = 13;
  map<uint32, string> weather_value_map = 4;
}

// CmdId: 283
// EnetChannelId: 0
// EnetIsReliable: true
message SetSceneWeatherAreaRsp {
  int32 retcode = 4;
}

// CmdId: 1690
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetUpAvatarTeamReq {
  uint32 team_id = 3;
  repeated uint64 avatar_team_guid_list = 7;
  uint64 cur_avatar_guid = 5;
}

// CmdId: 1646
// EnetChannelId: 0
// EnetIsReliable: true
message SetUpAvatarTeamRsp {
  repeated uint64 avatar_team_guid_list = 1;
  uint32 team_id = 6;
  int32 retcode = 8;
  uint64 cur_avatar_guid = 13;
}


// CmdId: 4272
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetUpLunchBoxWidgetReq {
  LunchBoxData lunch_box_data = 6;
}


// CmdId: 4294
// EnetChannelId: 0
// EnetIsReliable: true
message SetUpLunchBoxWidgetRsp {
  LunchBoxData lunch_box_data = 3;
  int32 retcode = 13;
}


// CmdId: 4259
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SetWidgetSlotReq {
  repeated WidgetSlotTag tag_list = 15;
  uint32 material_id = 6;
  WidgetSlotOp op = 2;
}


// CmdId: 4277
// EnetChannelId: 0
// EnetIsReliable: true
message SetWidgetSlotRsp {
  repeated WidgetSlotTag tag_list = 15;
  int32 retcode = 6;
  uint32 material_id = 1;
  WidgetSlotOp op = 4;
}


message ShapeBox {
  Vector center = 1;
  Vector axis_0 = 2;
  Vector axis_1 = 3;
  Vector axis_2 = 4;
  Vector extents = 5;
}


message ShapeSphere {
  Vector center = 1;
  float radius = 2;
}



message Shop {
  repeated ShopConcertProduct concert_product_list = 3;
  repeated ShopGoods goods_list = 15;
  uint32 city_reputation_level = 2;
  repeated ShopCardProduct card_product_list = 14;
  repeated ShopMcoinProduct mcoin_product_list = 7;
  uint32 next_refresh_time = 11;
  uint32 city_id = 10;
  uint32 shop_type = 13;
}


message ShopCardProduct {
  string product_id = 1;
  string price_tier = 2;
  uint32 mcoin_base = 3;
  uint32 hcoin_per_day = 4;
  uint32 days = 5;
  uint32 remain_reward_days = 6;
  uint32 card_product_type = 7;
  oneof extra_card_data {
    ResinCard resin_card = 101;
  }
  message ResinCard {
    repeated ItemParam base_item_list = 1;
    repeated ItemParam per_day_item_list = 2;
  }
}

message ShopConcertProduct {
  string product_id = 1;
  string price_tier = 2;
  uint32 obtain_count = 3;
  uint32 obtain_limit = 4;
  uint32 begin_time = 5;
  uint32 end_time = 6;
  uint32 buy_times = 7;
}


message ShopGoods {
  uint32 discount_end_time = 258;
  uint32 min_level = 8;
  uint32 end_time = 11;
  repeated ItemParam cost_item_list = 3;
  uint32 secondary_sheet_id = 318;
  uint32 hcoin = 1;
  uint32 mcoin = 14;
  uint32 discount_id = 1998;
  uint32 single_limit = 247;
  uint32 goods_id = 13;
  uint32 next_refresh_time = 7;
  uint32 max_level = 4;
  uint32 disable_type = 6;
  uint32 discount_begin_time = 574;
  repeated uint32 pre_goods_id_list = 2;
  uint32 begin_time = 5;
  uint32 scoin = 15;
  uint32 bought_num = 10;
  uint32 buy_limit = 12;
  ItemParam goods_item = 9;
}

message ShopMcoinProduct {
  string product_id = 1;
  string price_tier = 2;
  uint32 mcoin_base = 3;
  uint32 mcoin_non_first = 4;
  uint32 mcoin_first = 5;
  uint32 bought_num = 6;
  bool is_audit = 7;
}

message ShortAbilityHashPair {
  sfixed32 ability_config_hash = 15;
  sfixed32 ability_name_hash = 1;
}



message ShowAvatarInfo {
  uint32 avatar_id = 1;
  map<uint32, PropValue> prop_map = 2;
  repeated uint32 talent_id_list = 3;
  map<uint32, float> fight_prop_map = 4;
  uint32 skill_depot_id = 5;
  uint32 core_proud_skill_level = 6;
  repeated uint32 inherent_proud_skill_list = 7;
  map<uint32, uint32> skill_level_map = 8;
  map<uint32, uint32> proud_skill_extra_level_map = 9;
  repeated ShowEquip equip_list = 10;
  AvatarFetterInfo fetter_info = 11;
  uint32 costume_id = 12;
  AvatarExcelInfo excel_info = 13;
}

// CmdId: 3005
// EnetChannelId: 0
// EnetIsReliable: true
message ShowClientGuideNotify {
  string guide_name = 7;
}

// CmdId: 3305
// EnetChannelId: 0
// EnetIsReliable: true
message ShowClientTutorialNotify {
  uint32 tutorial_id = 2;
}

// CmdId: 3352
// EnetChannelId: 0
// EnetIsReliable: true
message ShowCommonTipsNotify {
  string content = 8;
  string title = 13;
  uint32 close_time = 4;
}


message ShowEquip {
  uint32 item_id = 1;
  oneof detail {
    Reliquary reliquary = 2;
    Weapon weapon = 3;
  }
}


// CmdId: 35
// EnetChannelId: 0
// EnetIsReliable: true
message ShowMessageNotify {
  SvrMsgId msg_id = 14;
  repeated MsgParam params = 13;
}

// CmdId: 3491
// EnetChannelId: 0
// EnetIsReliable: true
message ShowTemplateReminderNotify {
  repeated uint32 param_uid_list = 3;
  repeated int32 param_list = 10;
  uint32 template_reminder_id = 14;
  bool is_revoke = 1;
}


message SignInInfo {
  bool is_cond_satisfied = 7;
  repeated uint32 reward_day_list = 15;
  repeated Unk2700_HENCIJOPCIF Unk2700_HBMMIEOFIEI = 12;
  uint32 config_id = 8;
  uint32 sign_in_count = 2;
  uint32 schedule_id = 3;
  uint32 end_time = 13;
  uint32 last_sign_in_time = 6;
  uint32 begin_time = 5;
}

// CmdId: 2512
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SignInInfoReq {}


// CmdId: 2535
// EnetChannelId: 0
// EnetIsReliable: true
message SignInInfoRsp {
  repeated SignInInfo sign_in_info_list = 1;
  int32 retcode = 11;
}

message SkillRequest {
  uint32 skill_depot_id = 1;
}

message SkillResponse {
  uint32 skill_depot_id = 13;
  repeated uint32 skill_id_list = 9;
}


message SkyCrystalDetectorQuickUseResult {
  Unk2700_CCEOEOHLAPK Unk2700_COIELIGEACL = 9;
  int32 retcode = 8;
}

// CmdId: 4043
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SocialDataNotify {
  bool is_have_first_share = 11;
}



message SocialDetail {
  uint32 uid = 1;
  string nickname = 2;
  uint32 level = 3;
  uint32 avatar_id = 4;
  string signature = 5;
  Birthday birthday = 6;
  uint32 world_level = 7;
  repeated uint32 reserved_list = 8;
  FriendOnlineState online_state = 9;
  uint32 param = 10;
  bool is_friend = 11;
  bool is_mp_mode_available = 12;
  string online_id = 13;
  uint32 name_card_id = 14;
  bool is_in_blacklist = 15;
  bool is_chat_no_disturb = 16;
  string remark_name = 17;
  uint32 finish_achievement_num = 18;
  uint32 tower_floor_index = 19;
  uint32 tower_level_index = 20;
  bool is_show_avatar = 21;
  repeated SocialShowAvatarInfo show_avatar_info_list = 22;
  repeated uint32 show_name_card_id_list = 23;
  FriendEnterHomeOption friend_enter_home_option = 24;
  ProfilePicture profile_picture = 25;
}

message SocialShowAvatarInfo {
  uint32 avatar_id = 1;
  uint32 level = 2;
  uint32 costume_id = 3;
}


message SpiceActivityDetailInfo {
  uint32 Unk2700_IGMHNDNGNPG = 15;
  repeated SpiceStage spice_stage_list = 7;
  uint32 Unk2700_KIAHJKGOLGO = 13;
}

message SpiceStage {
  bool is_open = 12;
  uint32 Unk2700_KLOFGMKDDAK = 1;
  uint32 stage_id = 6;
}

// CmdId: 1748
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SpringUseReq {
  uint64 guid = 11;
}

// CmdId: 1642
// EnetChannelId: 0
// EnetIsReliable: true
message SpringUseRsp {
  uint64 guid = 3;
  int32 retcode = 7;
}


message StakePlayGalleryInfo {
  repeated Unk2700_BEGHDPPNMFM record_list = 13;
}

// CmdId: 2127
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message StartArenaChallengeLevelReq {
  uint32 arena_challenge_id = 4;
  uint32 gadget_entity_id = 5;
  uint32 arena_challenge_level = 2;
}

// CmdId: 2125
// EnetChannelId: 0
// EnetIsReliable: true
message StartArenaChallengeLevelRsp {
  uint32 arena_challenge_level = 1;
  int32 retcode = 9;
  uint32 gadget_entity_id = 3;
  uint32 arena_challenge_id = 6;
}

// CmdId: 8732
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message StartBuoyantCombatGalleryReq {
  uint32 gallery_id = 15;
  uint32 gallery_level = 13;
}

// CmdId: 8680
// EnetChannelId: 0
// EnetIsReliable: true
message StartBuoyantCombatGalleryRsp {
  uint32 gallery_level = 12;
  int32 retcode = 5;
  uint32 gallery_id = 8;
}

// CmdId: 1992
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message StartCoopPointReq {
  uint32 coop_point = 7;
}


// CmdId: 1964
// EnetChannelId: 0
// EnetIsReliable: true
message StartCoopPointRsp {
  bool is_start = 9;
  MainCoop start_main_coop = 15;
  uint32 coop_point = 13;
  int32 retcode = 8;
}

// CmdId: 2169
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message StartEffigyChallengeReq {
  uint32 difficulty_id = 9;
  repeated uint32 condition_id_list = 6;
  uint32 challenge_id = 1;
  uint32 point_id = 12;
}

// CmdId: 2173
// EnetChannelId: 0
// EnetIsReliable: true
message StartEffigyChallengeRsp {
  repeated uint32 condition_id_list = 2;
  int32 retcode = 8;
  uint32 challenge_id = 15;
  uint32 difficulty_id = 10;
  uint32 point_id = 12;
}

// CmdId: 5825
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message StartFishingReq {
  uint32 rod_entity_id = 5;
  uint32 fish_pool_id = 15;
}

// CmdId: 5807
// EnetChannelId: 0
// EnetIsReliable: true
message StartFishingRsp {
  int32 retcode = 1;
  uint32 fish_pool_id = 14;
}


// CmdId: 8242
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message StartRogueEliteCellChallengeReq {
  RogueEliteCellDifficultyType difficulty = 1;
  uint32 dungeon_id = 11;
  uint32 cell_id = 4;
}

// CmdId: 8958
// EnetChannelId: 0
// EnetIsReliable: true
message StartRogueEliteCellChallengeRsp {
  uint32 dungeon_id = 12;
  uint32 cell_id = 9;
  int32 retcode = 10;
}

// CmdId: 8205
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message StartRogueNormalCellChallengeReq {
  uint32 dungeon_id = 3;
  uint32 cell_id = 8;
}

// CmdId: 8036
// EnetChannelId: 0
// EnetIsReliable: true
message StartRogueNormalCellChallengeRsp {
  uint32 dungeon_id = 10;
  uint32 cell_id = 2;
  int32 retcode = 6;
}

message StatueGadgetInfo {
  repeated uint32 opened_statue_uid_list = 1;
}

message StopServerInfo {
  uint32 stop_begin_time = 1;
  uint32 stop_end_time = 2;
  string url = 3;
  string content_msg = 4;
}


// CmdId: 612
// EnetChannelId: 0
// EnetIsReliable: true
message StoreItemChangeNotify {
  StoreType store_type = 12;
  repeated Item item_list = 10;
}


// CmdId: 635
// EnetChannelId: 0
// EnetIsReliable: true
message StoreItemDelNotify {
  repeated uint64 guid_list = 12;
  StoreType store_type = 15;
}

enum StoreType {
  STORE_TYPE_NONE = 0;
  STORE_TYPE_PACK = 1;
  STORE_TYPE_DEPOT = 2;
}


// CmdId: 698
// EnetChannelId: 0
// EnetIsReliable: true
message StoreWeightLimitNotify {
  uint32 weapon_count_limit = 2;
  StoreType store_type = 7;
  uint32 material_count_limit = 4;
  uint32 reliquary_count_limit = 6;
  uint32 furniture_count_limit = 9;
  uint32 weight_limit = 15;
}

message StrengthenPointData {
  uint32 base_point = 10;
  uint32 cur_point = 11;
}


message SummerTimeDetailInfo {
  map<uint32, SummerTimeStageInfo> stage_map = 3;
  uint32 content_close_time = 11;
  bool is_content_closed = 13;
  SummerTimeSprintBoatInfo sprint_boat_info = 4;
}


// CmdId: 8077
// EnetChannelId: 0
// EnetIsReliable: true
message SummerTimeFloatSignalPositionNotify {
  Vector position = 1;
  bool is_transfer_anchor = 5;
  uint32 float_signal_id = 7;
}


// CmdId: 8781
// EnetChannelId: 0
// EnetIsReliable: true
message SummerTimeFloatSignalUpdateNotify {
  bool is_transfer_anchor = 4;
  uint32 float_signal_id = 8;
  Vector position = 10;
}


message SummerTimeSprintBoatInfo {
  repeated SummerTimeSprintBoatRecord record_list = 7;
}

message SummerTimeSprintBoatRecord {
  uint32 best_score = 3;
  uint32 start_time = 13;
  bool is_touched = 7;
  repeated uint32 watcher_id_list = 10;
  uint32 group_id = 2;
}

// CmdId: 8410
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SummerTimeSprintBoatRestartReq {
  uint32 group_id = 10;
  uint32 schedule_id = 14;
}

// CmdId: 8356
// EnetChannelId: 0
// EnetIsReliable: true
message SummerTimeSprintBoatRestartRsp {
  int32 retcode = 10;
  uint32 schedule_id = 5;
  uint32 group_id = 4;
}

// CmdId: 8651
// EnetChannelId: 0
// EnetIsReliable: true
message SummerTimeSprintBoatSettleNotify {
  uint32 total_num = 13;
  uint32 group_id = 12;
  bool is_success = 15;
  uint32 collect_num = 6;
  uint32 left_time = 8;
  uint32 medal_level = 2;
  uint32 score = 10;
  bool is_new_record = 7;
}

message SummerTimeStageInfo {
  bool is_open = 13;
  uint32 open_time = 10;
  uint32 stage_id = 1;
}


message SummerTimeV2DetailInfo {
  repeated Unk2800_CGODFDDALAG Unk2800_PNBLCPIBKPO = 13;
  uint32 Unk2800_HDEFJKGDNEH = 10;
  bool is_content_closed = 4;
  uint32 Unk2800_ELHBCNPKOJG = 5;
  repeated Unk2800_CGPNLBNMPCM Unk2800_MPKLJJIEHIB = 15;
}

message SummerTimeV2DungeonSettleInfo {
  bool is_success = 5;
  uint32 Unk2800_ELHBCNPKOJG = 2;
  uint32 Unk2800_HDEFJKGDNEH = 11;
}


message SumoActivityDetailInfo {
  uint32 difficulty_id = 11;
  map<uint32, SumoStageData> sumo_stage_map = 13;
  uint32 Unk2700_NIJIAJMFLLD = 14;
}

message SumoAvatarInfo {
  bool is_trial = 2;
  uint64 avatar_id = 1;
}

message SumoDungeonAvatar {
  uint64 avatar_guid = 11;
  bool is_alive = 13;
  bool is_trial = 4;
}

// CmdId: 8291
// EnetChannelId: 0
// EnetIsReliable: true
message SumoDungeonSettleNotify {
  uint32 final_score = 7;
  uint32 difficulty_id = 14;
  uint32 kill_elite_monster_num = 15;
  uint32 stage_id = 12;
  uint32 kill_monster_num = 4;
  bool is_new_record = 5;
}


message SumoDungeonTeam {
  repeated SumoDungeonAvatar dungeon_avatar_list = 15;
}


// CmdId: 8013
// EnetChannelId: 0
// EnetIsReliable: true
message SumoEnterDungeonNotify {
  uint32 activity_id = 15;
  repeated SumoDungeonTeam dungeon_team_list = 11;
  uint32 no_switch_punish_time = 10;
  uint32 next_valid_switch_time = 13;
  uint32 stage_id = 7;
  uint32 cur_team_index = 5;
}

// CmdId: 8640
// EnetChannelId: 0
// EnetIsReliable: true
message SumoLeaveDungeonNotify {}

// CmdId: 8612
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SumoRestartDungeonReq {}

// CmdId: 8214
// EnetChannelId: 0
// EnetIsReliable: true
message SumoRestartDungeonRsp {
  int32 retcode = 11;
  uint32 dungeon_id = 4;
  uint32 point_id = 12;
}


// CmdId: 8313
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SumoSaveTeamReq {
  uint32 activity_id = 11;
  uint32 stage_id = 13;
  uint32 difficulty_id = 7;
  repeated SumoTeamData team_list = 12;
}


// CmdId: 8319
// EnetChannelId: 0
// EnetIsReliable: true
message SumoSaveTeamRsp {
  uint32 stage_id = 9;
  int32 retcode = 2;
  uint32 activity_id = 11;
  repeated SumoTeamData team_list = 13;
  uint32 difficulty_id = 10;
}


// CmdId: 8215
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SumoSelectTeamAndEnterDungeonReq {
  uint32 activity_id = 1;
  uint32 stage_id = 7;
  uint32 difficulty_id = 4;
  repeated SumoTeamData team_list = 10;
}


// CmdId: 8193
// EnetChannelId: 0
// EnetIsReliable: true
message SumoSelectTeamAndEnterDungeonRsp {
  int32 retcode = 1;
  uint32 activity_id = 14;
  uint32 difficulty_id = 12;
  uint32 stage_id = 9;
  repeated SumoTeamData team_list = 2;
}


// CmdId: 8935
// EnetChannelId: 0
// EnetIsReliable: true
message SumoSetNoSwitchPunishTimeNotify {
  uint32 cur_team_index = 15;
  uint32 stage_id = 13;
  repeated SumoDungeonTeam dungeon_team_list = 11;
  uint32 no_switch_punish_time = 2;
  uint32 next_valid_switch_time = 14;
  uint32 activity_id = 9;
}


message SumoStageData {
  uint32 max_score = 1;
  uint32 open_time = 5;
  uint32 stage_id = 3;
  repeated SumoTeamData team_list = 7;
  bool is_open = 11;
}

// CmdId: 8351
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message SumoSwitchTeamReq {
  uint32 stage_id = 9;
  uint32 activity_id = 5;
}


// CmdId: 8525
// EnetChannelId: 0
// EnetIsReliable: true
message SumoSwitchTeamRsp {
  uint32 next_valid_switch_time = 7;
  repeated SumoDungeonTeam dungeon_team_list = 10;
  uint32 activity_id = 6;
  int32 retcode = 14;
  uint32 cur_team_index = 11;
  uint32 stage_id = 5;
}


message SumoTeamData {
  repeated uint32 skill_id_list = 14;
  repeated SumoAvatarInfo avatar_info_list = 3;
}

enum SvrMsgId {
  SVR_MSG_ID_UNKNOWN = 0;
  SVR_MSG_ID_BLOCK_REFRESH_COUNTDOWN = 1;
  SVR_MSG_ID_AVATAR_REVIVE_BY_STATUE = 2;
  SVR_MSG_ID_DAILY_TASK_REWARD_MAX_NUM = 3;
  SVR_MSG_ID_ROUTINE_TYPE_NOT_OPEN = 4;
  SVR_MSG_ID_ROUTINE_TYPE_REWARD_MAX_NUM = 5;
  SVR_MSG_ID_MECHANICUS_COIN_LIMIT = 6;
}


// CmdId: 3333
// EnetChannelId: 0
// EnetIsReliable: true
message SyncScenePlayTeamEntityNotify {
  uint32 scene_id = 2;
  repeated PlayTeamEntityInfo entity_info_list = 3;
}


// CmdId: 317
// EnetChannelId: 0
// EnetIsReliable: true
message SyncTeamEntityNotify {
  uint32 scene_id = 13;
  repeated TeamEntityInfo team_entity_info_list = 15;
}

// CmdId: 2652
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeAchievementGoalRewardReq {
  repeated uint32 id_list = 5;
}


// CmdId: 2681
// EnetChannelId: 0
// EnetIsReliable: true
message TakeAchievementGoalRewardRsp {
  int32 retcode = 15;
  repeated uint32 id_list = 12;
  repeated ItemParam item_list = 5;
}

// CmdId: 2675
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeAchievementRewardReq {
  repeated uint32 id_list = 13;
}


// CmdId: 2657
// EnetChannelId: 0
// EnetIsReliable: true
message TakeAchievementRewardRsp {
  repeated uint32 id_list = 7;
  repeated ItemParam item_list = 10;
  int32 retcode = 1;
}

// CmdId: 2097
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeAsterSpecialRewardReq {
  uint32 schedule_id = 5;
}

// CmdId: 2193
// EnetChannelId: 0
// EnetIsReliable: true
message TakeAsterSpecialRewardRsp {
  int32 retcode = 12;
  uint32 schedule_id = 14;
}

// CmdId: 2629
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeBattlePassMissionPointReq {
  repeated uint32 mission_id_list = 5;
}

// CmdId: 2622
// EnetChannelId: 0
// EnetIsReliable: true
message TakeBattlePassMissionPointRsp {
  int32 retcode = 4;
  repeated uint32 mission_id_list = 11;
}


// CmdId: 2602
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeBattlePassRewardReq {
  repeated BattlePassRewardTakeOption take_option_list = 12;
}


// CmdId: 2631
// EnetChannelId: 0
// EnetIsReliable: true
message TakeBattlePassRewardRsp {
  repeated ItemParam item_list = 7;
  int32 retcode = 13;
  repeated BattlePassRewardTakeOption take_option_list = 9;
}

// CmdId: 2897
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeCityReputationExploreRewardReq {
  uint32 city_id = 15;
  repeated uint32 explore_id_list = 12;
}


// CmdId: 2881
// EnetChannelId: 0
// EnetIsReliable: true
message TakeCityReputationExploreRewardRsp {
  repeated uint32 explore_id_list = 8;
  repeated ItemParam item_list = 12;
  int32 retcode = 6;
  uint32 city_id = 13;
}

// CmdId: 2812
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeCityReputationLevelRewardReq {
  uint32 level = 11;
  uint32 city_id = 1;
}


// CmdId: 2835
// EnetChannelId: 0
// EnetIsReliable: true
message TakeCityReputationLevelRewardRsp {
  uint32 city_id = 15;
  int32 retcode = 11;
  repeated ItemParam item_list = 13;
  uint32 level = 9;
}

// CmdId: 2821
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeCityReputationParentQuestReq {
  uint32 city_id = 1;
  repeated uint32 parent_quest_list = 6;
}


// CmdId: 2803
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeCityReputationParentQuestRsp {
  int32 retcode = 7;
  uint32 city_id = 14;
  repeated uint32 parent_quest_list = 9;
  repeated ItemParam item_list = 13;
}

// CmdId: 174
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeCompoundOutputReq {
  uint32 compound_group_id = 3;
  uint32 compound_id = 10;
}


// CmdId: 176
// EnetChannelId: 0
// EnetIsReliable: true
message TakeCompoundOutputRsp {
  repeated ItemParam item_list = 6;
  int32 retcode = 2;
}

// CmdId: 1973
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeCoopRewardReq {
  uint32 reward_config_id = 6;
}

// CmdId: 1985
// EnetChannelId: 0
// EnetIsReliable: true
message TakeCoopRewardRsp {
  int32 retcode = 9;
  uint32 reward_config_id = 1;
}

// CmdId: 2121
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeDeliveryDailyRewardReq {
  uint32 schedule_id = 9;
}

// CmdId: 2162
// EnetChannelId: 0
// EnetIsReliable: true
message TakeDeliveryDailyRewardRsp {
  uint32 schedule_id = 5;
  int32 retcode = 7;
}

// CmdId: 2196
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeEffigyFirstPassRewardReq {
  uint32 challenge_id = 6;
}

// CmdId: 2061
// EnetChannelId: 0
// EnetIsReliable: true
message TakeEffigyFirstPassRewardRsp {
  uint32 challenge_id = 2;
  int32 retcode = 7;
}

// CmdId: 2040
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeEffigyRewardReq {
  uint32 reward_index = 14;
}

// CmdId: 2007
// EnetChannelId: 0
// EnetIsReliable: true
message TakeEffigyRewardRsp {
  int32 retcode = 15;
  uint32 reward_index = 7;
}

// CmdId: 4074
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeFirstShareRewardReq {}

// CmdId: 4076
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeFirstShareRewardRsp {
  int32 retcode = 15;
}

// CmdId: 4772
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeFurnitureMakeReq {
  uint32 index = 8;
  bool is_fast_finish = 12;
  uint32 make_id = 7;
}


// CmdId: 4769
// EnetChannelId: 0
// EnetIsReliable: true
message TakeFurnitureMakeRsp {
  FurnitureMakeSlot furniture_make_slot = 8;
  repeated ItemParam return_item_list = 2;
  uint32 make_id = 6;
  int32 retcode = 9;
  repeated ItemParam output_item_list = 14;
}


// CmdId: 4326
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeHuntingOfferReq {
  HuntingPair hunting_pair = 14;
  uint32 city_id = 4;
}


// CmdId: 4318
// EnetChannelId: 0
// EnetIsReliable: true
message TakeHuntingOfferRsp {
  HuntingPair hunting_pair = 13;
  uint32 city_id = 14;
  int32 retcode = 3;
}

// CmdId: 1912
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeInvestigationRewardReq {
  uint32 id = 5;
}

// CmdId: 1922
// EnetChannelId: 0
// EnetIsReliable: true
message TakeInvestigationRewardRsp {
  int32 retcode = 4;
  uint32 id = 12;
}

// CmdId: 1918
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeInvestigationTargetRewardReq {
  uint32 quest_id = 11;
}

// CmdId: 1916
// EnetChannelId: 0
// EnetIsReliable: true
message TakeInvestigationTargetRewardRsp {
  int32 retcode = 1;
  uint32 quest_id = 2;
}


// CmdId: 629
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeMaterialDeleteReturnReq {
  MaterialDeleteReturnType type = 8;
}

// CmdId: 657
// EnetChannelId: 0
// EnetIsReliable: true
message TakeMaterialDeleteReturnRsp {
  int32 retcode = 14;
}

// CmdId: 2919
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeOfferingLevelRewardReq {
  uint32 level = 6;
  uint32 offering_id = 11;
}


// CmdId: 2911
// EnetChannelId: 0
// EnetIsReliable: true
message TakeOfferingLevelRewardRsp {
  uint32 offering_id = 3;
  uint32 take_level = 4;
  int32 retcode = 8;
  repeated ItemParam item_list = 2;
}

// CmdId: 129
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakePlayerLevelRewardReq {
  uint32 level = 3;
}

// CmdId: 157
// EnetChannelId: 0
// EnetIsReliable: true
message TakePlayerLevelRewardRsp {
  uint32 reward_id = 9;
  int32 retcode = 13;
  uint32 level = 6;
}

// CmdId: 5625
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeRegionSearchRewardReq {
  uint32 search_id = 3;
  uint32 id = 15;
}

// CmdId: 5607
// EnetChannelId: 0
// EnetIsReliable: true
message TakeRegionSearchRewardRsp {
  uint32 search_id = 14;
  uint32 id = 1;
  int32 retcode = 5;
}

// CmdId: 4122
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeResinCardDailyRewardReq {
  uint32 product_config_id = 14;
}


// CmdId: 4144
// EnetChannelId: 0
// EnetIsReliable: true
message TakeResinCardDailyRewardRsp {
  repeated ItemParam item_vec = 6;
  int32 retcode = 4;
  uint32 product_config_id = 12;
}

// CmdId: 5075
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeReunionFirstGiftRewardReq {}

// CmdId: 5057
// EnetChannelId: 0
// EnetIsReliable: true
message TakeReunionFirstGiftRewardRsp {
  int32 reward_id = 9;
  int32 retcode = 15;
}

// CmdId: 5092
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeReunionMissionRewardReq {
  uint32 reward_id = 7;
  uint32 reward_index = 4;
  uint32 mission_id = 12;
}


// CmdId: 5064
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeReunionMissionRewardRsp {
  uint32 reward_index = 12;
  int32 retcode = 2;
  ReunionMissionInfo mission_info = 9;
  uint32 reward_id = 3;
}

// CmdId: 5079
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeReunionSignInRewardReq {
  uint32 reward_day = 12;
  uint32 config_id = 14;
}


// CmdId: 5072
// EnetChannelId: 0
// EnetIsReliable: true
message TakeReunionSignInRewardRsp {
  ReunionSignInInfo sign_in_info = 10;
  int32 retcode = 5;
}

// CmdId: 5070
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeReunionWatcherRewardReq {
  uint32 watcher_id = 12;
  uint32 mission_id = 15;
}

// CmdId: 5095
// EnetChannelId: 0
// EnetIsReliable: true
message TakeReunionWatcherRewardRsp {
  uint32 mission_id = 15;
  uint32 watcher_id = 9;
  int32 retcode = 10;
}

// CmdId: 605
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TakeoffEquipReq {
  uint64 avatar_guid = 8;
  uint32 slot = 15;
}

// CmdId: 682
// EnetChannelId: 0
// EnetIsReliable: true
message TakeoffEquipRsp {
  uint64 avatar_guid = 9;
  int32 retcode = 6;
  uint32 slot = 10;
}


message TanukiTravelActivityDetailInfo {
  repeated Unk2700_BIFNFOGBPNM Unk2700_JBPFIDDPGME = 4;
  bool is_content_closed = 11;
  uint32 Unk2700_BHHCNOLMCJM = 10;
}

message TaskVar {
  uint32 key = 8;
  repeated int32 value_list = 6;
}


// CmdId: 160
// EnetChannelId: 0
// EnetIsReliable: true
message TaskVarNotify {
  repeated TaskVar task_var_list = 7;
}


message TeamEnterSceneInfo {
  AbilityControlBlock ability_control_block = 7;
  AbilitySyncStateInfo team_ability_info = 10;
  uint32 team_entity_id = 15;
}


message TeamEntityInfo {
  uint32 authority_peer_id = 10;
  AbilitySyncStateInfo team_ability_info = 9;
  uint32 team_entity_id = 8;
}


// CmdId: 1082
// EnetChannelId: 0
// EnetIsReliable: true
message TeamResonanceChangeNotify {
  repeated AvatarTeamResonanceInfo info_list = 1;
}

// CmdId: 2490
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TowerAllDataReq {
  bool is_interact = 2;
}


// CmdId: 2473
// EnetChannelId: 0
// EnetIsReliable: true
message TowerAllDataRsp {
  uint32 tower_schedule_id = 10;
  uint32 daily_level_index = 9;
  map<uint32, uint32> skip_floor_granted_reward_item_map = 12;
  bool is_first_interact = 3;
  bool is_finished_entrance_floor = 1;
  repeated TowerFloorRecord tower_floor_record_list = 5;
  uint32 daily_floor_id = 11;
  uint32 commemorative_reward_id = 13;
  TowerMonthlyBrief last_schedule_monthly_brief = 1222;
  uint32 next_schedule_change_time = 6;
  uint32 valid_tower_record_num = 7;
  uint32 skip_to_floor_index = 2;
  map<uint32, uint32> floor_open_time_map = 4;
  TowerCurLevelRecord cur_level_record = 15;
  int32 retcode = 8;
  uint32 schedule_start_time = 914;
  TowerMonthlyBrief monthly_brief = 14;
}

// CmdId: 2472
// EnetChannelId: 0
// EnetIsReliable: true
message TowerBriefDataNotify {
  uint32 total_star_num = 11;
  uint32 last_floor_index = 8;
  uint32 schedule_start_time = 15;
  uint32 next_schedule_change_time = 6;
  bool is_finished_entrance_floor = 14;
  uint32 last_level_index = 4;
  uint32 tower_schedule_id = 5;
}

// CmdId: 2448
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TowerBuffSelectReq {
  uint32 tower_buff_id = 5;
}

// CmdId: 2497
// EnetChannelId: 0
// EnetIsReliable: true
message TowerBuffSelectRsp {
  int32 retcode = 11;
  uint32 tower_buff_id = 13;
}


message TowerCurLevelRecord {
  repeated TowerTeam tower_team_list = 8;
  bool is_empty = 6;
  repeated uint32 buff_id_list = 4;
  bool Unk2700_CBPNPEBMPOH = 2;
  uint32 cur_level_index = 1;
  uint32 cur_floor_id = 15;
}


// CmdId: 2412
// EnetChannelId: 0
// EnetIsReliable: true
message TowerCurLevelRecordChangeNotify {
  TowerCurLevelRecord cur_level_record = 10;
}

// CmdId: 2435
// EnetChannelId: 0
// EnetIsReliable: true
message TowerDailyRewardProgressChangeNotify {
  uint32 daily_floor_id = 15;
  uint32 daily_level_index = 9;
}

// CmdId: 2431
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TowerEnterLevelReq {
  uint32 enter_point_id = 3;
}

// CmdId: 2475
// EnetChannelId: 0
// EnetIsReliable: true
message TowerEnterLevelRsp {
  repeated uint32 tower_buff_id_list = 10;
  int32 retcode = 1;
  uint32 level_index = 14;
  uint32 floor_id = 5;
}

message TowerFightRecordPair {
  uint32 avatar_id = 1;
  uint32 data = 3;
}


message TowerFloorRecord {
  uint32 floor_star_reward_progress = 15;
  map<uint32, uint32> passed_level_map = 8;
  uint32 floor_id = 12;
  repeated TowerLevelRecord passed_level_record_list = 2;
}


// CmdId: 2498
// EnetChannelId: 0
// EnetIsReliable: true
message TowerFloorRecordChangeNotify {
  bool is_finished_entrance_floor = 11;
  repeated TowerFloorRecord tower_floor_record_list = 8;
}

// CmdId: 2404
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TowerGetFloorStarRewardReq {
  uint32 floor_id = 15;
}

// CmdId: 2493
// EnetChannelId: 0
// EnetIsReliable: true
message TowerGetFloorStarRewardRsp {
  int32 retcode = 11;
  uint32 floor_id = 9;
}


// CmdId: 2495
// EnetChannelId: 0
// EnetIsReliable: true
message TowerLevelEndNotify {
  uint32 next_floor_id = 4;
  repeated ItemParam reward_item_list = 12;
  uint32 continue_state = 15;
  bool is_success = 5;
  repeated uint32 finished_star_cond_list = 6;
  enum ContinueStateType {
    CONTINUE_STATE_TYPE_CAN_NOT_CONTINUE = 0;
    CONTINUE_STATE_TYPE_CAN_ENTER_NEXT_LEVEL = 1;
    CONTINUE_STATE_TYPE_CAN_ENTER_NEXT_FLOOR = 2;
  }
}

message TowerLevelRecord {
  repeated uint32 satisfied_cond_list = 13;
  uint32 level_id = 10;
}

message TowerLevelStarCondData {
  bool Unk2700_HIFMJMAHEMB = 15;
  uint32 cond_value = 9;
  bool is_pause = 13;
  uint32 star_cond_index = 6;
}


// CmdId: 2406
// EnetChannelId: 0
// EnetIsReliable: true
message TowerLevelStarCondNotify {
  uint32 level_index = 14;
  uint32 floor_id = 11;
  repeated TowerLevelStarCondData cond_data_list = 9;
}

// CmdId: 2434
// EnetChannelId: 0
// EnetIsReliable: true
message TowerMiddleLevelChangeTeamNotify {}

message TowerMonthlyBrief {
  uint32 tower_schedule_id = 15;
  uint32 best_floor_index = 6;
  uint32 best_level_index = 3;
  uint32 total_star_count = 12;
}


message TowerMonthlyCombatRecord {
  TowerFightRecordPair most_kill_avatar_pair = 14;
  TowerFightRecordPair most_cast_normal_skill_avatar_pair = 8;
  repeated TowerFightRecordPair most_reveal_avatar_list = 6;
  TowerFightRecordPair most_cast_energy_skill_avatar_pair = 4;
  TowerFightRecordPair highest_dps_avatr_pair = 12;
  TowerFightRecordPair most_take_damage_avatar_pair = 9;
}


message TowerMonthlyDetail {
  TowerMonthlyCombatRecord monthly_combat_record = 2;
  TowerMonthlyBrief monthly_brief = 12;
}

// CmdId: 2450
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TowerRecordHandbookReq {}


// CmdId: 2443
// EnetChannelId: 0
// EnetIsReliable: true
message TowerRecordHandbookRsp {
  int32 retcode = 7;
  repeated TowerMonthlyDetail monthly_detail_list = 14;
}

// CmdId: 2422
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TowerSurrenderReq {}

// CmdId: 2465
// EnetChannelId: 0
// EnetIsReliable: true
message TowerSurrenderRsp {
  int32 retcode = 9;
}

message TowerTeam {
  uint32 tower_team_id = 3;
  repeated uint64 avatar_guid_list = 14;
}


// CmdId: 2421
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TowerTeamSelectReq {
  repeated TowerTeam tower_team_list = 11;
  uint32 floor_id = 10;
}

// CmdId: 2403
// EnetChannelId: 0
// EnetIsReliable: true
message TowerTeamSelectRsp {
  int32 retcode = 8;
}

message TrackingIOInfo {
  string rydevicetype = 11;
  string mac = 6;
  string deviceid = 9;
  string client_tz = 5;
  string current_caid = 7;
  string cached_caid = 15;
  string appid = 1;
}

enum TransmitReason {
  TRANSMIT_REASON_NONE = 0;
  TRANSMIT_REASON_QUEST = 1;
}


message TreasureMapActivityDetailInfo {
  uint32 active_region_index = 1;
  repeated TreasureMapRegionInfo region_info_list = 6;
  bool is_mp_challenge_touched = 7;
  uint32 treasure_close_time = 10;
  repeated TreasureMapBonusChallengeInfo bonus_challenge_list = 5;
  uint32 currency_num = 2;
  uint32 preview_reward_id = 14;
  uint32 min_open_player_level = 8;
  uint32 total_mp_spot_num = 13;
}

message TreasureMapBonusChallengeInfo {
  bool is_done = 5;
  uint32 config_id = 10;
  bool is_active = 1;
  map<uint32, bool> fragment_map = 12;
  uint32 solution_id = 8;
}


// CmdId: 2115
// EnetChannelId: 0
// EnetIsReliable: true
message TreasureMapBonusChallengeNotify {
  TreasureMapBonusChallengeInfo info = 5;
}

// CmdId: 2171
// EnetChannelId: 0
// EnetIsReliable: true
message TreasureMapCurrencyNotify {
  uint32 currency_num = 8;
}


message TreasureMapDetectorData {
  uint32 region_id = 4;
  Vector center_pos = 7;
  bool is_region_detected = 6;
  repeated Vector spot_list = 10;
  uint32 radius = 14;
}


// CmdId: 4300
// EnetChannelId: 0
// EnetIsReliable: true
message TreasureMapDetectorDataNotify {
  TreasureMapDetectorData data = 2;
}

// CmdId: 2119
// EnetChannelId: 0
// EnetIsReliable: true
message TreasureMapGuideTaskDoneNotify {}

// CmdId: 8681
// EnetChannelId: 0
// EnetIsReliable: true
message TreasureMapHostInfoNotify {
  repeated uint32 mp_challenge_region_list = 8;
}

// CmdId: 2048
// EnetChannelId: 0
// EnetIsReliable: true
message TreasureMapMpChallengeNotify {}

// CmdId: 2152
// EnetChannelId: 0
// EnetIsReliable: true
message TreasureMapPreTaskDoneNotify {}

// CmdId: 2122
// EnetChannelId: 0
// EnetIsReliable: true
message TreasureMapRegionActiveNotify {
  uint32 active_region_index = 14;
}


message TreasureMapRegionInfo {
  uint32 start_time = 6;
  uint32 current_progress = 11;
  bool is_done_mp_spot = 3;
  uint32 scene_id = 2;
  uint32 goal_points = 12;
  bool is_find_mp_spot = 4;
  uint32 region_radius = 1;
  Vector region_center_pos = 9;
  uint32 region_id = 5;
}


// CmdId: 2185
// EnetChannelId: 0
// EnetIsReliable: true
message TreasureMapRegionInfoNotify {
  TreasureMapRegionInfo region_info = 14;
}


message TrialAvatarActivityDetailInfo {
  repeated TrialAvatarActivityRewardDetailInfo reward_info_list = 13;
}

message TrialAvatarActivityRewardDetailInfo {
  bool passed_dungeon = 2;
  uint32 trial_avatar_index_id = 4;
  bool received_reward = 5;
  uint32 reward_id = 7;
}

// CmdId: 2013
// EnetChannelId: 0
// EnetIsReliable: true
message TrialAvatarFirstPassDungeonNotify {
  uint32 trial_avatar_index_id = 10;
}

message TrialAvatarGrantRecord {
  uint32 grant_reason = 1;
  uint32 from_parent_quest_id = 2;
  enum GrantReason {
    GRANT_REASON_INVALID = 0;
    GRANT_REASON_BY_QUEST = 1;
    GRANT_REASON_BY_TRIAL_AVATAR_ACTIVITY = 2;
    GRANT_REASON_BY_DUNGEON_ELEMENT_CHALLENGE = 3;
    GRANT_REASON_BY_MIST_TRIAL_ACTIVITY = 4;
    GRANT_REASON_BY_SUMO_ACTIVITY = 5;
    GRANT_REASON_Unk2700_ELPMDIEIOHP = 6;
    GRANT_REASON_Unk2700_FALPDBLGHJB = 7;
    GRANT_REASON_Unk2700_GAMADMGGMBC = 8;
    GRANT_REASON_Unk2800_FIIDJHAKMOI = 9;
  }
}

// CmdId: 2186
// EnetChannelId: 0
// EnetIsReliable: true
message TrialAvatarInDungeonIndexNotify {
  uint32 trial_avatar_index_id = 14;
}


message TrialAvatarInfo {
  uint32 trial_avatar_id = 1;
  repeated Item trial_equip_list = 2;
  TrialAvatarGrantRecord grant_record = 3;
}

// CmdId: 350
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TriggerCreateGadgetToEquipPartNotify {
  uint32 gadget_id = 1;
  uint32 entity_id = 13;
  string equip_part = 14;
  uint32 gadget_entity_id = 10;
}

// CmdId: 8412
// EnetChannelId: 0
// EnetIsReliable: true
message TriggerRoguelikeCurseNotify {
  repeated uint32 effect_param_list = 14;
  uint32 curse_group_id = 9;
  bool is_trigger_curse = 13;
  uint32 curse_level = 3;
}

// CmdId: 8463
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TriggerRoguelikeRuneReq {
  uint32 rune_id = 8;
}

// CmdId: 8065
// EnetChannelId: 0
// EnetIsReliable: true
message TriggerRoguelikeRuneRsp {
  uint32 available_count = 4;
  uint32 rune_id = 14;
  int32 retcode = 8;
}

// CmdId: 4482
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message TryEnterHomeReq {
  uint32 target_uid = 3;
  uint32 target_point = 9;
}

// CmdId: 4653
// EnetChannelId: 0
// EnetIsReliable: true
message TryEnterHomeRsp {
  uint32 target_uid = 15;
  int32 retcode = 4;
  repeated uint32 param_list = 10;
}


message UgcActivityDetailInfo {
  bool Unk2700_GMICFADLAMC = 10;
  uint32 Unk2700_FDDCMGKDOCC = 12;
  repeated Unk2700_MMJJMKMHANL Unk2700_ILCAPJBAFOI = 5;
  bool Unk2700_PNOCELCOFNK = 11;
}

message Uint32Pair {
  uint32 key = 1;
  uint32 value = 2;
}

// CmdId: 3220
// EnetChannelId: 0
// EnetIsReliable: true
message UnfreezeGroupLimitNotify {
  uint32 point_id = 9;
  uint32 scene_id = 11;
}

message UnionCmd {
  bytes body = 14;
  uint32 message_id = 8;
}


// CmdId: 5
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UnionCmdNotify {
  repeated UnionCmd cmd_list = 1;
}

// CmdId: 88
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2200_DEHCEKCILAB_ClientNotify {}


message Unk2700_AAAMOFPACEA {
  repeated Unk2700_DJDEPPHEHCP Unk2700_ILGPNAAFFEG = 6;
}


// CmdId: 8231
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_AAHKMNNAFIH {
  uint32 gallery_id = 13;
  Unk2700_ICPNKAALJEP settle_info = 12;
}

// CmdId: 4537
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_ACILPONNGGK_ClientReq {}

// CmdId: 6240
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_ADBFKMECFNJ_ClientNotify {
  int32 retcode = 15;
}

enum Unk2700_ADGLMHECKKJ {
  Unk2700_ADGLMHECKKJ_Unk2700_KHKEKEIAPBP = 0;
  Unk2700_ADGLMHECKKJ_Unk2700_LNCNKDBGPLH = 1;
  Unk2700_ADGLMHECKKJ_Unk2700_PEMOMIPJAGM = 2;
  Unk2700_ADGLMHECKKJ_Unk2700_KHKIDAFCLLJ = 3;
}

message Unk2700_ADIGEBEIJBA {
  bool is_trial = 8;
  uint64 avatar_guid = 11;
}

// CmdId: 8481
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_AEEMJIMOPKD {
  uint32 stage_id = 13;
  int32 retcode = 14;
  bool is_success = 3;
}


message Unk2700_AFOPONDCLKC {
  string nickname = 14;
  uint32 uid = 12;
  ProfilePicture profile_picture = 5;
  repeated uint32 item_id_list = 9;
}

enum Unk2700_AGIDJODJNEA {
  Unk2700_AGIDJODJNEA_Unk2700_OAEGNAOPMFB = 0;
  Unk2700_AGIDJODJNEA_Unk2700_DLDNOOGCFNB = 1;
  Unk2700_AGIDJODJNEA_Unk2700_PONLJLLPNPI = 2;
  Unk2700_AGIDJODJNEA_Unk2700_POHNGFOIPAH = 3;
}

// CmdId: 8768
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_AHHFDDOGCNA {
  map<uint32, uint32> Unk2700_DACHHINLDDJ = 3;
  int32 retcode = 13;
}

// CmdId: 8066
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_AHOMMGBBIAH {
  uint32 trial_id = 12;
  int32 retcode = 4;
}


// CmdId: 8147
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_AIBHKIENDPF {
  uint32 level_id = 1;
  uint32 difficulty_id = 14;
  int32 retcode = 6;
  repeated Unk2700_BGKMAAINPCO Unk2700_GMAEHKMDIGG = 8;
}


message Unk2700_AIGECAPPCKK {
  repeated Unk2700_HIHKGMLLOGD Unk2700_AEJIIOOPJIL = 3;
  uint32 Unk2700_HNCBHBKDODH = 14;
}

// CmdId: 6244
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_AIGKGLHBMCP_ServerRsp {
  int32 retcode = 1;
  uint32 room_id = 13;
}

// CmdId: 8740
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_AIKOFHAKNPC {
  uint32 trial_id = 13;
}

message Unk2700_AIMMLILLOKB {
  map<uint32, uint32> Unk2700_DLKPHFDEDNF = 3;
  uint32 uid = 6;
  map<uint32, uint32> Unk2700_HDJPJBIFMCO = 13;
}


// CmdId: 8120
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_AKIBKKOMBMC {
  int32 retcode = 15;
  repeated Unk2700_IEPIBFMCJNJ Unk2700_GOCEOKPHFIO = 11;
  uint32 schedule_id = 6;
}


// CmdId: 6036
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_ALBPFHFJHHF_ClientReq {
  Unk2700_JDPMOMKAPIF Unk2700_HPNDCCFNPEF = 3;
}

// CmdId: 8022
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_ALFEKGABMAA {}


message Unk2700_AMJFIJNNGHC {
  bool is_open = 8;
  repeated Unk2700_PEDJGJMHMHH Unk2700_KPEIIFDINPC = 1;
}

message Unk2700_AMKLCEFNNCC {
  bool is_trial = 6;
  uint64 avatar_id = 8;
}


// CmdId: 6090
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_AMOEOCPOMGJ_ClientReq {
  Unk2700_JMPCGMBHJLG Unk2700_KHPPLOGFMDE = 13;
}


// CmdId: 8357
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_ANEBALDAFJI {
  repeated ItemParam item_list = 8;
  int32 retcode = 11;
}


// CmdId: 6344
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_ANGBJGAOMHF_ClientReq {
  Unk2700_OPEBMJPOOBL Unk2700_KHBDAPGDOJA = 7;
  uint64 Unk2700_CEPGMKAHHCD = 12;
}

// CmdId: 8614
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_AOIJNFMIAIP {}

// CmdId: 8610
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_APNHPEJCDMO {
  uint32 Unk2700_PCKNCDNENCD = 1;
  int32 retcode = 3;
}


// CmdId: 8216
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_APOBKAEHMEL {
  repeated ItemParam Unk2700_EENOCHNIAJL = 1;
}

// CmdId: 8192
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BBLJNCKPKPN {
  uint32 level_id = 8;
  uint32 stage_id = 7;
}


// CmdId: 8580
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_BBMKJGPMIOE {
  Unk2700_KIGGOKAEFHM Unk2700_CNJPCCECBPD = 14;
}

// CmdId: 8419
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BCFKCLHCBDI {
  uint32 difficulty = 1;
  uint32 stage_id = 12;
}

// CmdId: 8227
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BCPHPHGOKGN {
  uint32 level_id = 6;
}


// CmdId: 8499
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_BEDCCMDPNCH {
  uint32 gallery_id = 14;
  Unk2700_BKHBKHINBIA settle_info = 15;
}

// CmdId: 4558
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BEDLIGJANCJ_ClientReq {
  uint32 Unk2700_BJHAMKKECEI = 14;
}


message Unk2700_BEGHDPPNMFM {
  repeated Unk2700_OCDMIOKNHHH Unk2700_AOFJNJNBAAI = 14;
  uint32 timestamp = 9;
}

// CmdId: 333
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BEINCMBJDAA_ClientReq {
  uint32 target_id = 1;
  float Unk2700_AEIDAJFHBBB = 5;
  uint32 source_id = 13;
  float Unk2700_JLLFGAIOPGC = 4;
}


message Unk2700_BGKMAAINPCO {
  repeated Unk2700_PKAPCOBGIJL Unk2700_INIBKFPMCFO = 2;
  repeated Unk2700_JPGAAHJBLKB avatar_info_list = 11;
}


message Unk2700_BIEMCDLIFOD {
  uint32 guid = 11;
  Vector spawn_pos = 14;
  repeated int32 included_furniture_index_list = 12;
}

message Unk2700_BIFNFOGBPNM {
  bool is_open = 5;
  uint32 route_id = 9;
  bool Unk2700_MMNILGLDHHD = 15;
}


message Unk2700_BJJOMPDLNAL {
  repeated Uint32Pair monster_list = 1;
  bool Unk2700_NILLABGAALO = 3;
  uint32 config_id = 7;
}

// CmdId: 6209
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BKEELPKCHGO_ClientReq {}

// CmdId: 8561
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BKGPMAHMHIG {
  bool Unk2700_PHGMKGEMCFF = 2;
  uint32 level_id = 12;
  uint32 card_id = 9;
}


message Unk2700_BKHBKHINBIA {
  Unk2700_EGKIHLIOLDM settle_info = 3;
  bool is_new_record = 2;
}

// CmdId: 8948
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_BLCHNMCGJCJ {
  int32 retcode = 11;
}


// CmdId: 8772
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_BLFFJBMLAPI {
  int32 retcode = 9;
  repeated ItemParam Unk2700_PILJPPJNGEJ = 14;
  repeated ItemParam Unk2700_EENOCHNIAJL = 1;
}

// CmdId: 4654
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_BLHIGLFDHFA_ServerNotify {
  uint32 trigger_entity_id = 10;
  uint32 cur_score = 9;
  uint32 add_score = 7;
  uint32 gallery_id = 5;
}

// CmdId: 8854
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_BLNOMGJJLOI {
  int32 retcode = 1;
  uint32 Unk2700_CKGJEOOKFIF = 8;
}

enum Unk2700_BMBAIACNLDF {
  Unk2700_BMBAIACNLDF_Unk2700_KOGCCKHAIBJ = 0;
  Unk2700_BMBAIACNLDF_Unk2700_OHHELAGBFFO = 1;
  Unk2700_BMBAIACNLDF_Unk2700_BIGKGGIMNCD = 2;
}

// CmdId: 8178
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BMDBBHFJMPF {
  uint32 activity_id = 1;
}

// CmdId: 8226
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BNABFJBODGE {
  uint32 stage_id = 12;
  uint32 skill_id = 11;
  uint32 challenge_id = 10;
  uint32 Unk2700_AIKKJGOLLHK = 13;
}

// CmdId: 8602
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BNCBHLOKDCD {
  uint32 num = 10;
}


// CmdId: 8641
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BNMDCEKPDMC {
  uint32 stage_id = 8;
  repeated uint32 Unk2700_KIFPKPGKJCA = 14;
  repeated Unk2700_HJLFNKLPFBH avatar_list = 13;
  repeated Unk2700_BJJOMPDLNAL Unk2700_AAGBIFHNNPP = 2;
  repeated uint32 Unk2700_GGNBBHMGLAN = 10;
  repeated Unk2700_HJLFNKLPFBH Unk2700_PLHIJIHFNDL = 9;
  repeated uint32 Unk2700_OKGKHPCMNMN = 15;
  repeated Unk2700_HJLFNKLPFBH Unk2700_BBGHICEDLBB = 11;
}

// CmdId: 8921
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BOEHCEAAKKA {
  uint32 Unk2700_CKGJEOOKFIF = 15;
  uint32 Unk2700_ADNAKNMDMGG = 2;
  bool is_succ = 5;
}

// CmdId: 8590
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_BOPIJJPNHCK {
  int32 retcode = 4;
}

// CmdId: 8449
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_BPFNCHEFKJM {
  int32 retcode = 10;
}

// CmdId: 8280
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_BPPDLOJLAAO {}


// CmdId: 8502
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_CALNMMBNKFD {
  Unk2700_AIMMLILLOKB Unk2700_GHDHIBDLFPN = 4;
  int32 retcode = 11;
  uint32 schedule_id = 10;
}


// CmdId: 8597
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_CAODHBDOGNE {
  uint32 stage_id = 12;
  repeated uint32 Unk2700_HIMJICENGCC = 15;
  uint32 time = 4;
  uint32 Unk2700_COOCEOOMMKC = 5;
  uint32 Unk2700_PPEBOKBCPLE = 6;
  uint32 coin = 11;
  uint32 difficulty = 8;
  uint32 dungeon_id = 14;
  repeated Unk2700_BJJOMPDLNAL Unk2700_AAGBIFHNNPP = 7;
  repeated uint32 Unk2700_ALMOAMMNNGP = 10;
}

// CmdId: 8159
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_CBGOFDNILKA {
  uint32 Unk2700_APJPPLAAFEM = 13;
  bool Unk2700_JGAMIHLFFOI = 1;
}

enum Unk2700_CBJEDMGOBPL {
  Unk2700_CBJEDMGOBPL_Unk2700_MBLDLJOKLBL = 0;
  Unk2700_CBJEDMGOBPL_Unk2700_ILOMIKADKGD = 1;
  Unk2700_CBJEDMGOBPL_Unk2700_HGHOEJGHMDH = 2;
  Unk2700_CBJEDMGOBPL_Unk2700_PJCONIDJGOD = 3;
}


message Unk2700_CBMGMANEDNA {
  repeated Unk2700_DOGEKCNIIAO monster_info_list = 6;
  uint32 entrance_point_id = 4;
}

// CmdId: 3314
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_CCCKFHICDHD_ClientNotify {
  repeated uint32 Unk2700_KPKEIFJJDAO = 9;
}


message Unk2700_CCEOEOHLAPK {
  bool is_hint_valid = 3;
  Vector hint_center_pos = 8;
  uint32 group_id = 6;
  uint32 config_id = 9;
}

// CmdId: 6213
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_CEEONDKDIHH_ClientReq {
  bool Unk2700_MAPEEDEBLKN = 9;
  uint64 Unk2700_ONOOJBEABOE = 11;
}

// CmdId: 8143
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_CFLKEDHFPAB {}

// CmdId: 8240
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_CGNFBKKBPJE {
  int32 retcode = 13;
  uint32 stage_id = 6;
}

// CmdId: 8149
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_CHICHNGLKPI {
  uint32 id = 5;
  uint32 max_score = 14;
}


message Unk2700_CHLNIDHHGLE {
  uint32 score = 8;
  Unk2700_MOFABPNGIKP reason = 14;
  uint32 hit_count = 10;
  uint32 owner_uid = 6;
}

// CmdId: 1951
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_CILGDLMHCNG_ServerNotify {
  string Unk2700_GEBOKAMGEEB = 7;
  uint32 chapter_id = 15;
}

// CmdId: 6342
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_CIOMEDJDPBP_ClientReq {}

// CmdId: 8153
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_CJKCCLEGPCM {
  int32 retcode = 6;
  uint32 id = 15;
}

enum Unk2700_CKMOPKMKCAO {
  Unk2700_CKMOPKMKCAO_Unk2700_BJNNKGGOEIM = 0;
  Unk2700_CKMOPKMKCAO_MINE = 1;
  Unk2700_CKMOPKMKCAO_Unk2700_ECDAEGKEKIJ = 2;
}

// CmdId: 8725
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_CLKGPNDKIDD {
  uint32 schedule_id = 8;
}

// CmdId: 8938
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_CLMGFEOPNFH {
  int32 retcode = 10;
  uint32 gallery_id = 12;
}

message Unk2700_CMKDNIANBNE {
  string type = 1;
  string content = 2;
  uint32 Unk2700_POPBOKAKBBO = 3;
}

message Unk2700_CMOCCENBOLJ {
  bool Unk2700_MMNILGLDHHD = 10;
  uint32 Unk2700_OLLKIFMOPAG = 5;
  uint32 finish_time = 15;
  uint32 difficulty = 13;
}

// CmdId: 8903
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_CNEIMEHAAAF {
  int32 retcode = 4;
}

// CmdId: 8264
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_CNNJKJFHGGD {
  repeated uint32 Unk2700_ABJAKBCPEEC = 11;
  int32 retcode = 3;
}

// CmdId: 8535
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_COGBIJAPDLE {
  int32 retcode = 3;
}

// CmdId: 8817
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_CPDDDMPAIDL {
  bool Unk2700_PHGMKGEMCFF = 10;
  uint32 card_id = 13;
  uint32 level_id = 14;
  int32 retcode = 11;
}

// CmdId: 8588
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_CPEMGFIMICD {
  uint32 Unk2700_LKBHLHIHJGL = 1;
  int32 retcode = 14;
}

message Unk2700_CPNDLPDOPGN {
  uint64 Unk2700_ONOOJBEABOE = 3;
  uint32 uid = 15;
  uint32 timestamp = 4;
  string region = 11;
  uint32 lang = 13;
}


// CmdId: 6329
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_DAGJNGODABM_ClientReq {
  Unk2700_OPEBMJPOOBL Unk2700_KHBDAPGDOJA = 11;
  oneof Unk2700_MIPPJKBFLOO {
    MusicRecord music_record = 2;
  }
  oneof Unk2700_ILHNBMNOMHO {
    MusicBriefInfo music_brief_info = 1488;
  }
}

// CmdId: 8127
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_DBPDHLEGOLB {
  uint32 stage_id = 5;
}


// CmdId: 8858
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_DCBEFDDECOJ {
  repeated Unk2700_PKAPCOBGIJL Unk2700_INIBKFPMCFO = 8;
  uint32 level_id = 1;
  bool Unk2700_CBPNPEBMPOH = 15;
  uint32 difficulty_id = 11;
  repeated Unk2700_ADIGEBEIJBA Unk2700_EONPKLLJHPH = 3;
  uint32 Unk2700_FIGHJIFINKI = 7;
}


// CmdId: 6207
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_DCKKCAJCNKP_ServerRsp {
  uint32 room_id = 14;
  repeated Unk2700_IGJLOMCPLLE Unk2700_MPNOBKBMDFG = 9;
  int32 retcode = 12;
}


// CmdId: 8144
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_DDAHPHCEIIM {
  uint32 entity_id = 9;
  CustomGadgetTreeInfo Unk2700_OCIHJFOKHPK = 6;
}


// CmdId: 6215
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_DDLBKAMGGEE_ServerRsp {
  int32 retcode = 15;
  Unk2700_GHHCCEHGKLH Unk2700_AMOAHIICCPC = 14;
}

message Unk2700_DEDIKDKNAAB {
  bool Unk2700_EDLGAFHFDBE = 5;
}

// CmdId: 8442
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_DFOHGHKAIBO {
  uint32 quest_id = 3;
}


message Unk2700_DGDJKHJNLGO {
  uint32 uid = 1;
  repeated uint64 Unk2700_OEFLHAPAMFH = 2;
  repeated uint64 Unk2700_OJNBAOCJBCH = 3;
  repeated Unk2700_PGFLJBBEBKG Unk2700_GDDGEKHOLGL = 4;
}

// CmdId: 8342
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_DGLIANMBMPA {
  uint32 Unk2700_FHNECPGFPBK = 9;
  uint32 Unk2700_OAKEBJPBNMA = 2;
  bool is_new_record = 7;
  bool is_success = 3;
  uint32 gallery_id = 13;
  uint32 remain_time = 4;
  uint32 score = 11;
  uint32 Unk2700_FCOMHLJGFLK = 15;
}


message Unk2700_DIEGJDEIDKO {
  uint32 cur_progress = 12;
  uint32 id = 6;
  uint32 open_time = 8;
  bool is_finished = 10;
  uint32 total_progress = 9;
  Vector pos = 5;
}

message Unk2700_DJDEPPHEHCP {
  uint32 start_time = 12;
  uint32 end_time = 5;
}


message Unk2700_DJKEGIEIKHG {
  Unk2700_MOFABPNGIKP reason = 15;
  bool Unk2700_MMNILGLDHHD = 11;
  uint32 finish_time = 14;
  uint32 Unk2700_BCCHNACPBME = 6;
  uint32 level_id = 4;
}

// CmdId: 8411
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_DJMKFGKGAEA {
  int32 retcode = 15;
}

// CmdId: 8844
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_DLAEFMAMIIJ {
  uint32 gallery_id = 6;
}


message Unk2700_DMPIJLBHEAE {
  uint32 challenge_type = 5;
  bool is_unlock = 12;
  oneof Unk2700_AFHAGFONBFM {
    BundleInfo bundle_info = 11;
    ScoreChallengeInfo score_challenge_info = 13;
    uint32 boss_challenge_id = 2;
  }
}

message Unk2700_DOGEKCNIIAO {
  uint32 Unk2700_KJFBIFHFIBO = 6;
  uint32 level = 13;
  uint32 monster_id = 14;
  repeated uint32 affix_list = 11;
}


message Unk2700_DPPCDPBBABA {
  bool is_open = 1;
  string content = 2;
  uint32 Unk2700_DIFBKPIAEBB = 3;
  Unk2700_PIAFGFGHGHM Unk2700_HMGCGJCDDEG = 4;
  uint32 Unk2700_JEKIGDDNCAB = 5;
}

// CmdId: 1105
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_EAAGDFHHNMJ_ServerReq {
  repeated uint32 Unk2700_IBJECDLKPGM = 14;
}

// CmdId: 4064
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_EAAMIOAFNOD_ServerRsp {
  int32 retcode = 9;
}


// CmdId: 151
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_EAGIANJBNGK_ClientReq {
  uint32 avatar_id = 9;
  oneof detail {
    SkillRequest skill_request = 553;
    ReliquaryRequest reliquary_request = 1993;
    Unk2800_JBEDBFJFEIH element_reliquary_request = 1489;
  }
}

enum Unk2700_EAJCGENDICI {
  Unk2700_EAJCGENDICI_Unk2700_NDNHCNOOCCA = 0;
  Unk2700_EAJCGENDICI_Unk2700_GFALGAIAPOP = 1;
  Unk2700_EAJCGENDICI_Unk2700_AAFPJPGKHPO = 2;
  Unk2700_EAJCGENDICI_Unk2700_HFKOPLPHODM = 3;
  Unk2700_EAJCGENDICI_Unk2700_OPIOJNLJNJN = 4;
  Unk2700_EAJCGENDICI_Unk2700_GHHLNHAJEBA = 5;
}

// CmdId: 8617
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_EAOAMGDLJMP {}

// CmdId: 8838
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_EBJCAMGPFDB {
  uint32 stage_id = 2;
}

// CmdId: 8717
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_EBOECOIFJMP {
  bool Unk2700_PHGMKGEMCFF = 1;
  uint32 level_id = 11;
}

// CmdId: 6235
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_ECBEAMKBGMD_ClientReq {
  bool Unk2700_DFOGBOAGMPI = 13;
}

// CmdId: 8919
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_EDCIENBEEDI {
  uint32 Unk2700_HABMDJOFBDG = 10;
}

// CmdId: 8733
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_EDDNHJPJBBF {
  uint32 schedule_id = 7;
}

// CmdId: 8387
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_EDMCLPMBEMH {
  uint32 uid = 11;
}


message Unk2700_EDNGHJGKEKC {
  repeated Unk2700_CMKDNIANBNE Unk2700_HDGDLPCFABI = 1;
  string name = 2;
}

// CmdId: 8373
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_EELPPGCAKHL {
  map<uint32, uint32> Unk2700_BMLBMGGBFJG = 15;
  map<uint32, uint32> Unk2700_OBFPKFEGGIK = 14;
  uint32 dungeon_id = 5;
}

enum Unk2700_EEPNCOAEKBM {
  Unk2700_EEPNCOAEKBM_Unk2700_EAFEANPNJLO = 0;
  Unk2700_EEPNCOAEKBM_Unk2700_PAPMIPKGFJK = 1;
  Unk2700_EEPNCOAEKBM_Unk2700_CONEKODEFHL = 2;
  Unk2700_EEPNCOAEKBM_Unk2700_KABLOGENHFI = 3;
}


message Unk2700_EGKIHLIOLDM {
  uint32 Unk2700_CDDONJJMFCI = 14;
  Unk2700_NPOBPFNDJKK reason = 7;
}


// CmdId: 4805
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_EHAMOPKCIGI_ServerNotify {
  uint32 gallery_id = 11;
  Unk2700_KNGDOIDOFFB settle_info = 12;
  uint32 Unk2700_HAOPLFPOLFM = 7;
  bool is_new_record = 2;
}

// CmdId: 8882
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_EHFBIEDHILL {
  int32 retcode = 2;
  uint32 activity_id = 4;
}


// CmdId: 6322
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_EJHALNBHHHD_ServerRsp {
  int32 retcode = 15;
  uint64 Unk2700_CEPGMKAHHCD = 8;
  Unk2700_OPEBMJPOOBL Unk2700_KHBDAPGDOJA = 1;
}

// CmdId: 8837
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_EJIOFGEEIOM {
  int32 retcode = 9;
  uint32 quest_id = 3;
}

// CmdId: 8726
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_EKBMEKPHJGK {
  uint32 config_id = 9;
  uint32 group_id = 11;
}

message Unk2700_EKDHFFHMNCD {
  uint32 index = 2;
  uint64 Unk2700_FALGECBMIHD = 14;
  uint32 Unk2700_PBAFCLCIABF = 12;
}

message Unk2700_ELMEOJFCOFH {
  map<uint32, uint32> Unk2700_HGBNIFAKOGI = 12;
  uint32 Unk2700_BPDFJJNJGAJ = 3;
  uint32 Unk2700_DCBOIFJCDHG = 15;
  uint32 Unk2700_KDJGDPDJHLL = 6;
  uint32 Unk2700_NGKGJJBDGMP = 7;
}

// CmdId: 8163
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_EMHAHHAKOGA {
  uint32 stage_id = 2;
}


message Unk2700_EOHBLDIKPME {
  uint32 map_id = 6;
  Unk2700_INMNHKOPCFB Unk2700_JONOMFENDFP = 7;
  repeated uint32 Unk2700_LDIGKKLLDOC = 3;
  uint32 best_score = 8;
}

// CmdId: 8918
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FADPOMMGLCH {
  uint32 stage_id = 13;
  int32 retcode = 15;
}

message Unk2700_FCJOEKKHPLB {
  uint32 Unk2700_AMJKJDFKOHF = 2;
  uint32 Unk2700_JFBLEPOMGLC = 3;
  uint32 Unk2700_NDJKPHLIALK = 1;
  uint32 Unk2700_HKKPKBEKCME = 6;
  repeated uint32 Unk2700_ADPPEOELMBP = 4;
  uint32 Unk2700_MLCEOFAMBFM = 7;
}

// CmdId: 8753
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_FCLBOLKPMGK {
  repeated uint32 item_id_list = 4;
}

message Unk2700_FDEGJOCDDGH {
  uint32 cur_progress = 9;
  uint32 challenge_index = 10;
  bool is_success = 4;
  uint32 challenge_id = 8;
}

// CmdId: 8334
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FDJBLKOBFIH {
  int32 retcode = 5;
}

message Unk2700_FEAENJPINFJ {
  uint32 skill_id = 2;
  bool is_unlock = 11;
  uint32 Unk2700_LAPIBECMGOB = 1;
  uint32 Unk2700_LKNCBOOJCGI = 14;
}

// CmdId: 8507
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_FEODEAEOOKE {
  uint32 level_id = 5;
}

// CmdId: 8989
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FFMAKIPBPHE {
  int32 retcode = 15;
}

// CmdId: 6211
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_FFOBMLOCPMH_ClientNotify {}

// CmdId: 8546
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FGEEFFLBAKO {
  int32 retcode = 5;
  bool Unk2700_PHGMKGEMCFF = 7;
  uint32 level_id = 13;
}

// CmdId: 8398
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_FGJBPNIKNDE {}


message Unk2700_FGJFFMPOJON {
  string nickname = 7;
  string remark_name = 3;
  ProfilePicture profile_picture = 11;
  map<uint32, uint32> Unk2700_IFCNGIPPOAE = 9;
  uint32 uid = 8;
}

enum Unk2700_FHOKHHBGPEG {
  Unk2700_FHOKHHBGPEG_NONE = 0;
  Unk2700_FHOKHHBGPEG_FAIL = 1;
  Unk2700_FHOKHHBGPEG_SUCC = 2;
  Unk2700_FHOKHHBGPEG_Unk2700_GGDJFCKGBGE = 3;
}


// CmdId: 8937
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FIODAJPNBIK {
  int32 retcode = 12;
  repeated Unk2700_AFOPONDCLKC Unk2700_MAKCLMEGEBJ = 5;
}

// CmdId: 4872
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FJEHHCPCBLG_ServerNotify {
  uint32 Unk2700_BJHAMKKECEI = 12;
}

// CmdId: 8450
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FJJFKOEACCE {
  uint32 Unk2700_EMPNNJKDMHE = 14;
  map<uint32, uint32> Unk2700_DNMNEMKIELD = 6;
  uint32 Unk2700_GKBGMLGFIBN = 2;
  uint32 Unk2700_OGHMDKMIKBK = 13;
}


// CmdId: 6276
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FKCDCGCBIEA_ServerNotify {
  uint32 play_type = 7;
  bool Unk2700_ANBEGPCLAAO = 15;
  string Unk2700_JEMDOAHDMBP = 9;
  repeated Unk2700_NAPLFKNOECD var_list = 5;
}

// CmdId: 8482
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FKMOKPBJIKO {
  int32 retcode = 11;
}

// CmdId: 6210
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_FLGMLEFJHBB_ClientReq {
  bool Unk2700_FGHPHCPAFKJ = 5;
  uint64 Unk2700_ONOOJBEABOE = 10;
}

message Unk2700_FMGGGEDNGGN {
  uint32 avatar_id = 1;
  bool is_trial = 2;
  uint32 costume_id = 3;
}

// CmdId: 6222
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_FMNAGFKECPL_ClientReq {
  uint32 room_id = 4;
}


// CmdId: 6248
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FNHKFHGNLPP_ServerRsp {
  repeated Unk2700_GHHCCEHGKLH Unk2700_BCIBEPMFLGN = 8;
  int32 retcode = 14;
}

// CmdId: 8119
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FNJHJKELICK {
  int32 retcode = 1;
}

// CmdId: 6249
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_FOOOKMANFPE_ClientReq {
  uint64 Unk2700_ONOOJBEABOE = 14;
}

// CmdId: 6204
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FPCJGEOBADP_ServerRsp {
  int32 retcode = 12;
}


// CmdId: 4060
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FPJLFMEHHLB_ServerNotify {
  Unk2700_DPPCDPBBABA info = 14;
}

// CmdId: 5547
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_FPOBGEBDAOD_ServerNotify {
  uint32 score = 7;
  uint32 gallery_id = 9;
}


message Unk2700_GALDCKFKPEK {
  repeated Unk2700_MPELMDDJFHO Unk2700_KLOAFPMHOKI = 1;
}

message Unk2700_GBBDJMDIDEI {
  uint32 Unk2700_JIGANFOOJHB = 1;
  uint32 main_prop_id = 12;
}

message Unk2700_GBHAPPCDCIL {
  bool Unk2700_IBDCFAMBGOK = 1;
  uint32 Unk2700_IFNFCNNBPIB = 2;
  uint32 Unk2700_PBBPGFMNMNJ = 3;
  bool Unk2700_FKLBCNLBBNM = 4;
  uint32 Unk2700_KENGEGJGAEL = 5;
}

// CmdId: 8014
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GBJOLBGLELJ {}


message Unk2700_GBPNAHCAKJE {
  string Unk2700_OAKBDKKBFHP = 1;
  string entity_id = 2;
  string lang = 3;
  string Unk2700_NDEJPMGPBAH = 4;
  string region = 5;
  uint32 uid = 6;
  repeated Unk2700_EDNGHJGKEKC Unk2700_LHPECOEIIKL = 7;
  repeated Unk2700_LBPFDCBHCBL Unk2700_LABLGMEOEFM = 8;
}


message Unk2700_GCPNGHFNGDP {
  repeated uint32 Unk2700_ANAEHLBDFIC = 1;
  repeated ItemParam Unk2700_PMMJDKJHBIG = 7;
}

// CmdId: 4605
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_GDODKDJJPMP_ServerRsp {
  uint32 group_id = 4;
  int32 retcode = 1;
}


// CmdId: 5364
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_GECHLGFKPOD_ServerNotify {
  Unk2700_NKIDCOKNPFF player_info = 6;
}


// CmdId: 8657
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_GEIGCHNDOAA {
  uint32 stage_id = 7;
  bool Unk2700_LNINCIBPIBN = 13;
  uint32 challenge_id = 8;
  repeated Unk2700_IMGLPJNBHCH Unk2700_DMJOJPGLFHE = 2;
  uint32 Unk2700_HMIBIIPHBAN = 10;
  uint32 Unk2700_LOIMAGFKMOJ = 15;
  uint32 Unk2700_FGIIBJADECI = 11;
  int32 retcode = 3;
  uint32 Unk2700_AEHOPMMMHAP = 12;
}

// CmdId: 6250
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GFMPOHAGMLO_ClientReq {}



message Unk2700_GHHCCEHGKLH {
  SocialDetail Unk2700_KLPJLKPKKHH = 4;
  uint32 Unk2700_DPPILIMGOKH = 15;
  Unk2700_ELMEOJFCOFH Unk2700_PCFIKJEDEGN = 2;
  uint64 Unk2700_ONOOJBEABOE = 14;
  Unk2700_PHGGAEDHLBN Unk2700_JGFDODPBGFL = 10;
  uint32 dungeon_id = 6;
  repeated uint32 tag_list = 1;
  bool Unk2700_GOIIEONNFFN = 11;
  bool Unk2700_GBCGGDONMCD = 9;
  bool Unk2700_HBFLKFOCKBF = 3;
  Unk2700_OHBMICGFIIK Unk2700_IKGOMKLAJLH = 12;
}


message Unk2700_GHONKKEGHGL {
  bool is_open = 8;
  repeated Unk2700_LHPELFJPPOD challenge_info_list = 9;
  uint32 stage_id = 15;
}

// CmdId: 6241
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_GIAILDLPEOO_ServerRsp {
  uint32 room_id = 4;
  int32 retcode = 1;
}

// CmdId: 417
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_GIFGEDBCPFC_ServerRsp {
  int32 retcode = 1;
  uint64 Unk2700_KHDDIJNOICK = 14;
  uint32 parent_quest_id = 10;
}


// CmdId: 8608
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GIFKPMNGNGB {
  uint32 entity_id = 13;
  CustomGadgetTreeInfo Unk2700_OCIHJFOKHPK = 1;
}

// CmdId: 8688
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_GKHEKGMFBJN {
  int32 retcode = 5;
}


// CmdId: 8261
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GKKNFMNJFDP {
  repeated uint32 buff_id_list = 15;
  uint32 level_id = 5;
  repeated Unk2700_AMKLCEFNNCC avatar_info_list = 14;
  uint32 Unk2700_HKFEBBCMBHL = 2;
  uint32 stage_id = 13;
}


// CmdId: 5960
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GLAPMLGHDDC_ClientReq {
  uint32 material_id = 14;
  Unk2700_NOCLNCCJEGK Unk2700_MHEKJGAIFBO = 10;
  uint32 Unk2700_GMHLHKIIGIC = 7;
}

// CmdId: 6341
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_GLIILNDIPLK_ServerNotify {
  bool Unk2700_LALIEABDFFI = 12;
  bool Unk2700_DCLHFINJEOD = 8;
  bool Unk2700_GMICFADLAMC = 15;
}

// CmdId: 8057
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GLLIEOABOML {
  uint32 card_id = 8;
  uint32 level_id = 5;
  bool Unk2700_PHGMKGEMCFF = 10;
}

// CmdId: 8352
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_GMNGEEBMABP {
  int32 retcode = 9;
}

// CmdId: 6245
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GNDOKLHDHBJ_ClientReq {
  uint32 room_id = 13;
}

// CmdId: 8991
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GNOAKIGLPCG {
  repeated uint32 Unk2700_IIJKCKNHPKD = 8;
}

// CmdId: 8709
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GNPPPIHBDLJ {
  uint32 Unk2700_CKGJEOOKFIF = 13;
}


message Unk2700_GOHMLAFNBGF {
  uint32 Unk2700_OALCFEGIBOL = 8;
  repeated HomeFurnitureData Unk2700_CKPNCKDIJMB = 3;
}

// CmdId: 8095
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GPHLCIAMDFG {
  uint32 schedule_id = 3;
  uint32 uid = 12;
}

// CmdId: 6233
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GPIHGEEKBOO_ClientReq {
  string Unk2700_BMBJKEOELCG = 6;
}

// CmdId: 8967
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_GPOIPAHPHJE {
  uint32 stage_id = 14;
  uint32 challenge_type = 13;
}


message Unk2700_GPPKNKGDCHJ {
  repeated ItemParam Unk2700_MNPGJOAHINC = 2;
  uint32 uid = 6;
  repeated ItemParam Unk2700_LBIKFNBNEBC = 9;
}

// CmdId: 137
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_HBLAGOMHKPL_ClientRsp {
  int32 retcode = 12;
}


// CmdId: 9072
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_HBOFACHAGIF_ServerNotify {
  map<uint32, Unk2700_EKDHFFHMNCD> Unk2700_MEANPNKMDFG = 2;
}


// CmdId: 6325
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_HDBFJJOBIAP_ClientReq {
  uint64 Unk2700_CEPGMKAHHCD = 7;
  Unk2700_OPEBMJPOOBL Unk2700_KHBDAPGDOJA = 10;
}

enum Unk2700_HEMFKLPNNOM {
  Unk2700_HEMFKLPNNOM_Unk2700_ODJKANKMPPJ = 0;
  Unk2700_HEMFKLPNNOM_Unk2700_EFGLHEIODFN = 1;
  Unk2700_HEMFKLPNNOM_Unk2700_JPBBBCFGHAK = 2;
  Unk2700_HEMFKLPNNOM_Unk2700_IDCMGHBHBFH = 3;
  Unk2700_HEMFKLPNNOM_Unk2700_ODDBNNDFMBO = 4;
  Unk2700_HEMFKLPNNOM_Unk2700_AGIDMOGJOBD = 5;
}


message Unk2700_HENCIJOPCIF {
  uint32 Unk2700_EMIELBMCCPF = 14;
  repeated ItemParam reward_item_list = 5;
}

// CmdId: 8129
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_HFCDIGNAAPJ {
  uint32 Unk2700_OBDGPNILPND = 9;
  uint32 Unk2700_KKHAKNLGBLJ = 13;
}


message Unk2700_HFMDKDHCJCM {
  Vector Unk2700_CMOMNFNGCGB = 1;
}


message Unk2700_HFPELHFDCIB {
  uint32 entity_id = 2;
  Vector Unk2700_CMOMNFNGCGB = 13;
}


message Unk2700_HGFFGMCODNC {
  uint32 group_id = 4;
  uint32 gadget_id = 7;
  Vector pos = 8;
}

// CmdId: 8826
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_HGMCBHFFDLJ {}

enum Unk2700_HGMCNJOPDAA {
  Unk2700_HGMCNJOPDAA_NONE = 0;
  Unk2700_HGMCNJOPDAA_Unk2700_COJANCPMOAI = 1;
}

// CmdId: 6220
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_HGMOIKODALP_ServerRsp {
  int32 retcode = 14;
  uint64 Unk2700_ONOOJBEABOE = 11;
}

message Unk2700_HHAMNOIDBPJ {
  float Unk2700_JFDNAOAAFMM = 9;
}


// CmdId: 6217
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_HHGMCHANCBJ_ServerNotify {
  Unk2700_KBBDJNLFAKD Unk2700_LGBODABIKLL = 14;
  Unk2700_ADGLMHECKKJ Unk2700_NBAIINBBBPK = 3;
  Unk2700_NLFDMMFNMIO Unk2700_EJHNBDLLLFO = 10;
  repeated uint32 Unk2700_EIOPOPABBNC = 12;
}

message Unk2700_HIHKGMLLOGD {
  repeated uint32 Unk2700_ONOGHAHICAA = 1;
  repeated uint32 Unk2700_FGBAGFMGKOO = 4;
  uint32 max_progress = 2;
  uint32 Unk2700_OBDGPNILPND = 13;
  uint32 progress = 5;
  uint32 Unk2700_HJNLDGMIHBL = 12;
  uint32 Unk2700_BIMPFNHLMBI = 9;
}

// CmdId: 4206
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_HIIFAMCBJCD_ServerRsp {
  int32 retcode = 10;
  uint32 type_id = 5;
  uint32 Unk2700_LEKOKKMDNAO = 14;
}

// CmdId: 8933
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_HJKOHHGBMJP {
  bool Unk2700_GHGIOMEHIAN = 10;
  int32 retcode = 1;
  bool Unk2700_ONGMFKHIBNB = 6;
  uint32 stage_id = 15;
  bool Unk2700_MNHBGOMNPBB = 12;
  bool Unk2700_AOFHDOOKHKF = 4;
  uint32 final_score = 13;
  uint32 challenge_id = 5;
  bool is_new_record = 9;
}


message Unk2700_HJLFNKLPFBH {
  Unk2700_FMGGGEDNGGN avatar = 2;
  uint32 level = 14;
  uint32 Unk2700_EGKOIPOHCHG = 13;
  repeated Unk2700_AGIDJODJNEA Unk2700_JCKLLFKOFCG = 9;
}

// CmdId: 8017
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_HKADKMFMBPG {
  map<uint32, uint32> Unk2700_IFCNGIPPOAE = 2;
  uint32 schedule_id = 14;
}


message Unk2700_HLHHNGHJLAO {
  uint32 kill_monster_count = 12;
  uint32 kill_special_monster_count = 8;
  uint32 Unk2700_OFKHLGLOPCM = 10;
  uint32 gallery_id = 2;
  Unk2700_MOFABPNGIKP reason = 11;
  uint32 final_score = 13;
}

// CmdId: 8946
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_HMFCCGCKHCA {}

// CmdId: 8713
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_HMHHLEHFBLB {
  int32 retcode = 13;
}

// CmdId: 8554
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_HMMFPDMLGEM {
  uint32 schedule_id = 15;
  int32 retcode = 7;
}

// CmdId: 8607
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_HNFGBBECGMJ {
  uint32 id = 8;
}


// CmdId: 6056
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_HOPDLJLBKIC_ServerRsp {
  int32 retcode = 14;
  uint32 material_id = 11;
  Unk2700_NOCLNCCJEGK Unk2700_MHEKJGAIFBO = 6;
  WidgetCoolDownData Unk2700_LNPJLPODIGB = 10;
  uint32 Unk2700_GMHLHKIIGIC = 15;
}

// CmdId: 4092
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_IAADLJBLOIN_ServerNotify {
  bool is_open = 9;
  uint32 Unk2700_JEKIGDDNCAB = 10;
}


// CmdId: 8414
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_IAAPADOAMIA {
  uint32 Unk2700_HCKAMFPGMJN = 14;
  uint32 Unk2700_CHHJBPDPICI = 7;
  uint32 quest_id = 11;
  repeated ItemParam item_list = 10;
  bool Unk2700_AGFNJHAMDBD = 9;
  repeated uint32 Unk2700_AJKDPJOKBED = 6;
  uint32 Unk2700_OEDDPDJEEPC = 3;
}

// CmdId: 4523
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_IACKJNNMCAC_ClientReq {
  uint32 group_id = 14;
}


message Unk2700_IBEKDNOGMLA {
  Unk2700_INMNHKOPCFB Unk2700_JONOMFENDFP = 5;
  repeated uint32 Unk2700_MJLHEFIGIKD = 2;
  repeated uint32 exit_point_id_list = 13;
}

// CmdId: 8825
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_IBOKDNKBMII {
  uint32 Unk2700_MOKOAHDHAGA = 8;
}

// CmdId: 8028
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_ICABIPHHPKE {
  repeated uint32 Unk2700_GGNBBHMGLAN = 15;
  int32 retcode = 1;
}


message Unk2700_ICPNKAALJEP {
  bool is_new_record = 8;
  Unk2700_KLJLJGJOBDI settle_info = 14;
}

// CmdId: 6243
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_IDADEMGCJBF_ClientNotify {}

// CmdId: 8799
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_IDAGMLJOJMP {
  int32 retcode = 13;
}

// CmdId: 8793
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_IDGCNKONBBJ {
  int32 retcode = 4;
}

// CmdId: 8402
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_IEFAGBHIODK {
  int32 retcode = 5;
  repeated uint32 Unk2700_CPOJCHEOPLB = 13;
  uint32 level_id = 10;
  uint32 time = 8;
}

message Unk2700_IEFGLPNHHAJ {
  repeated uint32 Unk2700_OKEAMNBIBDC = 10;
  repeated uint32 Unk2700_DOBMDALKEOF = 7;
}


// CmdId: 8880
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_IEGOOOECBFH {
  Unk2700_HIHKGMLLOGD Unk2700_BABEGIGEEIB = 13;
  int32 retcode = 12;
}


message Unk2700_IEPIBFMCJNJ {
  uint32 uid = 15;
  string nickname = 3;
  string remark_name = 10;
  ProfilePicture profile_picture = 14;
  map<uint32, uint32> Unk2700_IFCNGIPPOAE = 8;
}

message Unk2700_IGAFEBCFJEJ {
  uint64 Unk2700_EPEFCCMPLCP = 13;
  uint32 Unk2700_GCGDABPLCFK = 3;
}


message Unk2700_IGJLOMCPLLE {
  uint32 block_id = 8;
  Vector rot = 12;
  uint32 guid = 4;
  Vector pos = 1;
}


// CmdId: 6218
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_IGPIIHEDJLJ_ServerRsp {
  Unk2700_NLFDMMFNMIO Unk2700_EJHNBDLLLFO = 14;
  Unk2700_KBBDJNLFAKD Unk2700_LGBODABIKLL = 2;
  int32 retcode = 10;
  map<uint32, uint32> Unk2700_DDGNPJLHKKH = 6;
}


// CmdId: 6320
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_IHLONDFBCOE_ClientReq {
  Unk2700_OPEBMJPOOBL Unk2700_KHBDAPGDOJA = 13;
}


// CmdId: 8325
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_IHOOCHJACEL {
  uint32 level_id = 7;
  repeated Unk2700_BGKMAAINPCO Unk2700_GMAEHKMDIGG = 13;
  uint32 difficulty_id = 10;
}

// CmdId: 8771
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_IHPFBKANGMJ {
  uint32 level_id = 13;
}

// CmdId: 8756
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_IJFEPCBOLDF {
  bool is_new_record = 9;
  bool Unk2700_MMNILGLDHHD = 3;
  uint32 level_id = 15;
  uint32 score = 8;
}

// CmdId: 8277
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_IJLANPFECKC {
  uint32 stage_id = 9;
  uint32 challenge_id = 1;
}

// CmdId: 470
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_ILBBAKACCHA_ClientReq {
  uint32 parent_quest_id = 15;
}

// CmdId: 8959
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_ILLDDDFLKHP {
  uint32 gallery_id = 14;
  int32 retcode = 5;
}

message Unk2700_IMGLPJNBHCH {
  uint32 Unk2700_IIEIPINHLBN = 5;
  uint32 Unk2700_AIKKJGOLLHK = 13;
}


// CmdId: 8186
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_IMHNKDHHGMA {
  uint32 gallery_id = 10;
  Unk2700_JCOIDFNDHPB settle_info = 13;
}

message Unk2700_IMMPPANFEPP {
  uint32 guid = 11;
  uint32 Unk2700_MAABPJMPILD = 6;
}

// CmdId: 6242
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_INBDPOIMAHK_ClientReq {
  repeated uint32 tag_list = 1;
  uint64 Unk2700_ONOOJBEABOE = 5;
}


message Unk2700_INMNHKOPCFB {
  repeated Unk2700_CBMGMANEDNA info_list = 15;
}


// CmdId: 8132
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_INOMEGGAGOP {
  repeated Unk2700_AIMMLILLOKB Unk2700_DFGCIBJFNBC = 5;
  uint32 schedule_id = 10;
  int32 retcode = 9;
}


message Unk2700_IOLMLCCBAKP {
  repeated Unk2700_BGKMAAINPCO Unk2700_GMAEHKMDIGG = 10;
  bool is_open = 9;
  uint32 level_id = 14;
  uint32 best_score = 5;
}

message Unk2700_IOONEPPHCJP {
  uint32 Unk2700_BPDFJJNJGAJ = 1;
  uint32 Unk2700_KDJGDPDJHLL = 2;
  map<uint32, uint32> Unk2700_HGBNIFAKOGI = 3;
}



// CmdId: 6318
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_IPGJEAEFJMM_ServerRsp {
  uint64 Unk2700_CEPGMKAHHCD = 15;
  Unk2700_OPEBMJPOOBL Unk2700_KHBDAPGDOJA = 10;
  int32 retcode = 2;
  DropSubfieldType Unk2700_MJNIHFCKJMN = 14;
  oneof Unk2700_MIPPJKBFLOO {
    MusicRecord music_record = 4;
  }
  oneof Unk2700_ILHNBMNOMHO {
    MusicBriefInfo music_brief_info = 1819;
  }
}


message Unk2700_JACACCPGMGC {
  repeated Unk2700_MIMJBGMEMCA Unk2700_IDGMODJPBGF = 11;
  uint32 level_id = 14;
}


message Unk2700_JCBJHCFEONO {
  repeated Unk2700_NOGODJOJDGF Unk2700_AIMBFNOKKHE = 8;
  uint32 timestamp = 3;
}

// CmdId: 8704
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_JCKGJAELBMB {
  uint32 finish_time = 3;
  uint32 level_id = 11;
}


message Unk2700_JCNIPOJMFMH {
  repeated Unk2700_EEPNCOAEKBM Unk2700_OCBDODAGPNF = 12;
  repeated Unk2700_LELADCCDNJH level_list = 6;
  repeated uint32 Unk2700_EGPCJLGGGLK = 10;
  repeated Unk2700_EEPNCOAEKBM Unk2700_CPJMLMCOCLA = 13;
}

// CmdId: 5929
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_JCOECJGPNOL_ServerRsp {
  int32 retcode = 8;
}


message Unk2700_JCOIDFNDHPB {
  Unk2700_HLHHNGHJLAO settle_info = 13;
  bool is_new_record = 12;
}

// CmdId: 4639
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_JDMPECKFGIG_ServerNotify {
  bool is_enter_edit_mode = 15;
}


message Unk2700_JDPMOMKAPIF {
  uint32 id = 13;
  repeated Unk2700_KJDPNIKDKEJ Unk2700_KPOACBFLPKP = 10;
}

// CmdId: 8096
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_JEFIMHGLOJF {
  uint32 Unk2700_MCGIJIGJCIG = 4;
  bool is_success = 9;
  repeated uint32 Unk2700_LOMDDJKOMCK = 12;
  uint32 stage_id = 15;
}

// CmdId: 109
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_JEHIAJHHIMP_ServerNotify {
  string nickname = 7;
}

// CmdId: 8381
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_JFGFIDBPGBK {
  int32 retcode = 12;
}


// CmdId: 8862
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_JHMIHJFFJBO {
  repeated Unk2700_IMGLPJNBHCH Unk2700_DMJOJPGLFHE = 15;
  uint32 Unk2700_AEHOPMMMHAP = 13;
  uint32 Unk2700_HMIBIIPHBAN = 2;
  repeated Unk2700_FEAENJPINFJ Unk2700_FLMLLJIHOAI = 8;
  uint32 Unk2700_LOIMAGFKMOJ = 6;
  uint32 stage_id = 12;
  uint32 challenge_id = 11;
  uint32 Unk2700_FGIIBJADECI = 14;
  int32 retcode = 7;
}


// CmdId: 6307
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_JJAFAJIKDDK_ServerRsp {
  uint64 Unk2700_CEPGMKAHHCD = 3;
  Unk2700_OPEBMJPOOBL Unk2700_KHBDAPGDOJA = 11;
  int32 retcode = 4;
  oneof Unk2700_ILHNBMNOMHO {
    MusicBriefInfo music_brief_info = 2;
  }
}


// CmdId: 6226
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_JJCDNAHAPKD_ClientReq {
  uint64 Unk2700_ONOOJBEABOE = 11;
  uint32 dungeon_id = 12;
  Unk2700_KBBDJNLFAKD Unk2700_LGBODABIKLL = 10;
}


// CmdId: 5320
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_JKFGMBAMNDA_ServerNotify {
  uint32 Unk2700_MDJOPHOHFDB = 5;
  repeated BuildingInfo building_list = 3;
  uint32 Unk2700_COFBIGLBNGP = 13;
}

// CmdId: 467
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_JKOKBPFCILA_ClientReq {
  uint32 quest_id = 4;
}

message Unk2700_JLHKOLGFAMI {
  uint32 level_id = 10;
  uint32 score = 7;
  uint32 Unk2700_HKFEBBCMBHL = 5;
  uint32 Unk2700_FHEHGDABALE = 2;
}

// CmdId: 6247
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_JLOFMANHGHI_ClientReq {}


message Unk2700_JMPCGMBHJLG {
  uint32 Unk2700_MBEMKCGABIB = 3;
  repeated uint32 Unk2700_FJJDHBFLCCH = 2;
  repeated Unk2700_MLMEFKLMOEF Unk2700_JDBFOILOOIF = 7;
}

// CmdId: 8696
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_JNCINBLCNNL {
  repeated uint32 Unk2700_DMPIDNKAJML = 3;
  uint32 schedule_id = 4;
  int32 retcode = 10;
}

enum Unk2700_JOEPIGNPDGH {
  Unk2700_JOEPIGNPDGH_Unk2700_GIGONJIGKBM = 0;
  Unk2700_JOEPIGNPDGH_Unk2700_AEKNMJMKIPN = 1;
  Unk2700_JOEPIGNPDGH_Unk2700_LKCIHNNHIFO = 2;
  Unk2700_JOEPIGNPDGH_Unk2700_EPAPGLMBAEB = 3;
}


// CmdId: 4256
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_JOHOODKBINN_ClientReq {
  Vector pos = 10;
  uint32 entity_id = 15;
  uint32 material_id = 6;
}

message Unk2700_JPGAAHJBLKB {
  uint64 avatar_id = 3;
  bool is_trial = 13;
}

// CmdId: 8142
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_JPLFIOOMCGG {
  int32 retcode = 10;
}


// CmdId: 4289
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KAJNLGIDKAB_ServerRsp {
  int32 retcode = 9;
  uint32 entity_id = 4;
  uint32 material_id = 8;
  Vector pos = 10;
}

enum Unk2700_KBBDJNLFAKD {
  Unk2700_KBBDJNLFAKD_Unk2700_FACJMMHAOLB = 0;
  Unk2700_KBBDJNLFAKD_Unk2700_IAPAEBBEILN = 1;
  Unk2700_KBBDJNLFAKD_Unk2700_MPJODMAIHEL = 2;
  Unk2700_KBBDJNLFAKD_Unk2700_KPNLCPIJPAH = 3;
}


// CmdId: 123
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KDDPDHGPGEF_ServerRsp {
  int32 retcode = 6;
  uint32 avatar_id = 15;
  oneof detail {
    SkillResponse skill_response = 1022;
    ReliquaryResponse reliquary_response = 196;
    Unk2800_OCOMLNLPLGA element_reliquary_response = 167;
  }
}

// CmdId: 8308
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KDFNIGOBLEK {
  int32 retcode = 2;
  uint32 card_id = 8;
  uint32 level_id = 5;
  bool Unk2700_PHGMKGEMCFF = 12;
}

// CmdId: 8777
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KDNNKELPJFL {
  int32 retcode = 6;
}

// CmdId: 1182
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_KEMOFNEAOOO_ClientRsp {
  repeated uint32 Unk2700_IBJECDLKPGM = 7;
}

// CmdId: 8978
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KFPEIHHCCLA {
  int32 retcode = 2;
  uint32 id = 15;
}


// CmdId: 4641
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KGHOJPDNMKK_ServerRsp {
  int32 retcode = 13;
  Unk2700_IMMPPANFEPP Unk2700_JJBKBKPEIBC = 14;
}

// CmdId: 8842
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KGNJIBIMAHI {
  bool is_new = 12;
  int32 retcode = 6;
  repeated uint32 affix_list = 8;
  uint32 Unk2700_BPNCECAFPDK = 11;
}

message Unk2700_KHDMDKKDOCD {
  uint64 avatar_guid = 8;
  bool is_trial = 2;
}


// CmdId: 6225
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_KHLJJPGOELG_ClientReq {
  Unk2700_KLPINMKOEPE Unk2700_MDIJOHEFFHI = 5;
  bool Unk2700_FHHLMJALLMN = 7;
  Unk2700_PHGGAEDHLBN Unk2700_JGFDODPBGFL = 13;
}


message Unk2700_KIGGOKAEFHM {
  repeated ItemParam item_list = 2;
  uint32 uid = 8;
  ProfilePicture profile_picture = 1;
  string nickname = 12;
}


// CmdId: 108
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KIHEEAGDGIL_ServerNotify {
  Unk2700_DPPCDPBBABA info = 13;
}

// CmdId: 4615
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KIIOGMKFNNP_ServerRsp {
  int32 retcode = 15;
}


message Unk2700_KJDPNIKDKEJ {
  Unk2700_HEMFKLPNNOM type = 8;
  int32 value = 4;
}

message Unk2700_KJODHFMHMNC {
  uint32 id = 1;
  bool Unk2700_MMNILGLDHHD = 14;
}


// CmdId: 8218
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_KKEDIMOKCGD {
  bool Unk2700_NHBDAFBHNMH = 9;
  Unk2700_EEPNCOAEKBM Unk2700_KEAGHCIIGGN = 10;
}


message Unk2700_KLJLJGJOBDI {
  uint32 Unk2700_CDDONJJMFCI = 8;
  Unk2700_NCNPNMFFONG reason = 7;
  uint32 final_score = 13;
  uint32 Unk2700_FFCCLGIFGIP = 15;
}


message Unk2700_KLPINMKOEPE {
  uint32 room_id = 15;
  repeated Unk2700_IGJLOMCPLLE Unk2700_ICMKKOMLHIH = 4;
}

// CmdId: 8848
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KMIDCPLAGMN {
  uint32 schedule_id = 7;
  int32 retcode = 3;
  map<uint32, uint32> Unk2700_IFCNGIPPOAE = 14;
}

// CmdId: 6201
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KMNPMLCHELD_ServerRsp {
  int32 retcode = 12;
}


message Unk2700_KNGDOIDOFFB {
  uint32 Unk2700_HLEMPIKMBMP = 6;
  Unk2700_MOFABPNGIKP reason = 4;
  uint32 Unk2700_OMCCFBBDJMI = 1;
}

// CmdId: 2163
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KNGFOEKOODA_ServerRsp {
  uint32 activity_id = 4;
  int32 retcode = 6;
  uint32 schedule_id = 11;
}

// CmdId: 384
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KNMDFCBLIIG_ServerRsp {
  uint32 entity_id = 10;
}

// CmdId: 4208
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_KOGOPPONCHB_ClientReq {
  uint32 type_id = 2;
  uint32 Unk2700_LEKOKKMDNAO = 14;
}


// CmdId: 8185
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_KPGMEMHEEMD {
  int32 retcode = 14;
  Unk2700_GPPKNKGDCHJ Unk2700_AAOHOIJEOEG = 3;
}


// CmdId: 8363
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_KPMMEBNMMCL {
  repeated uint32 Unk2700_OKGKHPCMNMN = 1;
  repeated Unk2700_HJLFNKLPFBH Unk2700_ELOOIKFNJCG = 8;
}



message Unk2700_KPNPJPPHOKA {
  uint32 group_id = 5;
  oneof detail {
    RacingGalleryInfo racing_gallery_info = 467;
    BalloonGalleryInfo balloon_gallery_info = 1410;
    StakePlayGalleryInfo stake_play_info = 347;
    SeekFurnitureGalleryInfo seek_furniture_gallery_info = 1822;
  }
}

// CmdId: 5553
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LAFHGMOPCCM_ServerNotify {
  uint32 gallery_id = 13;
}

message Unk2700_LBIDBGLGKCJ {
  bool Unk2700_MMNILGLDHHD = 7;
  uint32 max_score = 9;
  uint32 id = 4;
}

// CmdId: 4759
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_LBJKLAGNDEJ_ClientReq {
  uint32 group_id = 2;
}

message Unk2700_LBOAEFMECCP {
  repeated uint32 Unk2700_POMENCDDAGL = 11;
  uint32 id = 7;
}

// CmdId: 8062
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LBOPCDPFJEC {
  int32 retcode = 4;
}

message Unk2700_LBPFDCBHCBL {
  string name = 1;
  string value = 2;
}

// CmdId: 4014
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LCFGKHHIAEH_ServerNotify {
  string signature = 12;
}


// CmdId: 8748
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_LDJLMCAHHEN {
  repeated Unk2700_HJLFNKLPFBH Unk2700_OHECOOHPNHG = 6;
}

message Unk2700_LELADCCDNJH {
  uint32 Unk2700_FACFKJKIBBO = 1;
  uint32 id = 2;
  bool is_finished = 7;
  bool Unk2700_MJDCFONLGKN = 9;
  bool Unk2700_AKAAHELAGHJ = 10;
}

// CmdId: 8362
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LEMPLKGOOJC {
  int32 retcode = 4;
}


// CmdId: 6349
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LGAGHFKFFDO_ServerRsp {
  uint64 Unk2700_CEPGMKAHHCD = 14;
  int32 retcode = 15;
  Unk2700_OPEBMJPOOBL Unk2700_KHBDAPGDOJA = 13;
}

// CmdId: 177
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_LGGAIDMLDIA_ServerReq {}


// CmdId: 6227
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LGHJBAEBJKE_ServerRsp {
  int32 retcode = 10;
  Unk2700_OGKIDNPMMKG Unk2700_HKIFDFGHJOK = 14;
  repeated Unk2700_MIBBHAEMAGI Unk2700_KLOAFPMHOKI = 5;
}

// CmdId: 9000
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_LHMOFCJCIKM {}

message Unk2700_LHPELFJPPOD {
  bool Unk2700_GHGIOMEHIAN = 13;
  uint32 best_score = 7;
  uint32 challenge_id = 3;
}

// CmdId: 8964
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_LIJCBOBECHJ {}

// CmdId: 8113
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_LJINJNECBIA {
  uint32 schedule_id = 3;
}

// CmdId: 458
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LKFKCNJFGIF_ServerRsp {
  uint32 quest_id = 4;
  int32 retcode = 11;
  repeated uint32 lacked_npc_list = 8;
  repeated uint32 lacked_place_list = 5;
  map<uint32, uint32> lacked_npc_map = 10;
  map<uint32, uint32> lacked_place_map = 2;
}


// CmdId: 6326
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_LKPBBMPFPPE_ClientReq {
  Unk2700_OPEBMJPOOBL Unk2700_KHBDAPGDOJA = 8;
  uint64 Unk2700_CEPGMKAHHCD = 5;
  DropSubfieldType Unk2700_MJNIHFCKJMN = 6;
  bool Unk2700_CAOIKBJJFIH = 11;
  Unk2700_CKMOPKMKCAO Unk2700_BFPCGJEDDFK = 13;
}


// CmdId: 8154
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LLBCBPADBNO {
  Unk2700_DIEGJDEIDKO explore_info = 12;
  Unk2700_DIEGJDEIDKO battle_info = 4;
}


message Unk2700_LLGDCAKMCKL {
  repeated Unk2700_DMPIJLBHEAE challenge_info_list = 9;
  bool is_open = 10;
  uint32 stage_id = 2;
}


// CmdId: 8253
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LMAKABBJNLN {
  int32 retcode = 6;
  repeated Unk2700_FGJFFMPOJON Unk2700_COOFMKLNBND = 11;
  uint32 schedule_id = 10;
}


// CmdId: 4583
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LNBBLNNPNBE_ServerNotify {
  uint32 gallery_id = 15;
  Unk2700_JCBJHCFEONO Unk2700_GIHGLFNAGJD = 5;
  Unk2700_MOFABPNGIKP reason = 4;
}


// CmdId: 8572
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_LNMFIHNFKOO {
  uint32 uid = 12;
  repeated ItemParam item_list = 11;
}

// CmdId: 4608
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_LOHBMOKOPLH_ServerNotify {
  repeated uint32 Unk2700_KMEKMNONMGE = 11;
}

// CmdId: 8518
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_LPMIMLCNEDA {
  uint32 stage_id = 2;
  uint32 challenge_id = 7;
}


// CmdId: 5757
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MBIAJKLACBG {
  GroupLinkBundle bundle = 11;
}


message Unk2700_MBIDJDLLBNM {
  uint32 open_time = 5;
  uint32 id = 1;
  Vector pos = 14;
  uint32 max_score = 2;
}


// CmdId: 6033
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MCJIOOELGHG_ServerNotify {
  repeated Unk2700_JDPMOMKAPIF Unk2700_KBMKGNGFGFO = 6;
}


// CmdId: 6345
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MCOFAKMDMEF_ServerRsp {
  repeated uint64 Unk2700_AOOAAECDCOA = 15;
  int32 retcode = 10;
  Unk2700_OPEBMJPOOBL Unk2700_KHBDAPGDOJA = 12;
}


// CmdId: 8038
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_MDGKMNEBIBA {
  Unk2700_HJLFNKLPFBH Unk2700_GIMLODDEDJH = 2;
}

// CmdId: 4020
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_MDPHLPEGFCG_ClientReq {}

// CmdId: 4847
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MEBFPBDNPGO_ServerNotify {
  repeated uint32 Unk2700_ELJPLMIHNIP = 11;
}

// CmdId: 5338
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MEFJECGAFNH_ServerNotify {
  uint32 left_monsters = 8;
}

// CmdId: 8791
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MENCEGPEFAK {
  int32 retcode = 2;
}

// CmdId: 8345
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_MFAIPHGDPBL {
  uint32 Unk2700_LKBHLHIHJGL = 1;
}

// CmdId: 152
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MFINCDMFGLD_ServerNotify {
  bool is_open = 8;
  uint32 Unk2700_JEKIGDDNCAB = 12;
}

// CmdId: 6234
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_MHMBDFKOOLJ_ClientNotify {
  int32 retcode = 15;
}

message Unk2700_MHPCNKJGEJN {}



message Unk2700_MIBBHAEMAGI {
  Unk2700_PHGGAEDHLBN Unk2700_JGFDODPBGFL = 2;
  bool Unk2700_GBCGGDONMCD = 13;
  Unk2700_OHBMICGFIIK Unk2700_IKGOMKLAJLH = 7;
  uint64 Unk2700_ONOOJBEABOE = 10;
  uint32 Unk2700_BPMLPHIMJAF = 14;
  repeated uint32 tag_list = 15;
  uint32 dungeon_id = 5;
  uint32 Unk2700_DPPILIMGOKH = 12;
  Unk2700_BMBAIACNLDF state = 1;
  Unk2700_ELMEOJFCOFH Unk2700_PCFIKJEDEGN = 4;
}


// CmdId: 8462
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_MIBHNLEMICB {
  repeated ItemParam item_list = 7;
  uint32 quest_id = 4;
}

// CmdId: 8377
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_MIEJMGNBPJE {
  uint32 stage_id = 1;
}

message Unk2700_MIMJBGMEMCA {
  bool Unk2700_MMNILGLDHHD = 1;
  uint32 Unk2700_LINCFMHPMDP = 2;
  uint32 Unk2700_FACFKJKIBBO = 8;
  bool Unk2700_PEDCFBJLHGP = 7;
}

// CmdId: 8569
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MJAIKMBPKCD {
  int32 retcode = 10;
  uint32 gallery_id = 14;
}


// CmdId: 6212
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MJCCKKHJNMP_ServerRsp {
  int32 retcode = 13;
  repeated Unk2700_GHHCCEHGKLH Unk2700_BCIBEPMFLGN = 7;
}


message Unk2700_MJGFEHOMKJE {
  repeated Unk2700_GHONKKEGHGL Unk2700_PHKHIPLDOOA = 6;
}

// CmdId: 430
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MKAFBOPFDEF_ServerNotify {
  bool Unk2700_DFMMBCLLBEN = 5;
}


// CmdId: 4287
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MKLLNAHEJJC_ServerRsp {
  Unk2700_CCEOEOHLAPK Unk2700_COIELIGEACL = 9;
}


// CmdId: 8026
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MKMDOIKBBEP {
  Unk2700_HIHKGMLLOGD Unk2700_BABEGIGEEIB = 10;
  int32 retcode = 5;
  bool Unk2700_DJAPHKALAHA = 1;
}


message Unk2700_MLMEFKLMOEF {
  int32 value = 5;
  Unk2700_EAJCGENDICI type = 4;
}


// CmdId: 4878
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MLMJFIGJJEH_ServerNotify {
  repeated Unk2700_IMMPPANFEPP Unk2700_FEGCOKJJBGO = 12;
}


// CmdId: 6221
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MMDCAFMGACC_ServerNotify {
  Unk2700_ADGLMHECKKJ Unk2700_NBAIINBBBPK = 9;
  repeated uint32 Unk2700_EIOPOPABBNC = 14;
  Unk2700_KBBDJNLFAKD Unk2700_LGBODABIKLL = 15;
}


// CmdId: 4486
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_MMFIJILOCOP_ClientReq {
  Unk2700_IMMPPANFEPP Unk2700_JJBKBKPEIBC = 1;
}

message Unk2700_MMJJMKMHANL {
  uint32 dungeon_id = 11;
  uint32 Unk2700_FMOFEBIAOFO = 3;
}


// CmdId: 8514
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_MNIBEMEMGMO {
  repeated Unk2700_HJLFNKLPFBH Unk2700_BNHNCPPADPJ = 10;
  uint32 Unk2700_KGMFDCOMCOF = 6;
  uint32 Unk2700_MLMJABGLDPH = 8;
  bool Unk2700_NHMJKBGEHID = 7;
}

enum Unk2700_MOFABPNGIKP {
  Unk2700_MOFABPNGIKP_Unk2700_DGJFKKIBLCJ = 0;
  Unk2700_MOFABPNGIKP_Unk2700_IANMLLDEIJH = 1;
  Unk2700_MOFABPNGIKP_Unk2700_CCBNMEBCOKM = 2;
  Unk2700_MOFABPNGIKP_Unk2700_CABFGAEJAIA = 3;
  Unk2700_MOFABPNGIKP_Unk2700_JFPKBELPINO = 4;
  Unk2700_MOFABPNGIKP_Unk2700_ECHKDKLKPLH = 5;
  Unk2700_MOFABPNGIKP_Unk2700_NALBIHIEGAF = 6;
  Unk2700_MOFABPNGIKP_Unk2700_KNAHCHDLEOM = 7;
  Unk2700_MOFABPNGIKP_Unk2700_CAIOEECIPIM = 8;
  Unk2700_MOFABPNGIKP_Unk2700_IEICHGLOIAL = 9;
}


message Unk2700_MPELMDDJFHO {
  uint64 Unk2700_ONOOJBEABOE = 1;
  uint32 dungeon_id = 2;
  string Unk2700_MONNIDCNDFI = 3;
  repeated uint32 tag_list = 4;
  Unk2700_GBHAPPCDCIL Unk2700_JGFDODPBGFL = 5;
  Unk2700_IOONEPPHCJP Unk2700_PCFIKJEDEGN = 6;
  Unk2700_PDGLEKKMCBD Unk2700_IKGOMKLAJLH = 7;
}

// CmdId: 4187
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_MPPAHFFHIPI_ServerNotify {
  uint32 match_id = 9;
}

// CmdId: 8257
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_NAEHEDLGLKA {}


message Unk2700_NAFAIMHFEFG {
  Vector pos = 10;
  uint32 group_id = 2;
  uint32 config_id = 11;
}

message Unk2700_NAPLFKNOECD {
  uint32 type = 15;
  float Unk2700_KJGKBENCNKF = 11;
  float value = 3;
  float Unk2700_POGMHNNJKDM = 10;
}

// CmdId: 6057
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NBFJOJPCCEK_ServerRsp {
  int32 retcode = 6;
}


// CmdId: 5928
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NBFOJLAHFCA_ServerNotify {
  repeated Unk2700_JMPCGMBHJLG Unk2700_KKDHNGGEFDI = 12;
  uint32 Unk2700_BHOEBCNOEEG = 4;
}

// CmdId: 933
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_NCJLMACGOCD_ClientNotify {
  uint32 Unk2700_CCPALMMFDFC = 5;
  uint32 Unk2700_NEMOEIFHIFC = 10;
  uint32 dungeon_id = 3;
}

// CmdId: 8407
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NCMPMILICGJ {
  uint32 Unk2700_IGMHNDNGNPG = 3;
  uint32 Unk2700_KIAHJKGOLGO = 7;
  uint32 avatar_id = 11;
}

enum Unk2700_NCNPNMFFONG {
  Unk2700_NCNPNMFFONG_Unk2700_EOOLPOEEAPH = 0;
  Unk2700_NCNPNMFFONG_Unk2700_GLPMMPCFDLN = 1;
  Unk2700_NCNPNMFFONG_Unk2700_MFPLNPDOELM = 2;
  Unk2700_NCNPNMFFONG_Unk2700_EPFDAAKBKML = 3;
  Unk2700_NCNPNMFFONG_Unk2700_PMAPHIADDJF = 4;
  Unk2700_NCNPNMFFONG_Unk2700_BLJLDKHIPGD = 5;
  Unk2700_NCNPNMFFONG_Unk2700_EOPEJCDHJCF = 6;
}

// CmdId: 8767
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_NCPLKHGCOAH {
  uint32 entity_id = 11;
}


// CmdId: 8340
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_NDDBFNNHLFE {
  Unk2700_DJKEGIEIKHG settle_info = 13;
  uint32 gallery_id = 5;
}

// CmdId: 8806
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_NEHPMNPAAKC {
  uint32 schedule_id = 6;
}

// CmdId: 6314
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NELNFCMDMHE_ServerRsp {
  int32 retcode = 7;
}


// CmdId: 4811
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NFGNGFLNOOJ_ServerNotify {
  uint32 gallery_id = 1;
  Unk2700_CHLNIDHHGLE settle_info = 5;
  uint32 Unk2700_HAOPLFPOLFM = 6;
  bool is_new_record = 4;
}

// CmdId: 8703
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_NGEKONFLEBB {
  uint32 difficulty = 5;
  uint32 gadget_entity_id = 15;
}


// CmdId: 8956
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NGPMINKIOPK {
  Unk2700_PPIBANCGGNI settle_info = 6;
  uint32 gallery_id = 2;
}

// CmdId: 6236
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_NIMPHALPEPO_ClientNotify {
  uint32 Unk2700_MKIMFKIGBCL = 13;
  uint64 Unk2700_ONOOJBEABOE = 12;
}

// CmdId: 2155
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NINHGODEMHH_ServerNotify {
  uint32 schedule_id = 1;
  uint32 activity_id = 3;
}

// CmdId: 8093
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NJNMEFINDCF {
  int32 retcode = 6;
  uint32 level_id = 1;
}

message Unk2700_NKIDCOKNPFF {
  uint32 uid = 4;
  uint32 building_points = 9;
  uint32 Unk2700_CDOKENJJJMH = 3;
}

// CmdId: 8459
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NKIEIGPLMIO {
  uint32 challenge_type = 1;
  int32 retcode = 4;
  uint32 stage_id = 7;
}


// CmdId: 8626
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NLBJHDNKPCC {
  int32 retcode = 6;
  repeated Unk2700_GPPKNKGDCHJ Unk2700_AAOHOIJEOEG = 14;
}


message Unk2700_NLFDMMFNMIO {
  Unk2700_PHGGAEDHLBN Unk2700_JGFDODPBGFL = 1;
  repeated Unk2700_KLPINMKOEPE Unk2700_AAGBIFHNNPP = 15;
  uint32 dungeon_id = 3;
  uint64 Unk2700_ONOOJBEABOE = 10;
}

// CmdId: 8281
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NLJBCGILMIE {
  int32 retcode = 4;
  repeated uint32 item_id_list = 7;
}

// CmdId: 8930
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_NMEENGOJOKD {
  map<uint32, uint32> Unk2700_DACHHINLDDJ = 12;
}

// CmdId: 8061
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_NMJCGMOOIFP {
  uint32 level_id = 15;
  uint32 gallery_id = 4;
}


// CmdId: 8943
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_NMJIMIKKIME {
  repeated uint32 Unk2700_OKGKHPCMNMN = 9;
  repeated Unk2700_HJLFNKLPFBH Unk2700_ELOOIKFNJCG = 11;
}

// CmdId: 5539
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NNDKOICOGGH_ServerNotify {
  uint32 gallery_id = 13;
  bool Unk2700_INDLFDCOFDG = 11;
  uint32 buff_id = 14;
}


// CmdId: 4538
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_NNMDBDNIMHN_ServerRsp {
  Unk2700_KPNPJPPHOKA Unk2700_IFNLJDCJJED = 7;
  int32 retcode = 11;
  uint32 Unk2700_MAPJLIDACPN = 1;
}

enum Unk2700_NOCLNCCJEGK {
  Unk2700_NOCLNCCJEGK_NONE = 0;
  Unk2700_NOCLNCCJEGK_Unk2700_ODIJEIGEGED = 1;
}


message Unk2700_NOGODJOJDGF {
  uint32 score = 12;
  Unk2700_OCDMIOKNHHH player_info = 10;
}

enum Unk2700_NPOBPFNDJKK {
  Unk2700_NPOBPFNDJKK_Unk2700_PGICIHIAMBF = 0;
  Unk2700_NPOBPFNDJKK_Unk2700_OALJEIJHGKL = 1;
  Unk2700_NPOBPFNDJKK_Unk2700_JDIGCAMIBIA = 2;
  Unk2700_NPOBPFNDJKK_Unk2700_KBGKJADDAAF = 3;
  Unk2700_NPOBPFNDJKK_Unk2700_MNPNGKHMFNA = 4;
  Unk2700_NPOBPFNDJKK_Unk2700_NBCDOEINJLJ = 5;
  Unk2700_NPOBPFNDJKK_Unk2700_PHLJKMGKCBM = 6;
}

// CmdId: 8072
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_OBCKNDBAPGE {
  uint32 gadget_id = 9;
  uint32 group_id = 2;
}

// CmdId: 8523
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_OBDHJJHLIKJ {
  uint32 Unk2700_MAOAHHBCKIA = 2;
  uint32 activity_id = 3;
}

// CmdId: 8718
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_OCAJADDLPBB {
  uint32 Unk2700_LFALEEDODEC = 7;
}


message Unk2700_OCDMIOKNHHH {
  string online_id = 14;
  string psn_id = 6;
  string nickname = 15;
  uint32 player_level = 4;
  uint32 uid = 2;
  ProfilePicture profile_picture = 5;
}

enum Unk2700_OCOKILBJIPJ {
  Unk2700_OCOKILBJIPJ_Unk2700_MPGOEMPNCEH = 0;
  Unk2700_OCOKILBJIPJ_Unk2700_PDKBOLMIHMA = 1;
  Unk2700_OCOKILBJIPJ_Unk2700_MCEBEJONJGH = 2;
  Unk2700_OCOKILBJIPJ_Unk2700_MCNDLHHBBGJ = 3;
}

// CmdId: 8054
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_ODBNBICOCFK {
  uint32 Unk2700_AOJDMJPGBOL = 2;
}


// CmdId: 8067
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_ODJKHILOILK {
  int32 retcode = 11;
  PotionStage Unk2700_BBEEMJECIAA = 14;
}

// CmdId: 8686
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_OEDLCGKNGLH {
  uint32 level_id = 2;
  int32 retcode = 14;
}


// CmdId: 6223
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_OFDBHGHAJBD_ServerNotify {
  Unk2700_MIBBHAEMAGI Unk2700_JIFAAPCJOHK = 12;
}

// CmdId: 4488
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_OGHMHELMBNN_ServerRsp {
  int32 retcode = 7;
}


message Unk2700_OGKIDNPMMKG {
  Unk2700_HGMCNJOPDAA Unk2700_MINEHKAGOGA = 11;
  uint32 expire_time = 6;
  uint64 Unk2700_ONOOJBEABOE = 5;
}

message Unk2700_OHBMICGFIIK {
  uint32 Unk2700_DABMGCIOKCK = 4;
  uint32 Unk2700_BKJABFANBIM = 12;
  uint32 Unk2700_PGBNOPOIHIK = 7;
  uint32 Unk2700_DJNLHEBADGE = 2;
}

// CmdId: 8125
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_OHDDPIFAPPD {
  bool is_new = 10;
  uint32 Unk2700_GJOFNJGEDDE = 3;
  int32 retcode = 4;
  uint32 Unk2700_BPNCECAFPDK = 6;
  uint32 quest_id = 15;
  repeated uint32 affix_list = 2;
}

// CmdId: 8233
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_OHIKIOLLMHM {
  uint32 uid = 5;
  uint32 schedule_id = 1;
  map<uint32, uint32> Unk2700_IFCNGIPPOAE = 4;
}


message Unk2700_OHOKEEGPPBG {
  repeated ItemParam reward_item_list = 4;
  uint32 uid = 3;
}

// CmdId: 2009
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_OJHJBKHIPLA_ClientReq {
  uint32 schedule_id = 15;
  uint32 activity_id = 12;
}


message Unk2700_OJJNGIHDJEH {
  uint32 Unk2700_OMCCFBBDJMI = 1;
  uint32 timestamp = 8;
  Unk2700_OCDMIOKNHHH player_info = 12;
}

// CmdId: 6203
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_OJLJMJLKNGJ_ClientReq {
  uint32 room_id = 2;
}

// CmdId: 8396
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_OKEKCGDGPDA {
  uint32 gallery_id = 4;
}

// CmdId: 8426
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_OKNDIGOKMMC {
  int32 retcode = 15;
}

// CmdId: 8343
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_OLKJCGDHENH {
  int32 retcode = 8;
}


message Unk2700_ONCHFHBBCBN {
  uint32 hit_count = 12;
  uint32 score = 11;
  Unk2700_OCDMIOKNHHH player_info = 5;
  uint32 timestamp = 2;
}

// CmdId: 8401
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_ONKMCKLJNAL {
  uint32 id = 2;
}

enum Unk2700_OPEBMJPOOBL {
  Unk2700_OPEBMJPOOBL_NONE = 0;
  Unk2700_OPEBMJPOOBL_Unk2700_HONBFAOIDKK = 1;
}

// CmdId: 8924
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_PBGBOLJMIIB {
  uint32 activity_id = 14;
}

// CmdId: 8758
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_PCBGAIAJPHH {
  uint32 level_id = 7;
}

// CmdId: 8447
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_PDGJFHAGMKD {
  int32 retcode = 3;
}

message Unk2700_PDGLEKKMCBD {
  uint32 Unk2700_PGBNOPOIHIK = 1;
  uint32 Unk2700_BKJABFANBIM = 2;
  uint32 Unk2700_DJNLHEBADGE = 3;
  uint32 Unk2700_DABMGCIOKCK = 4;
}


message Unk2700_PEDJGJMHMHH {
  uint32 open_time = 8;
  uint32 level_id = 15;
  Unk2700_EOHBLDIKPME Unk2700_EAKNBKIIJHB = 7;
  Unk2700_EOHBLDIKPME Unk2700_HIHOANFAKEA = 11;
}

// CmdId: 6214
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_PFFKAEPBEHE_ServerRsp {
  int32 retcode = 2;
}

// CmdId: 8833
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_PFOLNOBIKFB {
  bool Unk2700_PIDPNNOGBJB = 4;
  bool Unk2700_DCGOILIDPNK = 3;
  int32 retcode = 1;
}

message Unk2700_PGFLJBBEBKG {
  uint64 Unk2700_ONOOJBEABOE = 1;
  uint32 Unk2700_MKIMFKIGBCL = 2;
}

// CmdId: 8559
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_PHFADCJDBOF {
  uint32 schedule_id = 8;
}

message Unk2700_PHGGAEDHLBN {
  repeated uint32 Unk2700_ANHJAFDEACF = 1;
  bool Unk2700_IBDCFAMBGOK = 14;
  uint32 Unk2700_KENGEGJGAEL = 6;
  uint32 Unk2700_DOIMMBJDALB = 4;
  bool Unk2700_FKLBCNLBBNM = 3;
  uint32 Unk2700_IFNFCNNBPIB = 10;
  uint32 Unk2700_PBBPGFMNMNJ = 9;
}

// CmdId: 8165
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_PHLEDBIFIFL {
  uint32 level_id = 12;
  uint32 difficulty = 4;
}

enum Unk2700_PIAFGFGHGHM {
  Unk2700_PIAFGFGHGHM_Unk2700_LKEBMNKGKCP = 0;
  Unk2700_PIAFGFGHGHM_Unk2700_PJHOMLBMENK = 1;
  Unk2700_PIAFGFGHGHM_Unk2700_MPGMPAOGMCB = 2;
}

// CmdId: 6237
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_PIEJLIIGLGM_ServerRsp {
  int32 retcode = 3;
}


// CmdId: 8531
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_PIEJMALFKIF {
  uint32 stage_id = 13;
  uint32 Unk2700_FHEHGDABALE = 7;
  repeated Unk2700_KHDMDKKDOCD dungeon_avatar_list = 6;
  uint32 level_id = 8;
  uint32 Unk2700_HKFEBBCMBHL = 5;
}

message Unk2700_PILILDPMNNA {
  uint32 difficulty = 7;
  repeated uint32 Unk2700_EGBDDLOBCDL = 4;
  bool Unk2700_MMFHBHNKLDG = 9;
  uint32 stage_id = 12;
  uint32 Unk2700_PPEBOKBCPLE = 3;
}

// CmdId: 8367
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_PJCMAELKFEP {
  uint32 gallery_id = 13;
}

// CmdId: 8895
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_PJPMOLPHNEH {
  uint32 Unk2700_HLHIAHAELDA = 1;
  bool Unk2700_MMNILGLDHHD = 3;
  uint32 Unk2700_PPEBOKBCPLE = 2;
}

message Unk2700_PKAPCOBGIJL {
  uint32 Unk2700_OOJCLILDIHM = 1;
  uint32 Unk2700_KDNLGNDLDNM = 10;
}


// CmdId: 8423
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_PKCLMDHHPFI {
  repeated Unk2700_KIGGOKAEFHM Unk2700_HHODMCCNGKE = 8;
  int32 retcode = 6;
}

// CmdId: 8983
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_PKKJEOFNLCF {
  int32 retcode = 3;
  uint32 Unk2700_CKGJEOOKFIF = 8;
}


// CmdId: 8385
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_PMKNJBJPLBH {
  int32 retcode = 11;
  repeated Unk2700_HJLFNKLPFBH Unk2700_BBGHICEDLBB = 13;
  repeated uint32 Unk2700_GGNBBHMGLAN = 12;
  repeated Unk2700_HJLFNKLPFBH avatar_list = 9;
}

// CmdId: 8273
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2700_PPBALCAKIBD {}


message Unk2700_PPIBANCGGNI {
  Unk2700_MOFABPNGIKP reason = 7;
}

// CmdId: 6219
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2700_PPOGMFAKBMK_ServerRsp {
  int32 retcode = 3;
}

// CmdId: 21800
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_ACHELBEEBIP {
  int32 retcode = 2;
  bool is_success = 15;
  uint32 level_id = 3;
}

// CmdId: 846
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_ANGFAFEJBAE {
  int32 retcode = 15;
}

// CmdId: 24550
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_BDAPFODFMNE {}


message Unk2800_BEMANDBNPJB {
  OnlinePlayerInfo player_info = 13;
  repeated ExhibitionDisplayInfo card_list = 11;
}

// CmdId: 8574
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_BOFEHJBJELJ {
  int32 retcode = 9;
}

message Unk2800_BPOJIIDEADD {
  uint32 Unk2800_MMPELBBNFOD = 8;
  uint32 open_time = 11;
  uint32 Unk2800_MGPEODNKEEC = 5;
  uint32 level_id = 12;
  bool is_finished = 9;
  bool is_open = 3;
}

message Unk2800_CEAECGGBOKL {
  uint32 Unk2800_KDLIIGEGDDH = 15;
  uint32 Unk2800_ENMCNIPGGIA = 12;
  uint32 Unk2800_DEIGAGPAJGK = 14;
  uint32 dungeon_id = 4;
  uint32 Unk2800_JKOGDAMMBIN = 13;
}

message Unk2800_CGODFDDALAG {
  uint32 stage_id = 10;
  bool is_open = 3;
  uint32 open_time = 12;
  bool Unk2800_GCPNBJIJEDA = 15;
}

message Unk2800_CGPNLBNMPCM {
  uint32 open_time = 7;
  bool is_open = 14;
  uint32 stage_id = 10;
  uint32 best_score = 13;
}

// CmdId: 5565
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_CHEDEMEDPPM {
  uint32 point_id = 7;
  uint32 coin = 15;
  uint32 Unk2800_EOFOECJJMLJ = 3;
  uint32 Unk2800_BAEEDEAADIA = 13;
}

// CmdId: 23467
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_COCHLKHLCPO {
  uint32 level_id = 5;
}

// CmdId: 8346
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_DKDJCLLNGNL {}

// CmdId: 876
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_DNKCFLKHKJG {
  uint32 Unk2800_LEHIJIPEONO = 3;
  uint32 gadget_entity_id = 8;
}

// CmdId: 1902
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_DPINLADLBFA {}

// CmdId: 1921
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_ECCLDPCADCJ {}

// CmdId: 21851
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_EKGCCBDIKFI {
  int32 retcode = 12;
  bool is_success = 6;
}

enum Unk2800_FDLKPKFOIIK {
  Unk2800_FDLKPKFOIIK_NONE = 0;
  Unk2800_FDLKPKFOIIK_START = 1;
  Unk2800_FDLKPKFOIIK_Unk2800_FDPBDHDHAKO = 2;
}

message Unk2800_FGFMMFAKDEL {
  uint32 Unk2800_HKEDPPELJDD = 7;
  bool Unk2800_FOGGAIHLNOP = 3;
  bool Unk2800_NKKMCEKPKLA = 2;
  uint32 gear_id = 11;
  uint32 Unk2800_JJFDKELDLEM = 6;
}

// CmdId: 21025
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_FHCJIICLONO {
  uint32 level_id = 9;
  int32 retcode = 2;
}

message Unk2800_FHMOLALLEEN {
  repeated uint32 argument_list = 1;
}

enum Unk2800_FMAOEPEBKHB {
  Unk2800_FMAOEPEBKHB_Unk2800_IBMPPHFLKEO = 0;
  Unk2800_FMAOEPEBKHB_Unk2800_GFHGOAMCAJH = 1;
  Unk2800_FMAOEPEBKHB_Unk2800_FOBCHIGNEJB = 2;
}


// CmdId: 24601
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_GDDLBKEENNA {
  bool is_new_record = 13;
  Unk2700_MOFABPNGIKP reason = 1;
  repeated Unk2800_BEMANDBNPJB settle_info_list = 8;
  repeated ExhibitionDisplayInfo score_list = 6;
  uint32 Unk2700_CDDONJJMFCI = 15;
}

// CmdId: 23388
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_HHPCNJGKIPP {
  int32 retcode = 6;
}

// CmdId: 145
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_HKBAEOMCFOD {
  uint32 giving_id = 10;
  int32 retcode = 6;
}


// CmdId: 5594
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_IBDOMAIDPGK {
  Unk2800_FMAOEPEBKHB Unk2800_ENJGEFBCLOL = 11;
  uint32 end_time = 12;
  bool Unk2800_OCCCDEMDONA = 7;
  uint32 gallery_id = 14;
}


// CmdId: 8513
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_IECLGDFOMFJ {
  uint32 schedule_id = 14;
  repeated Unk2800_PHPHMILPOLC Unk2800_KOMIPKKKOBE = 3;
  uint32 activity_id = 10;
}

// CmdId: 1684
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_IGKGDAGGCEC {
  uint64 cur_avatar_guid = 8;
  repeated uint64 avatar_team_guid_list = 3;
}

// CmdId: 8476
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_IILBEPIEBJO {
  uint32 gallery_id = 5;
}

// CmdId: 3004
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_ILKIAECAAKG {
  uint32 reminder_id = 15;
}

enum Unk2800_IMLDGLIMODE {
  Unk2800_IMLDGLIMODE_NONE = 0;
  Unk2800_IMLDGLIMODE_Unk2800_FIPMFJALDJM = 1;
  Unk2800_IMLDGLIMODE_Unk2800_OFNLGLLMMED = 2;
}


message Unk2800_IOBHBFFAONO {
  uint32 param_1 = 7;
  uint32 param_2 = 2;
  Unk2700_MOFABPNGIKP reason = 3;
  uint32 param_3 = 6;
  uint32 Unk2800_NGGPIECNHJA = 12;
  uint32 gallery_id = 1;
}

message Unk2800_JBEDBFJFEIH {
  uint32 equip_type = 9;
  uint32 element_type = 12;
}


// CmdId: 5504
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_JCPNICABMAF {
  uint32 coin = 10;
  Unk2800_IMLDGLIMODE stage = 8;
  uint32 kill_monster_count = 4;
  uint32 progress = 15;
}

message Unk2800_JIPMJPAKIKE {
  bool is_finished = 7;
  uint32 Unk2800_MMPELBBNFOD = 10;
  bool is_open = 5;
  uint32 Unk2800_MGPEODNKEEC = 6;
}

message Unk2800_JKLFAJKDLDG {
  uint32 quest_id = 13;
  uint32 point_id = 6;
}

// CmdId: 8996
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_KFNCDHFHJPD {
  int32 retcode = 3;
}


// CmdId: 21834
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_KHLHFFHGEHA {
  bool is_success = 4;
  bool Unk2800_ICNCEKIJNJA = 12;
  repeated Unk2800_FGFMMFAKDEL Unk2800_EGJDBBGNMFI = 9;
  uint32 level_id = 5;
}

// CmdId: 5593
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_KILFIICJLEE {
  uint32 gallery_id = 15;
}

// CmdId: 1768
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_KJEOLFNEOPF {
  repeated uint64 avatar_team_guid_list = 14;
  int32 retcode = 7;
  uint64 cur_avatar_guid = 15;
}

// CmdId: 5522
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_KOMBBIEEGCP {
  uint32 gallery_id = 2;
  uint32 coin = 9;
  uint32 Unk2800_LBPCDCHOOLJ = 11;
}

// CmdId: 874
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_KPJKAJLNAED {
  int32 retcode = 12;
}

// CmdId: 8145
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_LGIKLPBOJOI {
  repeated uint32 Unk2800_AEKPBKAAHFL = 14;
  uint32 activity_id = 7;
}

// CmdId: 5527
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_LIBCDGDJMDF {
  uint32 gallery_id = 9;
  int32 retcode = 5;
}

message Unk2800_MBKLJLMLIKF {
  uint32 stage_id = 13;
  bool is_open = 14;
  uint32 best_score = 4;
}


message Unk2800_MHCFAGCKGIB {
  uint32 scene_id = 12;
  uint32 point_id = 6;
  repeated DungeonEntryInfo dungeon_entry_list = 1;
  uint32 recommend_dungeon_id = 8;
}

// CmdId: 8004
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_MNBDNGKGDGF {
  uint32 gallery_id = 13;
  int32 retcode = 8;
}


// CmdId: 8870
// EnetChannelId: 0
// EnetIsReliable: true
message Unk2800_NHEOHBNFHJD {
  Unk2800_IOBHBFFAONO settle_info = 11;
  uint32 stage_id = 7;
  bool is_new_record = 2;
  uint32 gallery_id = 1;
}


message Unk2800_OCOMLNLPLGA {
  uint32 element_type = 11;
  repeated Unk2700_GBBDJMDIDEI Unk2700_DMDHDIHGPFA = 5;
  uint32 equip_type = 15;
}

// CmdId: 171
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_OFIHDGFMDGB {
  uint32 giving_id = 4;
}


// CmdId: 843
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_OMGNOBICOCD {
  uint32 Unk2800_DPEOIJKEAPB = 14;
  CustomGadgetTreeInfo Unk2700_OCIHJFOKHPK = 11;
  uint32 gadget_entity_id = 10;
}

// CmdId: 21054
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message Unk2800_OOKIPFHPJMG {
  bool is_success = 8;
}


message Unk2800_PHPHMILPOLC {
  Unk2800_FDLKPKFOIIK state = 10;
  uint32 Unk2800_CLOCMPFBGMD = 4;
}

// CmdId: 1072
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UnlockAvatarTalentReq {
  uint32 talent_id = 13;
  uint64 avatar_guid = 3;
}

// CmdId: 1098
// EnetChannelId: 0
// EnetIsReliable: true
message UnlockAvatarTalentRsp {
  uint32 talent_id = 2;
  int32 retcode = 3;
  uint64 avatar_guid = 10;
}

// CmdId: 1970
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UnlockCoopChapterReq {
  uint32 chapter_id = 3;
}

// CmdId: 1995
// EnetChannelId: 0
// EnetIsReliable: true
message UnlockCoopChapterRsp {
  uint32 chapter_id = 4;
  int32 retcode = 6;
}

// CmdId: 4006
// EnetChannelId: 0
// EnetIsReliable: true
message UnlockNameCardNotify {
  uint32 name_card_id = 8;
}

// CmdId: 449
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UnlockPersonalLineReq {
  uint32 personal_line_id = 4;
}

// CmdId: 491
// EnetChannelId: 0
// EnetIsReliable: true
message UnlockPersonalLineRsp {
  int32 retcode = 4;
  uint32 personal_line_id = 10;
  oneof param {
    uint32 level = 11;
    uint32 chapter_id = 6;
  }
}

// CmdId: 3035
// EnetChannelId: 1
// EnetIsReliable: true
// IsAllowClient: true
message UnlockTransPointReq {
  uint32 point_id = 12;
  uint32 scene_id = 10;
}

// CmdId: 3426
// EnetChannelId: 1
// EnetIsReliable: true
message UnlockTransPointRsp {
  int32 retcode = 12;
}

// CmdId: 4846
// EnetChannelId: 0
// EnetIsReliable: true
message UnlockedFurnitureFormulaDataNotify {
  repeated uint32 furniture_id_list = 15;
  bool is_all = 11;
}

// CmdId: 4454
// EnetChannelId: 0
// EnetIsReliable: true
message UnlockedFurnitureSuiteDataNotify {
  bool is_all = 10;
  repeated uint32 furniture_suite_id_list = 5;
}

// CmdId: 219
// EnetChannelId: 0
// EnetIsReliable: true
message UnmarkEntityInMinMapNotify {
  uint32 entity_id = 8;
}

// CmdId: 881
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UpdateAbilityCreatedMovingPlatformNotify {
  uint32 entity_id = 4;
  OpType op_type = 3;
  enum OpType {
    OP_TYPE_NONE = 0;
    OP_TYPE_ACTIVATE = 1;
    OP_TYPE_DEACTIVATE = 2;
  }
}

// CmdId: 4046
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UpdatePS4BlockListReq {
  repeated string psn_id_list = 10;
}

// CmdId: 4041
// EnetChannelId: 0
// EnetIsReliable: true
message UpdatePS4BlockListRsp {
  int32 retcode = 7;
}

// CmdId: 4039
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UpdatePS4FriendListNotify {
  repeated string psn_id_list = 15;
}

// CmdId: 4089
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UpdatePS4FriendListReq {
  repeated string psn_id_list = 4;
}

// CmdId: 4059
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UpdatePS4FriendListRsp {
  int32 retcode = 5;
  repeated string psn_id_list = 2;
}

// CmdId: 4067
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UpdatePlayerShowAvatarListReq {
  bool is_show_avatar = 15;
  repeated uint32 show_avatar_id_list = 13;
}

// CmdId: 4058
// EnetChannelId: 0
// EnetIsReliable: true
message UpdatePlayerShowAvatarListRsp {
  repeated uint32 show_avatar_id_list = 1;
  bool is_show_avatar = 3;
  int32 retcode = 10;
}

// CmdId: 4002
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UpdatePlayerShowNameCardListReq {
  repeated uint32 show_name_card_id_list = 15;
}

// CmdId: 4019
// EnetChannelId: 0
// EnetIsReliable: true
message UpdatePlayerShowNameCardListRsp {
  int32 retcode = 13;
  repeated uint32 show_name_card_id_list = 12;
}


// CmdId: 93
// EnetChannelId: 0
// EnetIsReliable: true
message UpdateRedPointNotify {
  repeated RedPointData red_point_list = 12;
}


// CmdId: 5091
// EnetChannelId: 0
// EnetIsReliable: true
message UpdateReunionWatcherNotify {
  uint32 mission_id = 3;
  ReunionWatcherInfo watcher_info = 10;
}

// CmdId: 8151
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UpgradeRoguelikeShikigamiReq {
  uint32 upgrade_level = 6;
  uint32 shikigami_group_id = 15;
}

// CmdId: 8966
// EnetChannelId: 0
// EnetIsReliable: true
message UpgradeRoguelikeShikigamiRsp {
  int32 retcode = 10;
  uint32 shikigami_group_id = 14;
  uint32 cur_level = 4;
}

// CmdId: 690
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UseItemReq {
  uint32 count = 13;
  uint64 target_guid = 14;
  uint64 guid = 10;
  bool is_enter_mp_dungeon_team = 15;
  uint32 option_idx = 7;
}

// CmdId: 673
// EnetChannelId: 0
// EnetIsReliable: true
message UseItemRsp {
  uint64 guid = 5;
  uint64 target_guid = 1;
  uint32 item_id = 4;
  uint32 option_idx = 8;
  int32 retcode = 14;
}


// CmdId: 5226
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UseMiracleRingReq {
  uint32 miracle_ring_op_type = 13;
  Vector pos = 8;
  Vector rot = 7;
  enum MiracleRingOpType {
    MIRACLE_RING_OP_TYPE_NONE = 0;
    MIRACLE_RING_OP_TYPE_PLACE = 1;
    MIRACLE_RING_OP_TYPE_RETRACT = 2;
  }
}

// CmdId: 5218
// EnetChannelId: 0
// EnetIsReliable: true
message UseMiracleRingRsp {
  int32 retcode = 11;
  uint32 miracle_ring_op_type = 7;
}


// CmdId: 4293
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UseWidgetCreateGadgetReq {
  Vector pos = 15;
  Vector rot = 12;
  uint32 material_id = 4;
}

// CmdId: 4290
// EnetChannelId: 0
// EnetIsReliable: true
message UseWidgetCreateGadgetRsp {
  int32 retcode = 15;
  uint32 material_id = 12;
}

// CmdId: 4286
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UseWidgetRetractGadgetReq {
  uint32 entity_id = 3;
}

// CmdId: 4261
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message UseWidgetRetractGadgetRsp {
  int32 retcode = 6;
  uint32 entity_id = 14;
}

message Vector {
  float x = 1;
  float y = 2;
  float z = 3;
}

message Vector3Int {
  int32 x = 1;
  int32 y = 2;
  int32 z = 3;
}

message VectorPlane {
  float x = 1;
  float y = 2;
}


message VehicleInfo {
  repeated VehicleMember member_list = 1;
  uint32 owner_uid = 2;
  float cur_stamina = 3;
}


// CmdId: 865
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message VehicleInteractReq {
  VehicleInteractType interact_type = 8;
  uint32 pos = 12;
  uint32 entity_id = 15;
}


// CmdId: 804
// EnetChannelId: 0
// EnetIsReliable: true
message VehicleInteractRsp {
  VehicleInteractType interact_type = 15;
  VehicleMember member = 3;
  uint32 entity_id = 2;
  int32 retcode = 1;
}

enum VehicleInteractType {
  VEHICLE_INTERACT_TYPE_NONE = 0;
  VEHICLE_INTERACT_TYPE_IN = 1;
  VEHICLE_INTERACT_TYPE_OUT = 2;
}


message VehicleLocationInfo {
  Vector rot = 14;
  uint32 entity_id = 15;
  float cur_hp = 11;
  uint32 owner_uid = 5;
  Vector pos = 1;
  repeated uint32 uid_list = 3;
  uint32 gadget_id = 13;
  float max_hp = 6;
}

message VehicleMember {
  uint32 uid = 1;
  uint64 avatar_guid = 2;
  uint32 pos = 3;
}

// CmdId: 834
// EnetChannelId: 0
// EnetIsReliable: true
message VehicleStaminaNotify {
  uint32 entity_id = 6;
  float cur_stamina = 14;
}


// CmdId: 4202
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message ViewCodexReq {
  repeated CodexTypeData type_data_list = 10;
}


// CmdId: 4201
// EnetChannelId: 0
// EnetIsReliable: true
message ViewCodexRsp {
  int32 retcode = 12;
  repeated uint32 Unk2800_IPOCJIPGNEJ = 10;
  repeated uint32 Unk2700_DFJJHFHHIHF = 3;
  repeated CodexTypeData type_data_list = 9;
  repeated uint32 Unk2800_OIPJCEPGJCF = 15;
}

enum VisionType {
  VISION_TYPE_NONE = 0;
  VISION_TYPE_MEET = 1;
  VISION_TYPE_REBORN = 2;
  VISION_TYPE_REPLACE = 3;
  VISION_TYPE_WAYPOINT_REBORN = 4;
  VISION_TYPE_MISS = 5;
  VISION_TYPE_DIE = 6;
  VISION_TYPE_GATHER_ESCAPE = 7;
  VISION_TYPE_REFRESH = 8;
  VISION_TYPE_TRANSPORT = 9;
  VISION_TYPE_REPLACE_DIE = 10;
  VISION_TYPE_REPLACE_NO_NOTIFY = 11;
  VISION_TYPE_BORN = 12;
  VISION_TYPE_PICKUP = 13;
  VISION_TYPE_REMOVE = 14;
  VISION_TYPE_CHANGE_COSTUME = 15;
  VISION_TYPE_FISH_REFRESH = 16;
  VISION_TYPE_FISH_BIG_SHOCK = 17;
  VISION_TYPE_FISH_QTE_SUCC = 18;
  VISION_TYPE_Unk2700_EPFKMOIPADB = 19;
}

// CmdId: 2272
// EnetChannelId: 0
// EnetIsReliable: true
message WatcherAllDataNotify {
  repeated uint32 watcher_list = 4;
}

// CmdId: 2298
// EnetChannelId: 0
// EnetIsReliable: true
message WatcherChangeNotify {
  repeated uint32 removed_watcher_list = 2;
  repeated uint32 new_watcher_list = 15;
}

// CmdId: 2212
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WatcherEventNotify {
  uint32 add_progress = 6;
  uint32 watcher_id = 9;
}

// CmdId: 2235
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WatcherEventTypeNotify {
  repeated uint32 param_list = 14;
  uint32 add_progress = 15;
  uint32 watcher_trigger_type = 11;
}

message WaterSpiritActivityDetailInfo {
  map<uint32, uint32> search_time_map = 9;
  uint32 region_search_id = 2;
  uint32 mp_play_id = 15;
}

// CmdId: 2025
// EnetChannelId: 0
// EnetIsReliable: true
message WaterSpritePhaseFinishNotify {}

message Weapon {
  uint32 level = 1;
  uint32 exp = 2;
  uint32 promote_level = 3;
  map<uint32, uint32> affix_map = 4;
}

// CmdId: 695
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WeaponAwakenReq {
  uint64 item_guid = 10;
  map<uint32, uint32> affix_level_map = 7;
  uint64 target_weapon_guid = 9;
}

// CmdId: 606
// EnetChannelId: 0
// EnetIsReliable: true
message WeaponAwakenRsp {
  int32 retcode = 9;
  uint64 avatar_guid = 10;
  map<uint32, uint32> old_affix_level_map = 4;
  uint32 target_weapon_awaken_level = 2;
  uint64 target_weapon_guid = 15;
  map<uint32, uint32> cur_affix_level_map = 11;
}

// CmdId: 622
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WeaponPromoteReq {
  uint64 target_weapon_guid = 5;
}

// CmdId: 665
// EnetChannelId: 0
// EnetIsReliable: true
message WeaponPromoteRsp {
  uint64 target_weapon_guid = 3;
  uint32 old_promote_level = 7;
  uint32 cur_promote_level = 12;
  int32 retcode = 4;
}


// CmdId: 639
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WeaponUpgradeReq {
  repeated uint64 food_weapon_guid_list = 1;
  repeated ItemParam item_param_list = 15;
  uint64 target_weapon_guid = 4;
}


// CmdId: 653
// EnetChannelId: 0
// EnetIsReliable: true
message WeaponUpgradeRsp {
  uint32 cur_level = 7;
  int32 retcode = 11;
  uint32 old_level = 8;
  repeated ItemParam item_param_list = 2;
  uint64 target_weapon_guid = 6;
}

// CmdId: 697
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WearEquipReq {
  uint64 equip_guid = 7;
  uint64 avatar_guid = 5;
}

// CmdId: 681
// EnetChannelId: 0
// EnetIsReliable: true
message WearEquipRsp {
  int32 retcode = 5;
  uint64 equip_guid = 1;
  uint64 avatar_guid = 7;
}

message WeatherInfo {
  uint32 weather_area_id = 1;
}


message WeekendDjinnInfo {
  Vector rot = 14;
  Vector pos = 10;
}

message WeeklyBossResinDiscountInfo {
  uint32 discount_num = 1;
  uint32 discount_num_limit = 2;
  uint32 resin_cost = 3;
  uint32 original_resin_cost = 4;
}


// CmdId: 4280
// EnetChannelId: 0
// EnetIsReliable: true
message WidgetActiveChangeNotify {
  repeated WidgetSlotData widget_data_list = 5;
}

message WidgetCameraInfo {
  uint32 target_entity_id = 4;
}

message WidgetCoolDownData {
  bool is_success = 5;
  uint64 cool_down_time = 4;
  uint32 id = 15;
}


// CmdId: 4295
// EnetChannelId: 0
// EnetIsReliable: true
message WidgetCoolDownNotify {
  repeated WidgetCoolDownData normal_cool_down_data_list = 1;
  repeated WidgetCoolDownData group_cool_down_data_list = 12;
}


message WidgetCreateLocationInfo {
  Vector rot = 3;
  Vector pos = 10;
}


message WidgetCreatorInfo {
  WidgetCreatorOpType op_type = 10;
  uint32 entity_id = 1;
  WidgetCreateLocationInfo location_info = 12;
}

enum WidgetCreatorOpType {
  WIDGET_CREATOR_OP_TYPE_NONE = 0;
  WIDGET_CREATOR_OP_TYPE_RETRACT = 1;
  WIDGET_CREATOR_OP_TYPE_RETRACT_AND_CREATE = 2;
}


// CmdId: 4255
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WidgetDoBagReq {
  uint32 material_id = 9;
  oneof op_info {
    WidgetCreateLocationInfo location_info = 832;
    WidgetCreatorInfo widget_creator_info = 1497;
  }
}

// CmdId: 4296
// EnetChannelId: 0
// EnetIsReliable: true
message WidgetDoBagRsp {
  int32 retcode = 10;
  uint32 material_id = 3;
}


// CmdId: 4284
// EnetChannelId: 0
// EnetIsReliable: true
message WidgetGadgetAllDataNotify {
  repeated WidgetGadgetData widget_gadget_data = 13;
}

message WidgetGadgetData {
  repeated uint32 gadget_entity_id_list = 1;
  uint32 gadget_id = 8;
}


// CmdId: 4266
// EnetChannelId: 0
// EnetIsReliable: true
message WidgetGadgetDataNotify {
  WidgetGadgetData widget_gadget_data = 12;
}

// CmdId: 4274
// EnetChannelId: 0
// EnetIsReliable: true
message WidgetGadgetDestroyNotify {
  uint32 entity_id = 15;
}

// CmdId: 4291
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WidgetReportReq {
  bool Unk2700_MFEHMLBNNAG = 5;
  bool is_client_collect = 14;
  bool is_clear_hint = 13;
  uint32 material_id = 15;
}

// CmdId: 4292
// EnetChannelId: 0
// EnetIsReliable: true
message WidgetReportRsp {
  int32 retcode = 14;
  uint32 material_id = 4;
}


// CmdId: 4267
// EnetChannelId: 0
// EnetIsReliable: true
message WidgetSlotChangeNotify {
  WidgetSlotOp op = 11;
  WidgetSlotData slot = 8;
}


message WidgetSlotData {
  uint32 cd_over_time = 9;
  WidgetSlotTag tag = 14;
  uint32 material_id = 11;
  bool is_active = 12;
}

enum WidgetSlotOp {
  WIDGET_SLOT_OP_ATTACH = 0;
  WIDGET_SLOT_OP_DETACH = 1;
}

enum WidgetSlotTag {
  WIDGET_SLOT_TAG_QUICK_USE = 0;
  WIDGET_SLOT_TAG_ATTACH_AVATAR = 1;
}

message WidgetThunderBirdFeatherInfo {
  repeated uint32 entity_id_list = 4;
}

// CmdId: 4258
// EnetChannelId: 0
// EnetIsReliable: true
message WidgetUseAttachAbilityGroupChangeNotify {
  bool is_attach = 6;
  uint32 material_id = 11;
}


// CmdId: 1199
// EnetChannelId: 0
// EnetIsReliable: true
message WindSeedClientNotify {
  oneof notify {
    RefreshNotify refresh_notify = 14;
    AddWindBulletNotify add_wind_bullet_notify = 6;
    AreaNotify area_notify = 4;
  }
  message RefreshNotify {
    uint32 refresh_num = 9;
  }
  message AddWindBulletNotify {
    Vector seed_pos = 6;
    uint32 catch_player_uid = 8;
    uint32 seed_entity_id = 7;
  }
  message AreaNotify {
    bytes area_code = 5;
    uint32 area_id = 10;
    uint32 area_type = 7;
  }
}


message WinterCampActivityDetailInfo {
  repeated Unk2700_MBIDJDLLBNM Unk2700_FBMHFJHDJNB = 9;
  Unk2700_DIEGJDEIDKO battle_info = 10;
  repeated uint32 Unk2700_GALHBPGEGNL = 8;
  repeated uint32 Unk2700_DKCGOPBHJHA = 14;
  repeated uint32 Unk2700_OOBOCEALLBE = 6;
  bool is_content_closed = 15;
  Unk2700_DIEGJDEIDKO explore_info = 11;
  repeated ItemParam Unk2700_CFENLEBIKGG = 2;
}

message WorktopInfo {
  repeated uint32 option_list = 1;
  bool is_guest_can_operate = 2;
}

// CmdId: 835
// EnetChannelId: 0
// EnetIsReliable: true
message WorktopOptionNotify {
  uint32 gadget_entity_id = 11;
  repeated uint32 option_list = 8;
}


// CmdId: 3518
// EnetChannelId: 0
// EnetIsReliable: true
message WorldAllRoutineTypeNotify {
  repeated WorldRoutineTypeInfo world_routine_type_list = 12;
}


// CmdId: 3308
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WorldDataNotify {
  map<uint32, PropValue> world_prop_map = 9;
  enum DataType {
    DATA_TYPE_NONE = 0;
    DATA_TYPE_WORLD_LEVEL = 1;
    DATA_TYPE_IS_IN_MP_MODE = 2;
  }
}


// CmdId: 2735
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WorldOwnerBlossomBriefInfoNotify {
  repeated BlossomBriefInfo brief_info_list = 13;
}


// CmdId: 2707
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WorldOwnerBlossomScheduleInfoNotify {
  BlossomScheduleInfo schedule_info = 3;
}


// CmdId: 102
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WorldOwnerDailyTaskNotify {
  uint32 filter_city_id = 2;
  repeated DailyTaskInfo task_list = 1;
}


// CmdId: 285
// EnetChannelId: 0
// EnetIsReliable: true
message WorldPlayerDieNotify {
  PlayerDieType die_type = 12;
  uint32 murderer_entity_id = 15;
  oneof entity {
    uint32 monster_id = 8;
    uint32 gadget_id = 4;
  }
}


// CmdId: 3116
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WorldPlayerInfoNotify {
  repeated uint32 player_uid_list = 11;
  repeated OnlinePlayerInfo player_info_list = 14;
}


// CmdId: 258
// EnetChannelId: 0
// EnetIsReliable: true
message WorldPlayerLocationNotify {
  repeated PlayerWorldLocationInfo player_world_loc_list = 8;
  repeated PlayerLocationInfo player_loc_list = 15;
}


// CmdId: 22
// EnetChannelId: 0
// EnetIsReliable: true
message WorldPlayerRTTNotify {
  repeated PlayerRTTInfo player_rtt_list = 1;
}

// CmdId: 225
// EnetChannelId: 0
// EnetIsReliable: true
// IsAllowClient: true
message WorldPlayerReviveReq {}

// CmdId: 278
// EnetChannelId: 0
// EnetIsReliable: true
message WorldPlayerReviveRsp {
  int32 retcode = 3;
}


// CmdId: 3507
// EnetChannelId: 0
// EnetIsReliable: true
message WorldRoutineChangeNotify {
  WorldRoutineInfo routine_info = 3;
  uint32 routine_type = 11;
}

message WorldRoutineInfo {
  uint32 progress = 4;
  bool is_finished = 14;
  uint32 finish_progress = 3;
  uint32 routine_id = 11;
}

// CmdId: 3502
// EnetChannelId: 0
// EnetIsReliable: true
message WorldRoutineTypeCloseNotify {
  uint32 routine_type = 7;
}


message WorldRoutineTypeInfo {
  uint32 routine_type = 13;
  uint32 next_refresh_time = 12;
  repeated WorldRoutineInfo world_routine_info_list = 3;
}


// CmdId: 3525
// EnetChannelId: 0
// EnetIsReliable: true
message WorldRoutineTypeRefreshNotify {
  WorldRoutineTypeInfo world_routine_type = 7;
}
